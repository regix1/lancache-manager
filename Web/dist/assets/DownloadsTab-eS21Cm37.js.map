{"version":3,"file":"DownloadsTab-eS21Cm37.js","sources":["../../src/components/common/VirtualizedList.tsx","../../src/components/downloads/DownloadsTab.tsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\n\r\ninterface VirtualizedListProps<T> {\r\n  items: T[];\r\n  height: number;\r\n  itemHeight: number;\r\n  renderItem: (item: T, index: number) => React.ReactNode;\r\n  overscan?: number;\r\n  className?: string;\r\n}\r\n\r\nfunction VirtualizedList<T>({\r\n  items,\r\n  height,\r\n  itemHeight,\r\n  renderItem,\r\n  overscan = 5,\r\n  className = ''\r\n}: VirtualizedListProps<T>) {\r\n  const parentRef = useRef<HTMLDivElement>(null);\r\n\r\n  const virtualizer = useVirtualizer({\r\n    count: items.length,\r\n    getScrollElement: () => parentRef.current,\r\n    estimateSize: () => itemHeight,\r\n    overscan\r\n  });\r\n\r\n  return (\r\n    <div ref={parentRef} className={`overflow-auto ${className}`} style={{ height: `${height}px` }}>\r\n      <div\r\n        style={{\r\n          height: `${virtualizer.getTotalSize()}px`,\r\n          width: '100%',\r\n          position: 'relative'\r\n        }}\r\n      >\r\n        {virtualizer.getVirtualItems().map((virtualItem) => (\r\n          <div\r\n            key={virtualItem.key}\r\n            style={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              width: '100%',\r\n              height: `${virtualItem.size}px`,\r\n              transform: `translateY(${virtualItem.start}px)`\r\n            }}\r\n          >\r\n            {renderItem(items[virtualItem.index], virtualItem.index)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VirtualizedList;\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport {\r\n  ChevronRight,\r\n  ChevronDown,\r\n  Gamepad2,\r\n  ExternalLink,\r\n  Database,\r\n  CloudOff,\r\n  Check,\r\n  AlertTriangle,\r\n  Layers,\r\n  Users,\r\n  Settings,\r\n  Download as DownloadIcon,\r\n  Loader\r\n} from 'lucide-react';\r\nimport { useData } from '../../contexts/DataContext';\r\nimport { formatBytes, formatPercent, formatDateTime } from '../../utils/formatters';\r\nimport VirtualizedList from '../common/VirtualizedList';\r\nimport { Alert } from '../ui/Alert';\r\nimport { Card } from '../ui/Card';\r\nimport type {\r\n  Download,\r\n  GameInfo,\r\n  DownloadGroup,\r\n  DownloadSettings,\r\n  DownloadType\r\n} from '../../types';\r\n\r\nconst STORAGE_KEYS = {\r\n  SERVICE_FILTER: 'lancache_downloads_service',\r\n  ITEMS_PER_PAGE: 'lancache_downloads_items',\r\n  GROUP_GAMES: 'lancache_downloads_group',\r\n  SHOW_METADATA: 'lancache_downloads_metadata',\r\n  SHOW_SMALL_FILES: 'lancache_downloads_show_small'\r\n};\r\n\r\ninterface DropdownOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface CustomDropdownProps {\r\n  options: DropdownOption[];\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n  className?: string;\r\n}\r\n\r\nconst CustomDropdown: React.FC<CustomDropdownProps> = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  placeholder = 'Select option',\r\n  className = ''\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const selectedOption = options.find((opt) => opt.value === value);\r\n\r\n  const handleSelect = (optionValue: string) => {\r\n    onChange(optionValue);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as Element;\r\n      if (!target.closest('.custom-dropdown')) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      event.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    } else if (event.key === 'Escape') {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`relative custom-dropdown ${className}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        onKeyDown={handleKeyDown}\r\n        className=\"w-full px-3 py-2 themed-input text-themed-primary text-left focus:outline-none hover:bg-themed-hover transition-colors flex items-center justify-between\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={isOpen}\r\n      >\r\n        <span className=\"truncate\">{selectedOption ? selectedOption.label : placeholder}</span>\r\n        <ChevronDown size={16} className={`transition-transform ${isOpen ? 'rotate-180' : ''}`} />\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <>\r\n          <div className=\"fixed inset-0 z-10\" onClick={() => setIsOpen(false)} />\r\n          <div className=\"absolute right-0 top-12 z-20 themed-card rounded-lg shadow-lg min-w-full max-h-60 overflow-y-auto\">\r\n            <div className=\"py-1\">\r\n              {options.map((option) => (\r\n                <button\r\n                  key={option.value}\r\n                  type=\"button\"\r\n                  onClick={() => handleSelect(option.value)}\r\n                  className={`w-full px-4 py-2 text-left text-sm hover:bg-themed-hover transition-colors ${\r\n                    option.value === value\r\n                      ? 'bg-themed-hover text-themed-accent'\r\n                      : 'text-themed-secondary'\r\n                  }`}\r\n                >\r\n                  {option.label}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DownloadsTab: React.FC = () => {\r\n  const { latestDownloads, mockMode, updateMockDataCount, updateApiDownloadCount } = useData();\r\n\r\n  const [expandedDownload, setExpandedDownload] = useState<number | null>(null);\r\n  const [expandedGroup, setExpandedGroup] = useState<string | null>(null);\r\n  const [gameInfo, setGameInfo] = useState<Record<number, GameInfo>>({});\r\n  const [loadingGame, setLoadingGame] = useState<number | null>(null);\r\n  const [settingsOpened, setSettingsOpened] = useState(false);\r\n\r\n  const [settings, setSettings] = useState<DownloadSettings>(() => ({\r\n    showZeroBytes: localStorage.getItem(STORAGE_KEYS.SHOW_METADATA) === 'true',\r\n    showSmallFiles: localStorage.getItem(STORAGE_KEYS.SHOW_SMALL_FILES) !== 'false',\r\n    selectedService: localStorage.getItem(STORAGE_KEYS.SERVICE_FILTER) || 'all',\r\n    itemsPerPage: (() => {\r\n      const saved = localStorage.getItem(STORAGE_KEYS.ITEMS_PER_PAGE);\r\n      return saved === 'unlimited' ? ('unlimited' as const) : saved ? parseInt(saved, 10) : 20;\r\n    })(),\r\n    groupGames: localStorage.getItem(STORAGE_KEYS.GROUP_GAMES) === 'true'\r\n  }));\r\n\r\n  const updateSettings = useCallback((updates: Partial<DownloadSettings>) => {\r\n    setSettings((prev) => ({ ...prev, ...updates }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEYS.SERVICE_FILTER, settings.selectedService);\r\n    localStorage.setItem(STORAGE_KEYS.ITEMS_PER_PAGE, settings.itemsPerPage.toString());\r\n    localStorage.setItem(STORAGE_KEYS.GROUP_GAMES, settings.groupGames.toString());\r\n    localStorage.setItem(STORAGE_KEYS.SHOW_METADATA, settings.showZeroBytes.toString());\r\n    localStorage.setItem(STORAGE_KEYS.SHOW_SMALL_FILES, settings.showSmallFiles.toString());\r\n  }, [settings]);\r\n\r\n  useEffect(() => {\r\n    const count = settings.itemsPerPage === 'unlimited' ? 100 : settings.itemsPerPage;\r\n    if (mockMode && updateMockDataCount) {\r\n      updateMockDataCount(count);\r\n    } else if (!mockMode && updateApiDownloadCount) {\r\n      updateApiDownloadCount(count);\r\n    }\r\n  }, [settings.itemsPerPage, mockMode, updateMockDataCount, updateApiDownloadCount]);\r\n\r\n  const availableServices = useMemo(() => {\r\n    const services = new Set(latestDownloads.map((d) => d.service.toLowerCase()));\r\n    return Array.from(services).sort();\r\n  }, [latestDownloads]);\r\n\r\n  const serviceOptions = useMemo(\r\n    () => [\r\n      { value: 'all', label: 'All Services' },\r\n      ...availableServices.map((s) => ({\r\n        value: s,\r\n        label: s.charAt(0).toUpperCase() + s.slice(1)\r\n      }))\r\n    ],\r\n    [availableServices]\r\n  );\r\n\r\n  const itemsPerPageOptions = useMemo(\r\n    () => [\r\n      { value: '20', label: '20 items' },\r\n      { value: '50', label: '50 items' },\r\n      { value: '100', label: '100 items' },\r\n      { value: '200', label: '200 items' },\r\n      { value: 'unlimited', label: 'Load All' }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const filteredDownloads = useMemo(() => {\r\n    let filtered = [...latestDownloads];\r\n\r\n    if (!settings.showZeroBytes) {\r\n      filtered = filtered.filter((d) => (d.totalBytes || 0) > 0);\r\n    }\r\n\r\n    if (!settings.showSmallFiles) {\r\n      filtered = filtered.filter(\r\n        (d) => (d.totalBytes || 0) === 0 || (d.totalBytes || 0) >= 1048576\r\n      );\r\n    }\r\n\r\n    if (settings.selectedService !== 'all') {\r\n      filtered = filtered.filter((d) => d.service.toLowerCase() === settings.selectedService);\r\n    }\r\n\r\n    return filtered;\r\n  }, [latestDownloads, settings]);\r\n\r\n  const groupedDownloads = useMemo((): DownloadGroup[] | null => {\r\n    if (!settings.groupGames) return null;\r\n\r\n    const groups: Record<string, DownloadGroup> = {};\r\n\r\n    filteredDownloads.forEach((download) => {\r\n      let groupKey: string;\r\n      let groupName: string;\r\n      let groupType: 'game' | 'metadata' | 'content';\r\n\r\n      if (download.gameName && download.gameName !== 'Unknown Steam Game') {\r\n        groupKey = `game-${download.gameName}`;\r\n        groupName = download.gameName;\r\n        groupType = 'game';\r\n      } else if ((download.totalBytes || 0) === 0) {\r\n        groupKey = `metadata-${download.service}`;\r\n        groupName = `${download.service} Metadata`;\r\n        groupType = 'metadata';\r\n      } else {\r\n        groupKey = `content-${download.service}`;\r\n        groupName = `${download.service} Content`;\r\n        groupType = 'content';\r\n      }\r\n\r\n      if (!groups[groupKey]) {\r\n        groups[groupKey] = {\r\n          id: groupKey,\r\n          name: groupName,\r\n          type: groupType,\r\n          service: download.service,\r\n          downloads: [],\r\n          totalBytes: 0,\r\n          cacheHitBytes: 0,\r\n          cacheMissBytes: 0,\r\n          clientsSet: new Set(),\r\n          firstSeen: download.startTime,\r\n          lastSeen: download.endTime || download.startTime,\r\n          count: 0,\r\n          clientCount: 0\r\n        };\r\n      }\r\n\r\n      groups[groupKey].downloads.push(download);\r\n      groups[groupKey].totalBytes += download.totalBytes || 0;\r\n      groups[groupKey].cacheHitBytes += download.cacheHitBytes || 0;\r\n      groups[groupKey].cacheMissBytes += download.cacheMissBytes || 0;\r\n      groups[groupKey].clientsSet.add(download.clientIp);\r\n      groups[groupKey].count++;\r\n\r\n      if (new Date(download.startTime) < new Date(groups[groupKey].firstSeen)) {\r\n        groups[groupKey].firstSeen = download.startTime;\r\n      }\r\n      if (download.endTime && new Date(download.endTime) > new Date(groups[groupKey].lastSeen)) {\r\n        groups[groupKey].lastSeen = download.endTime;\r\n      }\r\n    });\r\n\r\n    return Object.values(groups)\r\n      .map((group) => ({\r\n        ...group,\r\n        clientCount: group.clientsSet.size\r\n      }))\r\n      .sort((a, b) => b.totalBytes - a.totalBytes);\r\n  }, [filteredDownloads, settings.groupGames]);\r\n\r\n  const itemsToDisplay = useMemo(() => {\r\n    const items = settings.groupGames ? groupedDownloads : filteredDownloads;\r\n    if (!items) return [];\r\n\r\n    if (settings.itemsPerPage === 'unlimited') {\r\n      return items;\r\n    }\r\n    const limit = typeof settings.itemsPerPage === 'number' ? settings.itemsPerPage : 50;\r\n    return items.slice(0, limit);\r\n  }, [settings.groupGames, settings.itemsPerPage, groupedDownloads, filteredDownloads]);\r\n\r\n  const getDownloadTypeInfo = (download: Download): DownloadType => {\r\n    const bytes = download.totalBytes || 0;\r\n    const serviceName = download.service.charAt(0).toUpperCase() + download.service.slice(1);\r\n\r\n    if (bytes === 0) {\r\n      return {\r\n        type: 'metadata',\r\n        label: download.clientIp === '127.0.0.1' ? `${serviceName} Service` : 'Metadata',\r\n        icon: Database\r\n      };\r\n    }\r\n\r\n    if (\r\n      download.service.toLowerCase() === 'steam' &&\r\n      download.gameName &&\r\n      download.gameName !== 'Unknown Steam Game'\r\n    ) {\r\n      return { type: 'game', label: download.gameName, icon: Gamepad2 };\r\n    }\r\n\r\n    if (bytes < 1048576) {\r\n      return { type: 'metadata', label: `${serviceName} Update`, icon: Database };\r\n    }\r\n\r\n    return { type: 'content', label: `${serviceName} Content`, icon: CloudOff };\r\n  };\r\n\r\n  const getHitRateColor = (percent: number): string => {\r\n    if (percent >= 75) return 'progress-bar-high';\r\n    if (percent >= 50) return 'progress-bar-medium';\r\n    if (percent >= 25) return 'progress-bar-low';\r\n    return 'progress-bar-critical';\r\n  };\r\n\r\n  const isDownloadGroup = (item: Download | DownloadGroup): item is DownloadGroup => {\r\n    return 'downloads' in item;\r\n  };\r\n\r\n  const handleDownloadClick = async (download: Download) => {\r\n    if (\r\n      download.service.toLowerCase() !== 'steam' ||\r\n      (download.totalBytes || 0) === 0 ||\r\n      !download.id\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setExpandedDownload(expandedDownload === download.id ? null : download.id);\r\n\r\n    if (expandedDownload !== download.id && !gameInfo[download.id]) {\r\n      if (mockMode) {\r\n        setGameInfo((prev) => ({\r\n          ...prev,\r\n          [download.id]: {\r\n            downloadId: download.id,\r\n            service: 'steam',\r\n            appId: 730,\r\n            gameName: 'Counter-Strike 2',\r\n            gameType: 'game',\r\n            headerImage: 'https://cdn.akamai.steamstatic.com/steam/apps/730/header.jpg',\r\n            description: 'Counter-Strike 2 is a tactical shooter.',\r\n            totalBytes: download.totalBytes,\r\n            cacheHitBytes: download.cacheHitBytes,\r\n            cacheMissBytes: download.cacheMissBytes,\r\n            cacheHitPercent: download.cacheHitPercent\r\n          }\r\n        }));\r\n      } else {\r\n        try {\r\n          setLoadingGame(download.id);\r\n          const response = await fetch(`/api/gameinfo/download/${download.id}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setGameInfo((prev) => ({ ...prev, [download.id]: data }));\r\n          }\r\n        } catch (err) {\r\n          console.error('Error fetching game info:', err);\r\n        } finally {\r\n          setLoadingGame(null);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGroupClick = (groupId: string) => {\r\n    setExpandedGroup(expandedGroup === groupId ? null : groupId);\r\n  };\r\n\r\n  const renderGroup = useCallback(\r\n    (group: DownloadGroup) => {\r\n      const isExpanded = expandedGroup === group.id;\r\n      const hitPercent = group.totalBytes > 0 ? (group.cacheHitBytes / group.totalBytes) * 100 : 0;\r\n\r\n      return (\r\n        <Card key={group.id} padding=\"md\">\r\n          <div onClick={() => handleGroupClick(group.id)} className=\"cursor-pointer\">\r\n            <div className=\"grid grid-cols-12 gap-4\">\r\n              <div className=\"col-span-12 sm:col-span-4 md:col-span-3\">\r\n                <p className=\"text-xs text-themed-muted\">Group</p>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <ChevronRight\r\n                    size={16}\r\n                    className={`transition-transform ${isExpanded ? 'rotate-90' : ''}`}\r\n                  />\r\n                  <div className=\"w-6 h-6 rounded bg-themed-secondary flex items-center justify-center\">\r\n                    <Layers size={14} className=\"text-themed-accent\" />\r\n                  </div>\r\n                  <span className=\"text-sm font-medium text-themed-accent\">{group.name}</span>\r\n                </div>\r\n                <p className=\"text-xs text-themed-muted\">{group.count} items</p>\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-4 md:col-span-3\">\r\n                <p className=\"text-xs text-themed-muted\">Size</p>\r\n                <p className=\"text-sm font-medium\">\r\n                  {group.totalBytes > 0 ? formatBytes(group.totalBytes) : 'Metadata'}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-4 md:col-span-3\">\r\n                <p className=\"text-xs text-themed-muted\">Clients</p>\r\n                <div className=\"flex items-center gap-1\">\r\n                  <Users size={14} />\r\n                  <span className=\"text-sm\">{group.clientCount || 0}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-span-12 md:col-span-3\">\r\n                <p className=\"text-xs text-themed-muted\">Cache Hit</p>\r\n                {group.totalBytes > 0 ? (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"flex-1 progress-track rounded-full h-2 overflow-hidden\">\r\n                      <div\r\n                        className={`h-full ${getHitRateColor(hitPercent)}`}\r\n                        style={{ width: `${hitPercent}%` }}\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-sm\">{formatPercent(hitPercent)}</span>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-sm text-themed-muted\">N/A</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <>\r\n              <div className=\"border-t border-themed-secondary my-4\" />\r\n              <div className=\"max-h-72 overflow-y-auto\">\r\n                <div className=\"space-y-2\">\r\n                  {group.downloads.map((d) => (\r\n                    <div key={d.id} className=\"p-2 bg-themed-tertiary rounded\">\r\n                      <div className=\"grid grid-cols-4 gap-2\">\r\n                        <span className=\"text-xs\">{d.clientIp}</span>\r\n                        <span className=\"text-xs\">{formatBytes(d.totalBytes)}</span>\r\n                        <span className=\"text-xs\">{formatPercent(d.cacheHitPercent || 0)}</span>\r\n                        <span className=\"text-xs\">{formatDateTime(d.startTime)}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Card>\r\n      );\r\n    },\r\n    [expandedGroup]\r\n  );\r\n\r\n  const renderDownload = useCallback(\r\n    (download: Download) => {\r\n      const isExpanded = expandedDownload === download.id;\r\n      const isSteam = download.service.toLowerCase() === 'steam';\r\n      const hasData = (download.totalBytes || 0) > 0;\r\n      const downloadType = getDownloadTypeInfo(download);\r\n      const IconComponent = downloadType.icon;\r\n      const game = download.id ? gameInfo[download.id] : undefined;\r\n\r\n      return (\r\n        <Card key={download.id} padding=\"md\" className={isSteam && hasData ? 'cursor-pointer' : ''}>\r\n          <div onClick={() => (isSteam && hasData ? handleDownloadClick(download) : undefined)}>\r\n            <div className=\"grid grid-cols-12 gap-4\">\r\n              <div className=\"col-span-12 sm:col-span-4 md:col-span-3\">\r\n                <p className=\"text-xs text-themed-muted\">Service</p>\r\n                <div className=\"flex items-center gap-2\">\r\n                  {isSteam && hasData && (\r\n                    <ChevronRight\r\n                      size={16}\r\n                      className={`transition-transform ${isExpanded ? 'rotate-90' : ''}`}\r\n                    />\r\n                  )}\r\n                  <span className={`text-sm font-medium service-${download.service.toLowerCase()}`}>\r\n                    {download.service}\r\n                  </span>\r\n                  <div\r\n                    className={`w-6 h-6 rounded flex items-center justify-center ${\r\n                      downloadType.type === 'game'\r\n                        ? 'download-game'\r\n                        : downloadType.type === 'metadata'\r\n                          ? 'download-metadata'\r\n                          : 'download-content'\r\n                    }`}\r\n                  >\r\n                    <IconComponent\r\n                      size={14}\r\n                      className={\r\n                        downloadType.type === 'game'\r\n                          ? 'text-themed-primary'\r\n                          : downloadType.type === 'metadata'\r\n                            ? 'text-themed-muted'\r\n                            : 'text-themed-primary'\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {downloadType.label && (\r\n                  <p className=\"text-xs text-themed-muted truncate\">{downloadType.label}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-4 md:col-span-2\">\r\n                <p className=\"text-xs text-themed-muted\">Client</p>\r\n                <p className=\"text-sm\">{download.clientIp}</p>\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-4 md:col-span-2\">\r\n                <p className=\"text-xs text-themed-muted\">Size</p>\r\n                <p className={`text-sm ${hasData ? 'font-medium' : ''}`}>\r\n                  {hasData ? formatBytes(download.totalBytes) : 'Metadata'}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-span-12 sm:col-span-6 md:col-span-3\">\r\n                <p className=\"text-xs text-themed-muted\">Cache Hit</p>\r\n                {hasData ? (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"flex-1 progress-track rounded-full h-2 overflow-hidden\">\r\n                      <div\r\n                        className={`h-full ${getHitRateColor(download.cacheHitPercent || 0)}`}\r\n                        style={{ width: `${download.cacheHitPercent || 0}%` }}\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-sm\">{formatPercent(download.cacheHitPercent || 0)}</span>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-sm text-themed-muted\">N/A</p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"col-span-12 sm:col-span-6 md:col-span-2\">\r\n                <p className=\"text-xs text-themed-muted\">Status</p>\r\n                {download.isActive ? (\r\n                  <span className=\"status-active inline-flex items-center gap-1 px-2 py-1 text-xs rounded\">\r\n                    <DownloadIcon size={12} />\r\n                    Active\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"status-completed inline-flex items-center gap-1 px-2 py-1 text-xs rounded\">\r\n                    <Check size={12} />\r\n                    Done\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {isExpanded && game && (\r\n              <>\r\n                <div className=\"border-t border-themed-secondary my-4\" />\r\n                {loadingGame === download.id ? (\r\n                  <div className=\"flex justify-center py-4\">\r\n                    <Loader className=\"w-6 h-6 animate-spin\" />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex gap-6 items-start\">\r\n                    {game.headerImage && (\r\n                      <div className=\"flex-shrink-0\">\r\n                        <img\r\n                          src={game.headerImage}\r\n                          alt={game.gameName}\r\n                          className=\"rounded w-56 object-cover shadow-lg\"\r\n                          style={{ height: '107px' }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h3 className=\"text-lg font-semibold text-themed-primary mb-3 truncate\">\r\n                        {game.gameName}\r\n                      </h3>\r\n                      {game.description && (\r\n                        <p className=\"text-sm text-themed-muted mb-4 line-clamp-3\">\r\n                          {game.description.length > 200\r\n                            ? `${game.description.substring(0, 200)}...`\r\n                            : game.description}\r\n                        </p>\r\n                      )}\r\n                      {game.appId && (\r\n                        <a\r\n                          href={`https://store.steampowered.com/app/${game.appId}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"inline-flex items-center gap-2 text-sm text-themed-accent hover:text-themed-primary transition-colors font-medium\"\r\n                        >\r\n                          View on Steam <ExternalLink size={16} />\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      );\r\n    },\r\n    [expandedDownload, gameInfo, loadingGame]\r\n  );\r\n\r\n  const renderVirtualItem = useCallback(\r\n    (item: Download | DownloadGroup) => {\r\n      return isDownloadGroup(item) ? renderGroup(item) : renderDownload(item);\r\n    },\r\n    [renderGroup, renderDownload]\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h2 className=\"text-2xl font-semibold text-themed-primary\">Downloads</h2>\r\n        <div className=\"flex items-center gap-3\">\r\n          <CustomDropdown\r\n            options={serviceOptions}\r\n            value={settings.selectedService}\r\n            onChange={(value) => updateSettings({ selectedService: value })}\r\n            className=\"min-w-[140px]\"\r\n          />\r\n\r\n          <CustomDropdown\r\n            options={itemsPerPageOptions}\r\n            value={settings.itemsPerPage.toString()}\r\n            onChange={(value) =>\r\n              updateSettings({\r\n                itemsPerPage: value === 'unlimited' ? 'unlimited' : parseInt(value)\r\n              })\r\n            }\r\n            className=\"min-w-[120px]\"\r\n          />\r\n\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={() => setSettingsOpened(!settingsOpened)}\r\n              className=\"p-2.5 themed-button-primary rounded transition-colors\"\r\n            >\r\n              <Settings size={20} />\r\n            </button>\r\n\r\n            {settingsOpened && (\r\n              <>\r\n                <div className=\"fixed inset-0 z-10\" onClick={() => setSettingsOpened(false)} />\r\n                <div className=\"absolute right-0 top-12 z-20 themed-card rounded-lg p-4 shadow-lg min-w-[200px]\">\r\n                  <div className=\"space-y-3\">\r\n                    <p className=\"text-sm font-medium\">Settings</p>\r\n                    <label className=\"flex items-center gap-2\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={settings.groupGames}\r\n                        onChange={(e) => updateSettings({ groupGames: e.target.checked })}\r\n                        className=\"rounded border-themed-secondary\"\r\n                      />\r\n                      <span className=\"text-sm\">Group similar items</span>\r\n                    </label>\r\n                    <label className=\"flex items-center gap-2\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={settings.showZeroBytes}\r\n                        onChange={(e) => updateSettings({ showZeroBytes: e.target.checked })}\r\n                        className=\"rounded border-themed-secondary\"\r\n                      />\r\n                      <span className=\"text-sm\">Show 0-byte requests</span>\r\n                    </label>\r\n                    <label className=\"flex items-center gap-2\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={settings.showSmallFiles}\r\n                        onChange={(e) => updateSettings({ showSmallFiles: e.target.checked })}\r\n                        className=\"rounded border-themed-secondary\"\r\n                      />\r\n                      <span className=\"text-sm\">Show small files</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {itemsToDisplay.length === 0 && (\r\n        <div className=\"flex flex-col items-center justify-center py-12\">\r\n          <div className=\"w-16 h-16 rounded-full bg-themed-tertiary flex items-center justify-center mb-4\">\r\n            <CloudOff size={32} className=\"text-themed-muted\" />\r\n          </div>\r\n          <p className=\"text-themed-muted\">No downloads found</p>\r\n        </div>\r\n      )}\r\n\r\n      {itemsToDisplay.length > 0 && (\r\n        <>\r\n          {settings.itemsPerPage === 'unlimited' && itemsToDisplay.length > 100 ? (\r\n            <VirtualizedList\r\n              items={itemsToDisplay}\r\n              height={window.innerHeight - 250}\r\n              itemHeight={120}\r\n              renderItem={renderVirtualItem}\r\n              overscan={3}\r\n            />\r\n          ) : (\r\n            <div className=\"space-y-3 max-h-[calc(100vh-250px)] overflow-y-auto custom-scrollbar\">\r\n              {itemsToDisplay.map((item) =>\r\n                isDownloadGroup(item) ? renderGroup(item) : renderDownload(item)\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {settings.itemsPerPage === 'unlimited' && itemsToDisplay.length > 500 && (\r\n        <Alert color=\"yellow\" icon={<AlertTriangle className=\"w-5 h-5\" />}>\r\n          Loading {itemsToDisplay.length} items. Performance optimized with virtual scrolling.\r\n        </Alert>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadsTab;\r\n"],"names":["VirtualizedList","items","height","itemHeight","renderItem","overscan","className","parentRef","useRef","virtualizer","useVirtualizer","jsx","virtualItem","STORAGE_KEYS","CustomDropdown","options","value","onChange","placeholder","isOpen","setIsOpen","useState","selectedOption","opt","handleSelect","optionValue","useEffect","handleClickOutside","event","handleKeyDown","jsxs","ChevronDown","Fragment","option","DownloadsTab","latestDownloads","mockMode","updateMockDataCount","updateApiDownloadCount","useData","expandedDownload","setExpandedDownload","expandedGroup","setExpandedGroup","gameInfo","setGameInfo","loadingGame","setLoadingGame","settingsOpened","setSettingsOpened","settings","setSettings","saved","updateSettings","useCallback","updates","prev","count","availableServices","useMemo","services","d","serviceOptions","itemsPerPageOptions","filteredDownloads","filtered","groupedDownloads","groups","download","groupKey","groupName","groupType","group","a","b","itemsToDisplay","limit","getDownloadTypeInfo","bytes","serviceName","Database","Gamepad2","CloudOff","getHitRateColor","percent","isDownloadGroup","item","handleDownloadClick","response","data","err","handleGroupClick","groupId","renderGroup","isExpanded","hitPercent","Card","ChevronRight","Layers","formatBytes","Users","formatPercent","formatDateTime","renderDownload","isSteam","hasData","downloadType","IconComponent","game","DownloadIcon","Check","Loader","ExternalLink","renderVirtualItem","Settings","e","Alert","AlertTriangle"],"mappings":"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"}