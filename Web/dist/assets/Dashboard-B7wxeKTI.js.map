{"version":3,"file":"Dashboard-B7wxeKTI.js","sources":["../../src/components/common/StatCard.tsx","../../src/components/dashboard/EnhancedServiceChart.tsx","../../src/components/dashboard/RecentDownloadsPanel.tsx","../../src/components/dashboard/TopClientsTable.tsx","../../src/components/dashboard/Dashboard.tsx"],"sourcesContent":["// StatCard.tsx - Updated component without gradient backgrounds\r\nimport React from 'react';\r\nimport { type LucideIcon } from 'lucide-react';\r\n\r\ninterface StatCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  subtitle?: string;\r\n  icon: LucideIcon;\r\n  color: 'blue' | 'green' | 'emerald' | 'purple' | 'indigo' | 'orange' | 'yellow' | 'cyan' | 'red';\r\n  tooltip?: string;\r\n}\r\n\r\nconst StatCard: React.FC<StatCardProps> = ({\r\n  title,\r\n  value,\r\n  subtitle,\r\n  icon: Icon,\r\n  color,\r\n  tooltip\r\n}) => {\r\n  // Map color names to CSS variables\r\n  const getIconBackground = (color: string): string => {\r\n    const colorMap: Record<string, string> = {\r\n      blue: 'var(--theme-icon-blue)',\r\n      green: 'var(--theme-icon-green)',\r\n      emerald: 'var(--theme-icon-emerald)',\r\n      purple: 'var(--theme-icon-purple)',\r\n      indigo: 'var(--theme-icon-indigo)',\r\n      orange: 'var(--theme-icon-orange)',\r\n      yellow: 'var(--theme-icon-yellow)',\r\n      cyan: 'var(--theme-icon-cyan)',\r\n      red: 'var(--theme-icon-red)'\r\n    };\r\n    return colorMap[color] || colorMap.blue;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"rounded-lg p-4 border transition-all hover:shadow-lg\"\r\n      style={{\r\n        backgroundColor: 'var(--theme-card-bg)',\r\n        borderColor: 'var(--theme-card-border)'\r\n      }}\r\n      title={tooltip}\r\n      data-stat-card={title.toLowerCase().replace(/\\s+/g, '')}\r\n    >\r\n      <div className=\"flex items-start justify-between\">\r\n        <div className=\"flex-1\">\r\n          <p className=\"text-sm font-medium\" style={{ color: 'var(--theme-text-muted)' }}>\r\n            {title}\r\n          </p>\r\n          <p className=\"text-2xl font-bold mt-1\" style={{ color: 'var(--theme-text-primary)' }}>\r\n            {value}\r\n          </p>\r\n          {subtitle && (\r\n            <p className=\"text-xs mt-1\" style={{ color: 'var(--theme-text-secondary)' }}>\r\n              {subtitle}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"p-3 rounded-lg\"\r\n          style={{\r\n            backgroundColor: getIconBackground(color)\r\n          }}\r\n        >\r\n          <Icon className=\"w-6 h-6\" style={{ color: '#ffffff' }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatCard;\r\n","import React, { useEffect, useRef, useState, useMemo } from 'react';\r\nimport { ChevronLeft, ChevronRight, Maximize2, Minimize2, Info } from 'lucide-react';\r\nimport { formatBytes } from '../../utils/formatters';\r\nimport { Card } from '../ui/Card';\r\nimport Chart from 'chart.js/auto';\r\n\r\ninterface EnhancedServiceChartProps {\r\n  serviceStats: any[];\r\n  timeRange?: string;\r\n}\r\n\r\nconst EnhancedServiceChart: React.FC<EnhancedServiceChartProps> = ({ serviceStats }) => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [chartSize, setChartSize] = useState(100);\r\n  const chartRef = useRef<HTMLCanvasElement>(null);\r\n  const chartInstance = useRef<Chart | null>(null);\r\n  const prevDataRef = useRef<string>('');\r\n\r\n  const tabs = [\r\n    { name: 'Service Distribution', id: 'service' },\r\n    { name: 'Cache Hit Ratio', id: 'hit-ratio' },\r\n    { name: 'Bandwidth Saved', id: 'bandwidth' }\r\n  ];\r\n\r\n  // Function to get chart colors from CSS variables\r\n  const getChartColors = () => {\r\n    const computedStyle = getComputedStyle(document.documentElement);\r\n    return [\r\n      computedStyle.getPropertyValue('--theme-chart-1').trim() || '#3b82f6',\r\n      computedStyle.getPropertyValue('--theme-chart-2').trim() || '#10b981',\r\n      computedStyle.getPropertyValue('--theme-chart-3').trim() || '#f59e0b',\r\n      computedStyle.getPropertyValue('--theme-chart-4').trim() || '#ef4444',\r\n      computedStyle.getPropertyValue('--theme-chart-5').trim() || '#8b5cf6',\r\n      computedStyle.getPropertyValue('--theme-chart-6').trim() || '#06b6d4',\r\n      computedStyle.getPropertyValue('--theme-chart-7').trim() || '#f97316',\r\n      computedStyle.getPropertyValue('--theme-chart-8').trim() || '#ec4899'\r\n    ];\r\n  };\r\n\r\n  const getServiceDistributionData = useMemo(() => {\r\n    if (!serviceStats || serviceStats.length === 0) return { labels: [], data: [], colors: [] };\r\n\r\n    const totalBytes = serviceStats.reduce((sum, s) => sum + (s.totalBytes || 0), 0);\r\n    if (totalBytes === 0) return { labels: [], data: [], colors: [] };\r\n\r\n    const chartColors = getChartColors();\r\n\r\n    const sorted = serviceStats\r\n      .map((s) => ({\r\n        name: s.service,\r\n        value: s.totalBytes,\r\n        percentage: (s.totalBytes / totalBytes) * 100\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n\r\n    return {\r\n      labels: sorted.map((s) => s.name),\r\n      data: sorted.map((s) => s.value),\r\n      colors: sorted.map((_, i) => chartColors[i % chartColors.length])\r\n    };\r\n  }, [serviceStats]);\r\n\r\n  const getCacheHitRatioData = useMemo(() => {\r\n    if (!serviceStats || serviceStats.length === 0) return { labels: [], data: [], colors: [] };\r\n\r\n    const totalHits = serviceStats.reduce((sum, s) => sum + (s.totalCacheHitBytes || 0), 0);\r\n    const totalMisses = serviceStats.reduce((sum, s) => sum + (s.totalCacheMissBytes || 0), 0);\r\n    const total = totalHits + totalMisses;\r\n\r\n    if (total === 0) return { labels: [], data: [], colors: [] };\r\n\r\n    const computedStyle = getComputedStyle(document.documentElement);\r\n    const hitColor = computedStyle.getPropertyValue('--theme-chart-cache-hit').trim() || '#10b981';\r\n    const missColor =\r\n      computedStyle.getPropertyValue('--theme-chart-cache-miss').trim() || '#f59e0b';\r\n\r\n    return {\r\n      labels: ['Cache Hits', 'Cache Misses'],\r\n      data: [totalHits, totalMisses],\r\n      colors: [hitColor, missColor]\r\n    };\r\n  }, [serviceStats]);\r\n\r\n  const getBandwidthSavedData = useMemo(() => {\r\n    if (!serviceStats || serviceStats.length === 0) return { labels: [], data: [], colors: [] };\r\n\r\n    // Calculate bandwidth saved per service (cache hits only)\r\n    const servicesWithSavings = serviceStats\r\n      .map((s) => ({\r\n        name: s.service,\r\n        value: s.totalCacheHitBytes || 0,\r\n        percentage: 0\r\n      }))\r\n      .filter((s) => s.value > 0)\r\n      .sort((a, b) => b.value - a.value);\r\n\r\n    const totalSaved = servicesWithSavings.reduce((sum, s) => sum + s.value, 0);\r\n\r\n    if (totalSaved === 0) return { labels: [], data: [], colors: [] };\r\n\r\n    // Update percentages\r\n    servicesWithSavings.forEach((s) => {\r\n      s.percentage = (s.value / totalSaved) * 100;\r\n    });\r\n\r\n    const chartColors = getChartColors();\r\n\r\n    return {\r\n      labels: servicesWithSavings.map((s) => s.name),\r\n      data: servicesWithSavings.map((s) => s.value),\r\n      colors: servicesWithSavings.map((_, i) => chartColors[i % chartColors.length])\r\n    };\r\n  }, [serviceStats]);\r\n\r\n  const chartData = useMemo(() => {\r\n    switch (tabs[activeTab]?.id) {\r\n      case 'service':\r\n        return getServiceDistributionData;\r\n      case 'hit-ratio':\r\n        return getCacheHitRatioData;\r\n      case 'bandwidth':\r\n        return getBandwidthSavedData;\r\n      default:\r\n        return getServiceDistributionData;\r\n    }\r\n  }, [activeTab, getServiceDistributionData, getCacheHitRatioData, getBandwidthSavedData]);\r\n\r\n  // Get chart description and stats based on active tab\r\n  const getChartInfo = useMemo(() => {\r\n    const tabId = tabs[activeTab]?.id;\r\n    const totalBytes = serviceStats.reduce((sum, s) => sum + (s.totalBytes || 0), 0);\r\n    const totalHits = serviceStats.reduce((sum, s) => sum + (s.totalCacheHitBytes || 0), 0);\r\n    const totalMisses = serviceStats.reduce((sum, s) => sum + (s.totalCacheMissBytes || 0), 0);\r\n    const hitRatio = totalBytes > 0 ? ((totalHits / totalBytes) * 100).toFixed(1) : '0';\r\n\r\n    switch (tabId) {\r\n      case 'service':\r\n        return {\r\n          title: 'Total Data by Service',\r\n          description:\r\n            'Shows the distribution of all data transferred across different gaming services',\r\n          stats: [\r\n            { label: 'Total Data', value: formatBytes(totalBytes) },\r\n            { label: 'Services', value: serviceStats.length },\r\n            { label: 'Hit Ratio', value: `${hitRatio}%` }\r\n          ]\r\n        };\r\n      case 'hit-ratio':\r\n        return {\r\n          title: 'Cache Performance',\r\n          description:\r\n            'Ratio of data served from cache (hits) vs downloaded from internet (misses)',\r\n          stats: [\r\n            { label: 'Cache Hits', value: formatBytes(totalHits) },\r\n            { label: 'Cache Misses', value: formatBytes(totalMisses) },\r\n            { label: 'Efficiency', value: `${hitRatio}%` }\r\n          ]\r\n        };\r\n      case 'bandwidth':\r\n        return {\r\n          title: 'Internet Bandwidth Saved',\r\n          description: 'Amount of internet bandwidth saved by serving cached content locally',\r\n          stats: [\r\n            { label: 'Total Saved', value: formatBytes(totalHits) },\r\n            {\r\n              label: 'Downloads Avoided',\r\n              value: Math.round(totalHits / (50 * 1024 * 1024 * 1024)) || '0'\r\n            }, // Rough estimate assuming 50GB average game size\r\n            { label: 'Cache Efficiency', value: `${hitRatio}%` }\r\n          ]\r\n        };\r\n      default:\r\n        return {\r\n          title: '',\r\n          description: '',\r\n          stats: []\r\n        };\r\n    }\r\n  }, [activeTab, serviceStats]);\r\n\r\n  // Listen for theme changes\r\n  useEffect(() => {\r\n    const handleThemeChange = () => {\r\n      // Force re-render of chart with new colors\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n        chartInstance.current = null;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('themechange', handleThemeChange);\r\n    return () => window.removeEventListener('themechange', handleThemeChange);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartRef.current || chartData.labels.length === 0) return;\r\n\r\n    // Check if data actually changed to prevent unnecessary animations\r\n    const currentDataString = JSON.stringify({\r\n      labels: chartData.labels,\r\n      data: chartData.data\r\n    });\r\n\r\n    const dataChanged = currentDataString !== prevDataRef.current;\r\n    prevDataRef.current = currentDataString;\r\n\r\n    // Destroy existing chart\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n\r\n    // Get colors from CSS variables\r\n    const computedStyle = getComputedStyle(document.documentElement);\r\n    const borderColor = computedStyle.getPropertyValue('--theme-chart-border').trim() || '#1f2937';\r\n    const textColor = computedStyle.getPropertyValue('--theme-chart-text').trim() || '#9ca3af';\r\n\r\n    // Create new chart\r\n    const ctx = chartRef.current.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: chartData.labels,\r\n        datasets: [\r\n          {\r\n            data: chartData.data,\r\n            backgroundColor: chartData.colors,\r\n            borderColor: borderColor,\r\n            borderWidth: 2,\r\n            borderRadius: 0,\r\n            spacing: 0\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        aspectRatio: 1,\r\n        layout: {\r\n          padding: 0\r\n        },\r\n        animation: {\r\n          // Only animate when data actually changes or on initial load\r\n          animateRotate: dataChanged,\r\n          animateScale: false,\r\n          duration: dataChanged ? 750 : 0\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          tooltip: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n            titleColor: '#ffffff',\r\n            bodyColor: textColor,\r\n            borderColor: borderColor,\r\n            borderWidth: 1,\r\n            cornerRadius: 6,\r\n            padding: 12,\r\n            displayColors: true,\r\n            callbacks: {\r\n              label: (context) => {\r\n                const value = context.raw as number;\r\n                const total = context.dataset.data.reduce(\r\n                  (a, b) => (a as number) + (b as number),\r\n                  0\r\n                ) as number;\r\n                const percentage = ((value / total) * 100).toFixed(1);\r\n\r\n                // Different labels based on the chart type\r\n                const tabId = tabs[activeTab]?.id;\r\n                if (tabId === 'bandwidth') {\r\n                  return `${context.label}: ${formatBytes(value)} saved (${percentage}%)`;\r\n                } else if (tabId === 'hit-ratio') {\r\n                  return `${context.label}: ${formatBytes(value)} (${percentage}%)`;\r\n                } else {\r\n                  return `${context.label}: ${formatBytes(value)} (${percentage}%)`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        cutout: '50%', // Makes the donut hole consistent\r\n        radius: '90%' // Ensures the chart uses most of the available space\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n    };\r\n  }, [chartData, chartSize, activeTab]);\r\n\r\n  // Calculate the actual chart container height\r\n  const chartContainerHeight = 200 + (chartSize - 100) * 2;\r\n\r\n  return (\r\n    <Card padding=\"none\">\r\n      <div className=\"p-6 pb-4\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              onClick={() => setActiveTab((prev) => (prev - 1 + tabs.length) % tabs.length)}\r\n              className=\"p-1 rounded-lg transition-colors mr-2\"\r\n              style={{ color: 'var(--theme-text-muted)' }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n              }\r\n              onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n            >\r\n              <ChevronLeft className=\"w-4 h-4\" />\r\n            </button>\r\n\r\n            <div className=\"w-48 text-center\">\r\n              <h3 className=\"text-lg font-semibold text-themed-primary truncate\">\r\n                {tabs[activeTab]?.name}\r\n              </h3>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() => setActiveTab((prev) => (prev + 1) % tabs.length)}\r\n              className=\"p-1 rounded-lg transition-colors ml-2\"\r\n              style={{ color: 'var(--theme-text-muted)' }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n              }\r\n              onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n            >\r\n              <ChevronRight className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={() => setChartSize(Math.max(60, chartSize - 10))}\r\n              className=\"p-1 rounded-lg transition-colors\"\r\n              style={{ color: 'var(--theme-text-muted)' }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n              }\r\n              onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n            >\r\n              <Minimize2 className=\"w-4 h-4\" />\r\n            </button>\r\n\r\n            <span className=\"text-xs text-themed-muted\">{chartSize}%</span>\r\n\r\n            <button\r\n              onClick={() => setChartSize(Math.min(140, chartSize + 10))}\r\n              className=\"p-1 rounded-lg transition-colors\"\r\n              style={{ color: 'var(--theme-text-muted)' }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n              }\r\n              onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n            >\r\n              <Maximize2 className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-1\">\r\n          {tabs.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => setActiveTab(index)}\r\n              className=\"h-1 flex-1 rounded-full transition-colors\"\r\n              style={{\r\n                backgroundColor:\r\n                  index === activeTab ? 'var(--theme-primary)' : 'var(--theme-bg-hover)'\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"px-6 pb-6\">\r\n        {chartData.labels.length > 0 ? (\r\n          <>\r\n            <div\r\n              className=\"flex justify-center items-center\"\r\n              style={{\r\n                height: `${chartContainerHeight}px`,\r\n                width: '100%'\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: `${Math.min(chartContainerHeight, 400)}px`,\r\n                  height: `${Math.min(chartContainerHeight, 400)}px`\r\n                }}\r\n              >\r\n                <canvas\r\n                  ref={chartRef}\r\n                  style={{\r\n                    maxHeight: '100%',\r\n                    maxWidth: '100%'\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-4 flex flex-wrap justify-center gap-3\">\r\n              {chartData.labels.map((label, index) => {\r\n                const value = chartData.data[index];\r\n                const total = chartData.data.reduce((a, b) => a + b, 0);\r\n                const percentage = ((value / total) * 100).toFixed(1);\r\n\r\n                return (\r\n                  <div key={label} className=\"flex items-center space-x-1\">\r\n                    <div\r\n                      className=\"w-3 h-3 rounded\"\r\n                      style={{ backgroundColor: chartData.colors[index] }}\r\n                    />\r\n                    <span className=\"text-xs text-themed-muted\">{label}:</span>\r\n                    <span className=\"text-xs text-themed-primary font-medium\">{percentage}%</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Chart description and stats */}\r\n            <div\r\n              className=\"mt-6 pt-4 border-t\"\r\n              style={{ borderColor: 'var(--theme-border-primary)' }}\r\n            >\r\n              <div className=\"flex items-start gap-2 mb-3\">\r\n                <Info className=\"w-4 h-4 text-themed-muted mt-0.5 flex-shrink-0\" />\r\n                <div className=\"flex-1\">\r\n                  <h4 className=\"text-sm font-medium text-themed-secondary mb-1\">\r\n                    {getChartInfo.title}\r\n                  </h4>\r\n                  <p className=\"text-xs text-themed-muted leading-relaxed\">\r\n                    {getChartInfo.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              {getChartInfo.stats.length > 0 && (\r\n                <div className=\"grid grid-cols-3 gap-4 mt-4\">\r\n                  {getChartInfo.stats.map((stat, index) => (\r\n                    <div key={index} className=\"text-center\">\r\n                      <div className=\"text-xs text-themed-muted mb-0.5\">{stat.label}</div>\r\n                      <div className=\"text-sm font-semibold text-themed-secondary\">\r\n                        {stat.value}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex items-center justify-center h-48\">\r\n            <p className=\"text-themed-muted\">No data available</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EnhancedServiceChart;\r\n","import React, { memo, useMemo } from 'react';\r\nimport { formatBytes, formatPercent, formatDateTime } from '../../utils/formatters';\r\nimport { Card } from '../ui/Card';\r\n\r\ninterface RecentDownloadsPanelProps {\r\n  downloads?: any[];\r\n  timeRange?: string;\r\n}\r\n\r\nconst RecentDownloadsPanel: React.FC<RecentDownloadsPanelProps> = memo(\r\n  ({ downloads = [], timeRange = '24h' }) => {\r\n    const getTimeRangeLabel = useMemo(() => {\r\n      const labels: Record<string, string> = {\r\n        '15m': 'Last 15 Minutes',\r\n        '30m': 'Last 30 Minutes',\r\n        '1h': 'Last Hour',\r\n        '6h': 'Last 6 Hours',\r\n        '12h': 'Last 12 Hours',\r\n        '24h': 'Last 24 Hours',\r\n        '7d': 'Last 7 Days',\r\n        '30d': 'Last 30 Days',\r\n        '90d': 'Last 90 Days',\r\n        all: 'All Time'\r\n      };\r\n      return labels[timeRange] || 'Recent';\r\n    }, [timeRange]);\r\n\r\n    const displayCount = 8;\r\n    const displayDownloads = useMemo(() => {\r\n      return [...downloads]\r\n        .sort((a, b) => new Date(b.startTime).getTime() - new Date(a.startTime).getTime())\r\n        .slice(0, displayCount);\r\n    }, [downloads]);\r\n\r\n    const stats = useMemo(() => {\r\n      const totalDownloads = downloads.length;\r\n      const totalBytes = downloads.reduce((sum, d) => sum + (d.totalBytes || 0), 0);\r\n      const totalCacheHits = downloads.reduce((sum, d) => sum + (d.cacheHitBytes || 0), 0);\r\n      const overallHitRate = totalBytes > 0 ? (totalCacheHits / totalBytes) * 100 : 0;\r\n\r\n      return { totalDownloads, totalBytes, totalCacheHits, overallHitRate };\r\n    }, [downloads]);\r\n\r\n    return (\r\n      <Card>\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-themed-primary\">Recent Downloads</h3>\r\n          <div className=\"flex items-center gap-3\">\r\n            {downloads.length > 0 && (\r\n              <>\r\n                <span className=\"text-xs text-themed-muted\">{stats.totalDownloads} total</span>\r\n                <span\r\n                  className={`text-xs px-2 py-0.5 rounded ${\r\n                    stats.overallHitRate > 50 ? 'hit-rate-high' : 'hit-rate-warning'\r\n                  }`}\r\n                >\r\n                  {formatPercent(stats.overallHitRate)} hit\r\n                </span>\r\n              </>\r\n            )}\r\n            <span className=\"text-xs text-themed-muted\">{getTimeRangeLabel}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-3 max-h-[400px] overflow-y-auto\">\r\n          {displayDownloads.length > 0 ? (\r\n            displayDownloads.map((download, idx) => (\r\n              <div\r\n                key={download.id || idx}\r\n                className=\"rounded-lg p-3 border transition-all duration-200 themed-card hover:shadow-lg\"\r\n                style={{\r\n                  backgroundColor: 'var(--theme-bg-primary)',\r\n                  borderColor: 'var(--theme-border-primary)'\r\n                }}\r\n                onMouseEnter={(e) =>\r\n                  (e.currentTarget.style.borderColor = 'var(--theme-border-secondary)')\r\n                }\r\n                onMouseLeave={(e) =>\r\n                  (e.currentTarget.style.borderColor = 'var(--theme-border-primary)')\r\n                }\r\n              >\r\n                <div className=\"flex justify-between items-start mb-1\">\r\n                  <span className=\"font-medium text-sm text-themed-accent\">{download.service}</span>\r\n                  <span className=\"text-xs text-themed-muted\">\r\n                    {formatDateTime(download.startTime)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"text-xs text-themed-muted\">{download.clientIp}</div>\r\n                {download.gameName && (\r\n                  <div className=\"text-xs text-themed-muted mt-1 truncate\">{download.gameName}</div>\r\n                )}\r\n                <div className=\"flex justify-between items-center mt-2\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"text-themed-primary text-sm\">\r\n                      {formatBytes(download.totalBytes)}\r\n                    </span>\r\n                    <div className=\"flex gap-2 text-xs\">\r\n                      <span className=\"cache-hit\">↓ {formatBytes(download.cacheHitBytes)}</span>\r\n                      <span className=\"cache-miss\">↑ {formatBytes(download.cacheMissBytes)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <span\r\n                    className={`text-xs px-2 py-1 rounded hit-rate-badge ${\r\n                      download.cacheHitPercent > 75\r\n                        ? 'high'\r\n                        : download.cacheHitPercent > 50\r\n                          ? 'medium'\r\n                          : download.cacheHitPercent > 25\r\n                            ? 'low'\r\n                            : 'warning'\r\n                    }`}\r\n                  >\r\n                    {formatPercent(download.cacheHitPercent)} Hit\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"flex items-center justify-center h-32 text-themed-muted\">\r\n              No downloads in the {getTimeRangeLabel.toLowerCase()}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {downloads.length > displayCount && (\r\n          <div\r\n            className=\"mt-3 pt-3 border-t text-center\"\r\n            style={{ borderColor: 'var(--theme-border-primary)' }}\r\n          >\r\n            <span className=\"text-xs text-themed-muted\">\r\n              Showing {displayCount} of {downloads.length} downloads\r\n            </span>\r\n          </div>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n);\r\n\r\nRecentDownloadsPanel.displayName = 'RecentDownloadsPanel';\r\n\r\nexport default RecentDownloadsPanel;\r\n","import React, { useMemo, memo } from 'react';\r\nimport { formatBytes, formatPercent, formatDateTime } from '../../utils/formatters';\r\nimport { CacheInfoTooltip } from '../common/Tooltip';\r\nimport { Card } from '../ui/Card';\r\n\r\ninterface TopClientsTableProps {\r\n  clientStats?: any[];\r\n  downloads?: any[];\r\n  timeRange?: string;\r\n}\r\n\r\nconst TopClientsTable: React.FC<TopClientsTableProps> = memo(\r\n  ({ clientStats = [], timeRange = '24h' }) => {\r\n    const timeRangeLabel = useMemo(() => {\r\n      const labels: Record<string, string> = {\r\n        '15m': 'Last 15 Minutes',\r\n        '30m': 'Last 30 Minutes',\r\n        '1h': 'Last Hour',\r\n        '6h': 'Last 6 Hours',\r\n        '12h': 'Last 12 Hours',\r\n        '24h': 'Last 24 Hours',\r\n        '7d': 'Last 7 Days',\r\n        '30d': 'Last 30 Days',\r\n        '90d': 'Last 90 Days',\r\n        all: 'All Time'\r\n      };\r\n      return labels[timeRange] || 'Last 24 Hours';\r\n    }, [timeRange]);\r\n\r\n    const displayClients = useMemo(() => clientStats.slice(0, 10), [clientStats]);\r\n\r\n    return (\r\n      <Card>\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-themed-primary flex items-center gap-2\">\r\n            Top Clients\r\n            <CacheInfoTooltip />\r\n          </h3>\r\n          <span className=\"text-xs text-themed-muted\">{timeRangeLabel}</span>\r\n        </div>\r\n\r\n        {displayClients.length > 0 ? (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"text-left text-xs text-themed-muted uppercase tracking-wider\">\r\n                  <th className=\"pb-3\">Client IP</th>\r\n                  <th className=\"pb-3\">Total Downloaded</th>\r\n                  <th className=\"pb-3\">Cache Hits</th>\r\n                  <th className=\"pb-3\">Cache Misses</th>\r\n                  <th className=\"pb-3\">Hit Rate</th>\r\n                  <th className=\"pb-3\">Last Seen</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-sm\">\r\n                {displayClients.map((client, idx) => (\r\n                  <tr\r\n                    key={`${client.clientIp}-${idx}`}\r\n                    className=\"hover:bg-themed-hover transition-colors\"\r\n                  >\r\n                    <td className=\"py-3 text-themed-primary\">{client.clientIp}</td>\r\n                    <td className=\"py-3 text-themed-secondary\">{formatBytes(client.totalBytes)}</td>\r\n                    <td className=\"py-3 cache-hit\">{formatBytes(client.totalCacheHitBytes)}</td>\r\n                    <td className=\"py-3 cache-miss\">{formatBytes(client.totalCacheMissBytes)}</td>\r\n                    <td className=\"py-3\">\r\n                      <span\r\n                        className={`px-2 py-1 rounded text-xs hit-rate-badge ${\r\n                          client.cacheHitPercent > 50 ? 'high' : 'warning'\r\n                        }`}\r\n                      >\r\n                        {formatPercent(client.cacheHitPercent)}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-3 text-themed-muted\">{formatDateTime(client.lastSeen)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex items-center justify-center h-32 text-themed-muted\">\r\n            No client data available for selected time range\r\n          </div>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n);\r\n\r\nTopClientsTable.displayName = 'TopClientsTable';\r\n\r\nexport default TopClientsTable;\r\n","import React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport {\r\n  HardDrive,\r\n  Download,\r\n  Users,\r\n  Database,\r\n  TrendingUp,\r\n  Zap,\r\n  Server,\r\n  Activity,\r\n  Eye,\r\n  EyeOff,\r\n  ChevronDown,\r\n  Clock,\r\n  RotateCcw,\r\n  Search,\r\n  GripVertical,\r\n  Loader\r\n} from 'lucide-react';\r\nimport { useData } from '../../contexts/DataContext';\r\nimport { formatBytes, formatPercent } from '../../utils/formatters';\r\nimport { STORAGE_KEYS } from '../../utils/constants';\r\nimport { type StatCardData, type DashboardStats } from '../../types';\r\nimport StatCard from '../common/StatCard';\r\nimport EnhancedServiceChart from './EnhancedServiceChart';\r\nimport RecentDownloadsPanel from './RecentDownloadsPanel';\r\nimport TopClientsTable from './TopClientsTable';\r\n\r\ntype CardVisibility = Record<string, boolean>;\r\ntype AllStatCards = Record<string, StatCardData>;\r\n\r\nconst DEFAULT_CARD_VISIBILITY: CardVisibility = {\r\n  totalCache: true,\r\n  usedSpace: true,\r\n  bandwidthSaved: true,\r\n  addedToCache: true,\r\n  totalServed: true,\r\n  activeDownloads: true,\r\n  activeClients: true,\r\n  cacheHitRatio: true\r\n};\r\n\r\nconst DEFAULT_CARD_ORDER: string[] = [\r\n  'totalCache',\r\n  'usedSpace',\r\n  'bandwidthSaved',\r\n  'addedToCache',\r\n  'totalServed',\r\n  'activeDownloads',\r\n  'activeClients',\r\n  'cacheHitRatio'\r\n];\r\n\r\nconst StatTooltips: Record<string, string> = {\r\n  bandwidthSaved:\r\n    'Amount of internet bandwidth saved by serving files from local cache instead of downloading them again',\r\n  addedToCache: 'New content downloaded and stored in cache for future use',\r\n  totalServed: 'Total amount of data delivered to clients (cache hits + new downloads)',\r\n  cacheHitRatio:\r\n    'Percentage of requests served from cache vs downloaded from internet. Higher is better!'\r\n};\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { cacheInfo, activeDownloads, latestDownloads, clientStats, serviceStats } = useData();\r\n  const [dashboardStats, setDashboardStats] = useState<DashboardStats | null>(null);\r\n  const [loading] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [timeFilterOpen, setTimeFilterOpen] = useState(false);\r\n  const [selectedTimeRange, setSelectedTimeRange] = useState('24h');\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n  const timeFilterRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [draggedCard, setDraggedCard] = useState<string | null>(null);\r\n  const [dragOverCard, setDragOverCard] = useState<string | null>(null);\r\n  const dragCounter = useRef(0);\r\n\r\n  const [cardOrder, setCardOrder] = useState<string[]>(() => {\r\n    const saved = localStorage.getItem(STORAGE_KEYS.DASHBOARD_CARD_ORDER);\r\n    if (saved) {\r\n      try {\r\n        const order = JSON.parse(saved);\r\n        const hasAllCards = DEFAULT_CARD_ORDER.every((card) => order.includes(card));\r\n        if (hasAllCards) {\r\n          return order;\r\n        }\r\n      } catch (e) {\r\n        console.error('Failed to parse card order:', e);\r\n      }\r\n    }\r\n    return DEFAULT_CARD_ORDER;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEYS.DASHBOARD_CARD_ORDER, JSON.stringify(cardOrder));\r\n  }, [cardOrder]);\r\n\r\n  const timeRanges = [\r\n    { label: 'Last 15 minutes', value: '15m' },\r\n    { label: 'Last 30 minutes', value: '30m' },\r\n    { label: 'Last 1 hour', value: '1h' },\r\n    { label: 'Last 6 hours', value: '6h' },\r\n    { label: 'Last 12 hours', value: '12h' },\r\n    { label: 'Last 24 hours', value: '24h' },\r\n    { label: 'Last 7 days', value: '7d' },\r\n    { label: 'Last 30 days', value: '30d' },\r\n    { label: 'Last 90 days', value: '90d' },\r\n    { label: 'All time', value: 'all' }\r\n  ];\r\n\r\n  const getTimeRangeLabel = useCallback((value: string) => {\r\n    const range = timeRanges.find((r) => r.value === value);\r\n    return range ? range.label : 'Last 24 hours';\r\n  }, []);\r\n\r\n  const [cardVisibility, setCardVisibility] = useState<CardVisibility>(() => {\r\n    const saved = localStorage.getItem(STORAGE_KEYS.DASHBOARD_CARD_VISIBILITY);\r\n    if (saved) {\r\n      try {\r\n        return { ...DEFAULT_CARD_VISIBILITY, ...JSON.parse(saved) };\r\n      } catch (e) {\r\n        console.error('Failed to parse card visibility settings:', e);\r\n        return DEFAULT_CARD_VISIBILITY;\r\n      }\r\n    }\r\n    return DEFAULT_CARD_VISIBILITY;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEYS.DASHBOARD_CARD_VISIBILITY, JSON.stringify(cardVisibility));\r\n  }, [cardVisibility]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\r\n        setDropdownOpen(false);\r\n        setSearchQuery('');\r\n      }\r\n      if (timeFilterRef.current && !timeFilterRef.current.contains(event.target as Node)) {\r\n        setTimeFilterOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const generateDashboardStats = useCallback(\r\n    (downloads: any[], services: any[]): DashboardStats => {\r\n      const totalHits = services.reduce((sum, s) => sum + (s.totalCacheHitBytes || 0), 0);\r\n      const totalMisses = services.reduce((sum, s) => sum + (s.totalCacheMissBytes || 0), 0);\r\n      const total = totalHits + totalMisses;\r\n\r\n      return {\r\n        totalBandwidthSaved: totalHits,\r\n        totalAddedToCache: totalMisses,\r\n        totalServed: total,\r\n        cacheHitRatio: total > 0 ? totalHits / total : 0,\r\n        activeDownloads: activeDownloads.length,\r\n        uniqueClients: [...new Set(downloads.map((d) => d.clientIp))].length,\r\n        topService: services[0]?.service || 'steam',\r\n        period: {\r\n          duration: selectedTimeRange,\r\n          bandwidthSaved: totalHits,\r\n          addedToCache: totalMisses,\r\n          totalServed: total,\r\n          hitRatio: total > 0 ? totalHits / total : 0,\r\n          downloads: downloads.length\r\n        }\r\n      };\r\n    },\r\n    [selectedTimeRange, activeDownloads]\r\n  );\r\n\r\n  // Generate dashboard stats whenever data changes\r\n  useEffect(() => {\r\n    if (latestDownloads && serviceStats) {\r\n      const stats = generateDashboardStats(latestDownloads, serviceStats);\r\n      setDashboardStats(stats);\r\n    }\r\n  }, [latestDownloads, serviceStats, generateDashboardStats]);\r\n\r\n  const toggleCardVisibility = useCallback((cardKey: string) => {\r\n    setCardVisibility((prev: CardVisibility) => ({\r\n      ...prev,\r\n      [cardKey]: !prev[cardKey]\r\n    }));\r\n  }, []);\r\n\r\n  const handleDragStart = useCallback((e: React.DragEvent, cardKey: string) => {\r\n    setDraggedCard(cardKey);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n  }, []);\r\n\r\n  const handleDragEnd = useCallback(() => {\r\n    setDraggedCard(null);\r\n    setDragOverCard(null);\r\n    dragCounter.current = 0;\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const handleDragEnter = useCallback(\r\n    (e: React.DragEvent, cardKey: string) => {\r\n      e.preventDefault();\r\n      dragCounter.current++;\r\n      if (cardKey && cardKey !== draggedCard) {\r\n        setDragOverCard(cardKey);\r\n      }\r\n    },\r\n    [draggedCard]\r\n  );\r\n\r\n  const handleDragLeave = useCallback(() => {\r\n    dragCounter.current--;\r\n    if (dragCounter.current === 0) {\r\n      setDragOverCard(null);\r\n    }\r\n  }, []);\r\n\r\n  const handleDrop = useCallback(\r\n    (e: React.DragEvent, targetCardKey: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (draggedCard && targetCardKey && draggedCard !== targetCardKey) {\r\n        setCardOrder((prevOrder: string[]) => {\r\n          const newOrder = [...prevOrder];\r\n          const draggedIndex = newOrder.indexOf(draggedCard);\r\n          const targetIndex = newOrder.indexOf(targetCardKey);\r\n          newOrder.splice(draggedIndex, 1);\r\n          newOrder.splice(targetIndex, 0, draggedCard);\r\n          return newOrder;\r\n        });\r\n      }\r\n\r\n      setDragOverCard(null);\r\n      dragCounter.current = 0;\r\n    },\r\n    [draggedCard]\r\n  );\r\n\r\n  const resetCardOrder = useCallback(() => {\r\n    setCardOrder(DEFAULT_CARD_ORDER);\r\n  }, []);\r\n\r\n  const stats = useMemo(() => {\r\n    const activeClients = [...new Set(activeDownloads.map((d) => d.clientIp))].length;\r\n    const totalActiveDownloads = activeDownloads.length;\r\n    const totalDownloads = serviceStats.reduce(\r\n      (sum, service) => sum + (service.totalDownloads || 0),\r\n      0\r\n    );\r\n\r\n    return {\r\n      activeClients,\r\n      totalActiveDownloads,\r\n      totalDownloads,\r\n      bandwidthSaved: dashboardStats?.period?.bandwidthSaved || 0,\r\n      addedToCache: dashboardStats?.period?.addedToCache || 0,\r\n      totalServed: dashboardStats?.period?.totalServed || 0,\r\n      cacheHitRatio: dashboardStats?.period?.hitRatio || 0,\r\n      uniqueClients: dashboardStats?.uniqueClients || clientStats.length\r\n    };\r\n  }, [activeDownloads, serviceStats, dashboardStats, clientStats]);\r\n\r\n  const allStatCards = useMemo<AllStatCards>(\r\n    () => ({\r\n      totalCache: {\r\n        key: 'totalCache',\r\n        title: 'Total Cache',\r\n        value: cacheInfo ? formatBytes(cacheInfo.totalCacheSize) : '0 B',\r\n        subtitle: 'Drive capacity',\r\n        icon: Database,\r\n        color: 'blue' as const,\r\n        visible: cardVisibility.totalCache\r\n      },\r\n      usedSpace: {\r\n        key: 'usedSpace',\r\n        title: 'Used Space',\r\n        value: cacheInfo ? formatBytes(cacheInfo.usedCacheSize) : '0 B',\r\n        subtitle: cacheInfo ? formatPercent(cacheInfo.usagePercent) : '0%',\r\n        icon: HardDrive,\r\n        color: 'green' as const,\r\n        visible: cardVisibility.usedSpace\r\n      },\r\n      bandwidthSaved: {\r\n        key: 'bandwidthSaved',\r\n        title: 'Bandwidth Saved',\r\n        value: formatBytes(stats.bandwidthSaved),\r\n        subtitle:\r\n          selectedTimeRange === 'all'\r\n            ? 'All-time saved'\r\n            : getTimeRangeLabel(selectedTimeRange).toLowerCase(),\r\n        icon: TrendingUp,\r\n        color: 'emerald' as const,\r\n        visible: cardVisibility.bandwidthSaved,\r\n        tooltip: StatTooltips.bandwidthSaved\r\n      },\r\n      addedToCache: {\r\n        key: 'addedToCache',\r\n        title: 'Added to Cache',\r\n        value: formatBytes(stats.addedToCache),\r\n        subtitle:\r\n          selectedTimeRange === 'all'\r\n            ? 'All-time cached'\r\n            : getTimeRangeLabel(selectedTimeRange).toLowerCase(),\r\n        icon: Zap,\r\n        color: 'purple' as const,\r\n        visible: cardVisibility.addedToCache,\r\n        tooltip: StatTooltips.addedToCache\r\n      },\r\n      totalServed: {\r\n        key: 'totalServed',\r\n        title: 'Total Served',\r\n        value: formatBytes(stats.totalServed),\r\n        subtitle:\r\n          selectedTimeRange === 'all'\r\n            ? 'All-time served'\r\n            : getTimeRangeLabel(selectedTimeRange).toLowerCase(),\r\n        icon: Server,\r\n        color: 'indigo' as const,\r\n        visible: cardVisibility.totalServed,\r\n        tooltip: StatTooltips.totalServed\r\n      },\r\n      activeDownloads: {\r\n        key: 'activeDownloads',\r\n        title: 'Active Downloads',\r\n        value: stats.totalActiveDownloads,\r\n        subtitle: `${dashboardStats?.period?.downloads || latestDownloads.length} in period`,\r\n        icon: Download,\r\n        color: 'orange' as const,\r\n        visible: cardVisibility.activeDownloads\r\n      },\r\n      activeClients: {\r\n        key: 'activeClients',\r\n        title: 'Active Clients',\r\n        value: stats.uniqueClients,\r\n        subtitle: `${stats.totalDownloads} downloads`,\r\n        icon: Users,\r\n        color: 'yellow' as const,\r\n        visible: cardVisibility.activeClients\r\n      },\r\n      cacheHitRatio: {\r\n        key: 'cacheHitRatio',\r\n        title: 'Cache Hit Ratio',\r\n        value: formatPercent(stats.cacheHitRatio * 100),\r\n        subtitle:\r\n          selectedTimeRange === 'all'\r\n            ? 'Overall'\r\n            : getTimeRangeLabel(selectedTimeRange).toLowerCase(),\r\n        icon: Activity,\r\n        color: 'cyan' as const,\r\n        visible: cardVisibility.cacheHitRatio,\r\n        tooltip: StatTooltips.cacheHitRatio\r\n      }\r\n    }),\r\n    [\r\n      cacheInfo,\r\n      cardVisibility,\r\n      stats,\r\n      selectedTimeRange,\r\n      getTimeRangeLabel,\r\n      dashboardStats,\r\n      latestDownloads\r\n    ]\r\n  );\r\n\r\n  const orderedStatCards = useMemo(() => {\r\n    return cardOrder\r\n      .map((key: string) => allStatCards[key])\r\n      .filter((card: StatCardData | undefined): card is StatCardData => card !== undefined);\r\n  }, [cardOrder, allStatCards]);\r\n\r\n  const visibleCards = orderedStatCards.filter((card: StatCardData) => card.visible);\r\n  const hiddenCards = orderedStatCards.filter((card: StatCardData) => !card.visible);\r\n  const hiddenCardsCount = hiddenCards.length;\r\n\r\n  const filteredHiddenCards = hiddenCards.filter(\r\n    (card: StatCardData) =>\r\n      card.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      (card.subtitle && card.subtitle.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  const getIconGradient = (color: string) => {\r\n    const gradients: Record<string, string> = {\r\n      blue: 'from-blue-500 to-blue-600',\r\n      green: 'from-green-500 to-green-600',\r\n      emerald: 'from-emerald-500 to-emerald-600',\r\n      purple: 'from-purple-500 to-purple-600',\r\n      indigo: 'from-indigo-500 to-indigo-600',\r\n      orange: 'from-orange-500 to-orange-600',\r\n      yellow: 'from-yellow-500 to-yellow-600',\r\n      cyan: 'from-cyan-500 to-cyan-600'\r\n    };\r\n    return gradients[color] || 'from-gray-500 to-gray-600';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Time Range Filter */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold text-themed-primary tracking-tight\">Dashboard</h2>\r\n        <div className=\"flex items-center gap-2\">\r\n          <button\r\n            onClick={resetCardOrder}\r\n            className=\"p-2 transition-colors rounded-lg\"\r\n            style={{\r\n              color: 'var(--theme-text-muted)',\r\n              backgroundColor: 'transparent'\r\n            }}\r\n            onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')}\r\n            onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n            title=\"Reset card layout to default\"\r\n          >\r\n            <RotateCcw className=\"w-4 h-4\" />\r\n          </button>\r\n\r\n          <div className=\"relative\" ref={timeFilterRef}>\r\n            <button\r\n              onClick={() => setTimeFilterOpen(!timeFilterOpen)}\r\n              className=\"flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors\"\r\n              style={{\r\n                backgroundColor: 'var(--theme-bg-secondary)',\r\n                borderColor: 'var(--theme-border-primary)'\r\n              }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n              }\r\n              onMouseLeave={(e) =>\r\n                (e.currentTarget.style.backgroundColor = 'var(--theme-bg-secondary)')\r\n              }\r\n            >\r\n              <Clock className=\"w-4 h-4\" style={{ color: 'var(--theme-text-muted)' }} />\r\n              <span className=\"text-sm text-themed-secondary\">\r\n                {getTimeRangeLabel(selectedTimeRange)}\r\n              </span>\r\n              <ChevronDown\r\n                className={`w-4 h-4 transition-transform ${timeFilterOpen ? 'rotate-180' : ''}`}\r\n                style={{ color: 'var(--theme-text-muted)' }}\r\n              />\r\n            </button>\r\n\r\n            {timeFilterOpen && (\r\n              <div\r\n                className=\"absolute right-0 mt-2 w-56 rounded-lg border shadow-xl z-50\"\r\n                style={{\r\n                  backgroundColor: 'var(--theme-bg-secondary)',\r\n                  borderColor: 'var(--theme-border-primary)'\r\n                }}\r\n              >\r\n                <div className=\"p-2\">\r\n                  <div className=\"text-xs font-semibold px-2 py-1.5 text-themed-muted\">\r\n                    Time Range\r\n                  </div>\r\n                  {timeRanges.map((range) => (\r\n                    <button\r\n                      key={range.value}\r\n                      onClick={() => {\r\n                        setSelectedTimeRange(range.value);\r\n                        setTimeFilterOpen(false);\r\n                      }}\r\n                      className={`w-full text-left px-3 py-2 rounded text-sm transition-colors ${\r\n                        selectedTimeRange === range.value\r\n                          ? 'text-themed-accent'\r\n                          : 'text-themed-secondary'\r\n                      }`}\r\n                      style={{\r\n                        backgroundColor:\r\n                          selectedTimeRange === range.value\r\n                            ? 'var(--theme-bg-hover)'\r\n                            : 'transparent'\r\n                      }}\r\n                      onMouseEnter={(e) => {\r\n                        if (selectedTimeRange !== range.value) {\r\n                          e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)';\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        if (selectedTimeRange !== range.value) {\r\n                          e.currentTarget.style.backgroundColor = 'transparent';\r\n                        }\r\n                      }}\r\n                    >\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span>{range.label}</span>\r\n                        {selectedTimeRange === range.value && (\r\n                          <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                              clipRule=\"evenodd\"\r\n                            />\r\n                          </svg>\r\n                        )}\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hidden Cards Dropdown */}\r\n      {hiddenCardsCount > 0 && (\r\n        <div className=\"relative\" ref={dropdownRef}>\r\n          <div\r\n            className=\"rounded-lg px-4 py-2 border flex items-center justify-between\"\r\n            style={{\r\n              backgroundColor: 'var(--theme-bg-secondary)',\r\n              borderColor: 'var(--theme-border-primary)'\r\n            }}\r\n          >\r\n            <span className=\"text-sm text-themed-muted\">\r\n              {hiddenCardsCount} stat card{hiddenCardsCount !== 1 ? 's' : ''} hidden\r\n            </span>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setDropdownOpen(!dropdownOpen)}\r\n                className=\"flex items-center gap-1 text-xs text-themed-accent transition-colors px-2 py-1 rounded-lg\"\r\n                onMouseEnter={(e) =>\r\n                  (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n                }\r\n                onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n              >\r\n                Add cards\r\n                <ChevronDown\r\n                  className={`w-3 h-3 transition-transform ${dropdownOpen ? 'rotate-180' : ''}`}\r\n                />\r\n              </button>\r\n              <button\r\n                onClick={() => setCardVisibility(DEFAULT_CARD_VISIBILITY)}\r\n                className=\"text-xs text-themed-accent transition-colors px-2 py-1 rounded-lg\"\r\n                onMouseEnter={(e) =>\r\n                  (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n                }\r\n                onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n              >\r\n                Show all\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {dropdownOpen && (\r\n            <div\r\n              className=\"absolute right-0 mt-2 w-80 rounded-lg border shadow-xl z-50\"\r\n              style={{\r\n                backgroundColor: 'var(--theme-bg-secondary)',\r\n                borderColor: 'var(--theme-border-primary)'\r\n              }}\r\n            >\r\n              <div className=\"p-3 border-b\" style={{ borderColor: 'var(--theme-border-primary)' }}>\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-themed-muted\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    placeholder=\"Search hidden cards...\"\r\n                    className=\"w-full pl-10 pr-3 py-2 rounded-lg focus:outline-none text-sm themed-input\"\r\n                    style={{\r\n                      backgroundColor: 'var(--theme-bg-hover)',\r\n                      color: 'var(--theme-text-primary)',\r\n                      border: '2px solid var(--theme-primary)'\r\n                    }}\r\n                    autoFocus\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"max-h-96 overflow-y-auto p-2\">\r\n                {filteredHiddenCards.length > 0 ? (\r\n                  filteredHiddenCards.map((card: StatCardData) => {\r\n                    const Icon = card.icon;\r\n                    return (\r\n                      <button\r\n                        key={card.key}\r\n                        onClick={() => {\r\n                          toggleCardVisibility(card.key);\r\n                          if (hiddenCardsCount === 1) {\r\n                            setDropdownOpen(false);\r\n                            setSearchQuery('');\r\n                          }\r\n                        }}\r\n                        className=\"w-full p-3 rounded-lg transition-colors flex items-center gap-3 group\"\r\n                        onMouseEnter={(e) =>\r\n                          (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n                        }\r\n                        onMouseLeave={(e) =>\r\n                          (e.currentTarget.style.backgroundColor = 'transparent')\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={`p-2 rounded-lg bg-gradient-to-br ${getIconGradient(card.color)} group-hover:scale-110 transition-transform`}\r\n                        >\r\n                          <Icon className=\"w-5 h-5 text-white\" />\r\n                        </div>\r\n                        <div className=\"flex-1 text-left\">\r\n                          <div className=\"text-sm text-themed-secondary font-medium\">\r\n                            {card.title}\r\n                          </div>\r\n                          <div className=\"text-xs text-themed-muted\">{card.subtitle}</div>\r\n                        </div>\r\n                        <Eye className=\"w-4 h-4 text-themed-muted group-hover:text-themed-accent transition-colors\" />\r\n                      </button>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"px-3 py-6 text-center text-themed-muted text-sm\">\r\n                    No hidden cards match \"{searchQuery}\"\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading overlay */}\r\n      {loading && (\r\n        <div className=\"text-center py-4\">\r\n          <div className=\"inline-flex items-center gap-2 text-themed-muted\">\r\n            <Loader className=\"animate-spin h-5 w-5\" />\r\n            <span>Loading {getTimeRangeLabel(selectedTimeRange).toLowerCase()} data...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Stats Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        {visibleCards.map((card: StatCardData) => (\r\n          <div\r\n            key={card.key}\r\n            className=\"relative group\"\r\n            style={{\r\n              boxShadow: dragOverCard === card.key ? `0 0 0 2px var(--theme-primary)` : 'none'\r\n            }}\r\n            draggable\r\n            onDragStart={(e) => handleDragStart(e, card.key)}\r\n            onDragEnd={handleDragEnd}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={(e) => handleDragEnter(e, card.key)}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={(e) => handleDrop(e, card.key)}\r\n          >\r\n            <div className=\"absolute top-2 left-2 opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none\">\r\n              <GripVertical className=\"w-4 h-4 text-themed-muted\" />\r\n            </div>\r\n\r\n            <StatCard\r\n              title={card.title}\r\n              value={card.value}\r\n              subtitle={card.subtitle}\r\n              icon={card.icon}\r\n              color={card.color}\r\n              tooltip={card.tooltip}\r\n            />\r\n\r\n            <button\r\n              onClick={() => toggleCardVisibility(card.key)}\r\n              className=\"absolute top-2 right-2 p-1.5 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity\"\r\n              style={{\r\n                backgroundColor: 'var(--theme-bg-hover)'\r\n              }}\r\n              title=\"Hide this card\"\r\n            >\r\n              <EyeOff className=\"w-3.5 h-3.5 text-themed-muted\" />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Charts Row - Pass the actual data arrays */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <EnhancedServiceChart serviceStats={serviceStats || []} timeRange={selectedTimeRange} />\r\n        <RecentDownloadsPanel downloads={latestDownloads || []} timeRange={selectedTimeRange} />\r\n      </div>\r\n\r\n      {/* Top Clients - Pass the actual data arrays */}\r\n      <TopClientsTable\r\n        clientStats={clientStats || []}\r\n        downloads={latestDownloads || []}\r\n        timeRange={selectedTimeRange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["StatCard","title","value","subtitle","Icon","color","tooltip","getIconBackground","colorMap","jsx","jsxs","EnhancedServiceChart","serviceStats","activeTab","setActiveTab","useState","chartSize","setChartSize","chartRef","useRef","chartInstance","prevDataRef","tabs","getChartColors","computedStyle","getServiceDistributionData","useMemo","totalBytes","sum","s","chartColors","sorted","a","b","_","i","getCacheHitRatioData","totalHits","totalMisses","hitColor","missColor","getBandwidthSavedData","servicesWithSavings","totalSaved","chartData","_a","getChartInfo","tabId","hitRatio","formatBytes","useEffect","handleThemeChange","currentDataString","dataChanged","borderColor","textColor","ctx","Chart","context","total","percentage","chartContainerHeight","Card","prev","e","ChevronLeft","ChevronRight","Minimize2","Maximize2","index","Fragment","label","Info","stat","RecentDownloadsPanel","memo","downloads","timeRange","getTimeRangeLabel","displayCount","displayDownloads","stats","totalDownloads","d","totalCacheHits","overallHitRate","formatPercent","download","idx","formatDateTime","TopClientsTable","clientStats","timeRangeLabel","displayClients","CacheInfoTooltip","client","DEFAULT_CARD_VISIBILITY","DEFAULT_CARD_ORDER","StatTooltips","Dashboard","cacheInfo","activeDownloads","latestDownloads","useData","dashboardStats","setDashboardStats","loading","dropdownOpen","setDropdownOpen","searchQuery","setSearchQuery","timeFilterOpen","setTimeFilterOpen","selectedTimeRange","setSelectedTimeRange","dropdownRef","timeFilterRef","draggedCard","setDraggedCard","dragOverCard","setDragOverCard","dragCounter","cardOrder","setCardOrder","saved","STORAGE_KEYS","order","card","timeRanges","useCallback","range","r","cardVisibility","setCardVisibility","handleClickOutside","event","generateDashboardStats","services","toggleCardVisibility","cardKey","handleDragStart","handleDragEnd","handleDragOver","handleDragEnter","handleDragLeave","handleDrop","targetCardKey","prevOrder","newOrder","draggedIndex","targetIndex","resetCardOrder","activeClients","totalActiveDownloads","service","_b","_c","_d","allStatCards","Database","HardDrive","TrendingUp","Zap","Server","Download","Users","Activity","orderedStatCards","key","visibleCards","hiddenCards","hiddenCardsCount","filteredHiddenCards","getIconGradient","RotateCcw","Clock","ChevronDown","Search","Eye","Loader","GripVertical","EyeOff"],"mappings":"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"}