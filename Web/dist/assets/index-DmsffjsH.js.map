{"version":3,"mappings":"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","names":["API_BASE","SERVICES","REFRESH_INTERVAL","FILE_SIZE_UNITS","STORAGE_KEYS","getApiUrl","__vite_import_meta_env__","API_URL","AuthService","__publicField","deviceId","c","r","response","result","error","apiKey","deviceName","userAgent","os","browser","authService","ApiService","additionalHeaders","signal","res","count","since","url","period","interval","limit","operationId","service","MockDataService","downloadCount","clients","steamGames","cacheInfo","downloads","now","actualCount","clientActivity","i","client","isMetadata","hoursAgo","startTime","download","endTime","gameName","totalBytes","game","cacheHitRatio","cacheHitBytes","cacheMissBytes","downloadSpeed","durationMs","a","b","clientStats","ip","activity","serviceStats","serviceDownloads","d","hitBytes","sum","missBytes","_a","DataContext","createContext","useData","context","useContext","DataProvider","children","mockMode","setMockMode","useState","mockDownloadCount","setMockDownloadCount","apiDownloadCount","setApiDownloadCount","setCacheInfo","activeDownloads","setActiveDownloads","latestDownloads","setLatestDownloads","setClientStats","setServiceStats","loading","setLoading","setError","isProcessingLogs","setIsProcessingLogs","processingStatus","setProcessingStatus","connectionStatus","setConnectionStatus","isInitialLoad","useRef","hasData","fetchInProgress","abortControllerRef","intervalRef","checkConnectionStatus","apiUrl","fetchData","mockData","timeoutId","cache","active","latest","services","err","cappedCount","prev","updateMockDataCount","updateApiDownloadCount","getCurrentRefreshInterval","useEffect","refreshInterval","updateInterval","newDownload","value","Header","title","subtitle","status","jsx","Wifi","jsxs","Monitor","Navigation","activeTab","setActiveTab","mobileMenuOpen","setMobileMenuOpen","tabs","LayoutDashboard","Download","Users","Settings","TabButton","tab","isActive","onClick","className","Icon","e","t","X","Menu","ErrorBoundary","Component","props","errorInfo","AlertCircle","LoadingSpinner","message","size","fullScreen","sizeClasses","content","Loader","Dashboard","lazy","DownloadsTab","ClientsTab","ServicesTab","ManagementTab","App","renderContent","TabComponent","Suspense","ThemeService","builtInThemes","apiThemes","deletedThemeIds","themeList","themeInfo","themeResponse","tomlContent","theme","darkDefault","allThemes","themeIds","themeId","builtIn","tomlText","parsed","TOML.parse","file","text","formData","defaultStyles","defaultStyleElement","root","preloadStyle","defaultPreload","colors","themeStyles","savedThemeId","toml","key","themeService","ReactDOM","React"],"ignoreList":[],"sources":["../../src/utils/constants.ts","../../src/services/auth.service.ts","../../src/services/api.service.ts","../../src/services/mockData.service.ts","../../src/contexts/DataContext.tsx","../../src/components/layout/Header.tsx","../../src/components/layout/Navigation.tsx","../../src/components/common/ErrorBoundary.tsx","../../src/components/common/LoadingSpinner.tsx","../../src/App.tsx","../../src/services/theme.service.ts","../../src/main.tsx"],"sourcesContent":["export const API_BASE = import.meta.env.VITE_API_URL\r\n  ? `${import.meta.env.VITE_API_URL}/api`\r\n  : '/api';\r\n\r\n// Services\r\nexport const SERVICES = ['steam', 'epic', 'origin', 'blizzard', 'wsus', 'riot'] as const;\r\nexport type ServiceType = (typeof SERVICES)[number];\r\n\r\n// Refresh intervals (in milliseconds)\r\nexport const REFRESH_INTERVAL = 5000; // 5 seconds\r\nexport const MOCK_UPDATE_INTERVAL = 10000; // 10 seconds\r\nexport const PROCESSING_CHECK_INTERVAL = 2000; // 2 seconds\r\n\r\n// Color mappings for services\r\nexport const SERVICE_COLORS = {\r\n  steam: '#1e40af',\r\n  epic: '#7c3aed',\r\n  origin: '#ea580c',\r\n  blizzard: '#0891b2',\r\n  wsus: '#16a34a',\r\n  riot: '#dc2626'\r\n} as const;\r\n\r\n// Cache hit rate color thresholds\r\nexport const CACHE_HIT_COLORS = {\r\n  EXCELLENT: { min: 75, color: 'green' },\r\n  GOOD: { min: 50, color: 'blue' },\r\n  FAIR: { min: 25, color: 'yellow' },\r\n  LOW: { min: 0, color: 'orange' }\r\n} as const;\r\n\r\n// File size units\r\nexport const FILE_SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'] as const;\r\n\r\n// Default pagination\r\nexport const DEFAULT_PAGE_SIZE = 50;\r\nexport const PAGE_SIZE_OPTIONS = [\r\n  { value: '50', label: '50 items' },\r\n  { value: '100', label: '100 items' },\r\n  { value: '150', label: '150 items' },\r\n  { value: 'unlimited', label: 'Unlimited' }\r\n] as const;\r\n\r\n// Storage keys - COMPLETE VERSION\r\nexport const STORAGE_KEYS = {\r\n  DASHBOARD_CARD_ORDER: 'lancache_dashboard_card_order',\r\n  DASHBOARD_CARD_VISIBILITY: 'lancache_dashboard_card_visibility',\r\n  SERVICE_FILTER: 'lancache_downloads_service',\r\n  ITEMS_PER_PAGE: 'lancache_downloads_items',\r\n  GROUP_GAMES: 'lancache_downloads_group',\r\n  SHOW_METADATA: 'lancache_downloads_metadata',\r\n  SHOW_SMALL_FILES: 'lancache_downloads_show_small'\r\n} as const;\r\n\r\n// Chart colors\r\nexport const CHART_COLORS: readonly string[] = [\r\n  '#3b82f6', // blue\r\n  '#10b981', // emerald\r\n  '#8b5cf6', // purple\r\n  '#f59e0b', // amber\r\n  '#ef4444', // red\r\n  '#06b6d4', // cyan\r\n  '#f97316', // orange\r\n  '#ec4899', // pink\r\n  '#14b8a6', // teal\r\n  '#84cc16' // lime\r\n] as const;\r\n","interface AuthCheckResponse {\r\n  requiresAuth: boolean;\r\n  isAuthenticated: boolean;\r\n  error?: string;\r\n}\r\n\r\ninterface RegisterResponse {\r\n  success: boolean;\r\n  message: string;\r\n}\r\n\r\ninterface RegenerateKeyResponse {\r\n  success: boolean;\r\n  message: string;\r\n  warning?: string;\r\n}\r\n\r\nconst getApiUrl = (): string => {\r\n  if (typeof import.meta !== 'undefined' && import.meta.env?.VITE_API_URL) {\r\n    return import.meta.env.VITE_API_URL;\r\n  }\r\n  return '';\r\n};\r\n\r\nconst API_URL = getApiUrl();\r\n\r\nclass AuthService {\r\n  private deviceId: string;\r\n  public isAuthenticated: boolean;\r\n  public authChecked: boolean;\r\n\r\n  constructor() {\r\n    this.deviceId = this.getOrCreateDeviceId();\r\n    this.isAuthenticated = false;\r\n    this.authChecked = false;\r\n  }\r\n\r\n  private getOrCreateDeviceId(): string {\r\n    let deviceId = localStorage.getItem('lancache_device_id');\r\n    if (!deviceId) {\r\n      deviceId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16) | 0;\r\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n      });\r\n      localStorage.setItem('lancache_device_id', deviceId);\r\n    }\r\n    return deviceId;\r\n  }\r\n\r\n  async checkAuth(): Promise<AuthCheckResponse> {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/auth/check`, {\r\n        headers: {\r\n          'X-Device-Id': this.deviceId\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        this.isAuthenticated = result.isAuthenticated;\r\n        this.authChecked = true;\r\n        return result;\r\n      }\r\n\r\n      this.isAuthenticated = false;\r\n      this.authChecked = true;\r\n      return { requiresAuth: true, isAuthenticated: false };\r\n    } catch (error: any) {\r\n      console.error('Auth check failed:', error);\r\n      this.authChecked = true;\r\n      return { requiresAuth: false, isAuthenticated: false, error: error.message };\r\n    }\r\n  }\r\n\r\n  async register(apiKey: string, deviceName: string | null = null): Promise<RegisterResponse> {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          deviceId: this.deviceId,\r\n          apiKey: apiKey,\r\n          deviceName: deviceName || this.getDeviceName()\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        this.isAuthenticated = true;\r\n        localStorage.setItem('lancache_auth_registered', 'true');\r\n        return { success: true, message: result.message };\r\n      }\r\n\r\n      return {\r\n        success: false,\r\n        message: result.message || 'Registration failed'\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Registration failed:', error);\r\n      return {\r\n        success: false,\r\n        message: error.message || 'Network error during registration'\r\n      };\r\n    }\r\n  }\r\n\r\n  async regenerateApiKey(): Promise<RegenerateKeyResponse> {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/auth/regenerate-key`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Device-Id': this.deviceId\r\n        }\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        this.clearAuth();\r\n        this.isAuthenticated = false;\r\n\r\n        return {\r\n          success: true,\r\n          message: result.message,\r\n          warning: result.warning\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: false,\r\n        message: result.message || 'Failed to regenerate API key'\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Failed to regenerate API key:', error);\r\n      return {\r\n        success: false,\r\n        message: error.message || 'Network error while regenerating API key'\r\n      };\r\n    }\r\n  }\r\n\r\n  private getDeviceName(): string {\r\n    const userAgent = navigator.userAgent;\r\n    let os = 'Unknown OS';\r\n    let browser = 'Unknown Browser';\r\n\r\n    if (userAgent.indexOf('Win') !== -1) os = 'Windows';\r\n    else if (userAgent.indexOf('Mac') !== -1) os = 'macOS';\r\n    else if (userAgent.indexOf('Linux') !== -1) os = 'Linux';\r\n    else if (userAgent.indexOf('Android') !== -1) os = 'Android';\r\n    else if (userAgent.indexOf('iOS') !== -1) os = 'iOS';\r\n\r\n    if (userAgent.indexOf('Chrome') !== -1) browser = 'Chrome';\r\n    else if (userAgent.indexOf('Safari') !== -1) browser = 'Safari';\r\n    else if (userAgent.indexOf('Firefox') !== -1) browser = 'Firefox';\r\n    else if (userAgent.indexOf('Edge') !== -1) browser = 'Edge';\r\n\r\n    return `${browser} on ${os}`;\r\n  }\r\n\r\n  getAuthHeaders(): Record<string, string> {\r\n    return {\r\n      'X-Device-Id': this.deviceId\r\n    };\r\n  }\r\n\r\n  handleUnauthorized(): void {\r\n    this.isAuthenticated = false;\r\n    localStorage.removeItem('lancache_auth_registered');\r\n  }\r\n\r\n  clearAuth(): void {\r\n    this.isAuthenticated = false;\r\n    localStorage.removeItem('lancache_auth_registered');\r\n  }\r\n\r\n  isRegistered(): boolean {\r\n    return localStorage.getItem('lancache_auth_registered') === 'true';\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { API_BASE } from '../utils/constants';\r\nimport authService from './auth.service';\r\nimport type {\r\n  CacheInfo,\r\n  Download,\r\n  ClientStat,\r\n  ServiceStat,\r\n  CacheClearStatus,\r\n  ProcessingStatus,\r\n  ClearCacheResponse,\r\n  Config,\r\n  DashboardStats\r\n} from '../types';\r\n\r\nclass ApiService {\r\n  static async handleResponse<T>(response: Response): Promise<T> {\r\n    // Handle 401 Unauthorized\r\n    if (response.status === 401) {\r\n      authService.handleUnauthorized();\r\n      const error = await response.text().catch(() => '');\r\n      throw new Error(`Authentication required: ${error || 'Please provide API key'}`);\r\n    }\r\n\r\n    if (!response.ok) {\r\n      const error = await response.text().catch(() => '');\r\n      throw new Error(`HTTP ${response.status}: ${error || response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  // Helper to add auth headers to all requests\r\n  static getHeaders(additionalHeaders: Record<string, string> = {}): HeadersInit {\r\n    return {\r\n      ...authService.getAuthHeaders(),\r\n      ...additionalHeaders\r\n    };\r\n  }\r\n\r\n  static async getCacheInfo(signal?: AbortSignal): Promise<CacheInfo> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/cache`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<CacheInfo>(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getCacheInfo request aborted (timeout)');\r\n      } else {\r\n        console.error('getCacheInfo error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getActiveDownloads(signal?: AbortSignal): Promise<Download[]> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/downloads/active`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<Download[]>(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getActiveDownloads request aborted (timeout)');\r\n      } else {\r\n        console.error('getActiveDownloads error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getLatestDownloads(\r\n    signal?: AbortSignal,\r\n    count: number | 'unlimited' = 50\r\n  ): Promise<Download[]> {\r\n    try {\r\n      const actualCount = count === 'unlimited' ? 9999 : count;\r\n      const res = await fetch(`${API_BASE}/downloads/latest?count=${actualCount}`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<Download[]>(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getLatestDownloads request aborted (timeout)');\r\n      } else {\r\n        console.error('getLatestDownloads error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getClientStats(signal?: AbortSignal): Promise<ClientStat[]> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/stats/clients`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<ClientStat[]>(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getClientStats request aborted (timeout)');\r\n      } else {\r\n        console.error('getClientStats error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getServiceStats(\r\n    signal?: AbortSignal,\r\n    since: string | null = null\r\n  ): Promise<ServiceStat[]> {\r\n    try {\r\n      const url = since\r\n        ? `${API_BASE}/stats/services?since=${since}`\r\n        : `${API_BASE}/stats/services`;\r\n      const res = await fetch(url, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<ServiceStat[]>(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getServiceStats request aborted (timeout)');\r\n      } else {\r\n        console.error('getServiceStats error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // NEW: Dashboard aggregated stats\r\n  static async getDashboardStats(period = '24h', signal?: AbortSignal): Promise<DashboardStats> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/stats/dashboard?period=${period}`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<DashboardStats>(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getDashboardStats request aborted (timeout)');\r\n      } else {\r\n        console.error('getDashboardStats error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // NEW: Cache effectiveness stats\r\n  static async getCacheEffectiveness(period = '24h', signal?: AbortSignal): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/stats/cache-effectiveness?period=${period}`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getCacheEffectiveness request aborted (timeout)');\r\n      } else {\r\n        console.error('getCacheEffectiveness error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // NEW: Timeline stats\r\n  static async getTimelineStats(\r\n    period = '24h',\r\n    interval = 'hourly',\r\n    signal?: AbortSignal\r\n  ): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/stats/timeline?period=${period}&interval=${interval}`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getTimelineStats request aborted (timeout)');\r\n      } else {\r\n        console.error('getTimelineStats error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // NEW: Bandwidth saved stats\r\n  static async getBandwidthSaved(period = 'all', signal?: AbortSignal): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/stats/bandwidth-saved?period=${period}`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getBandwidthSaved request aborted (timeout)');\r\n      } else {\r\n        console.error('getBandwidthSaved error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // NEW: Top games stats\r\n  static async getTopGames(limit = 10, period = '7d', signal?: AbortSignal): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/stats/top-games?limit=${limit}&period=${period}`, {\r\n        signal,\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error: any) {\r\n      if (error.name === 'AbortError') {\r\n        console.log('getTopGames request aborted (timeout)');\r\n      } else {\r\n        console.error('getTopGames error:', error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Start async cache clearing operation (requires auth)\r\n  static async clearAllCache(): Promise<ClearCacheResponse> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/cache/clear-all`, {\r\n        method: 'POST',\r\n        headers: this.getHeaders({ 'Content-Type': 'application/json' }),\r\n        signal: AbortSignal.timeout(10000)\r\n      });\r\n      return await this.handleResponse<ClearCacheResponse>(res);\r\n    } catch (error) {\r\n      console.error('clearAllCache error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get status of cache clearing operation\r\n  static async getCacheClearStatus(operationId: string): Promise<CacheClearStatus> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/cache/clear-status/${operationId}`, {\r\n        signal: AbortSignal.timeout(5000),\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<CacheClearStatus>(res);\r\n    } catch (error) {\r\n      console.error('getCacheClearStatus error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Cancel cache clearing operation (requires auth)\r\n  static async cancelCacheClear(operationId: string): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/cache/clear-cancel/${operationId}`, {\r\n        method: 'POST',\r\n        headers: this.getHeaders({ 'Content-Type': 'application/json' }),\r\n        signal: AbortSignal.timeout(5000)\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error) {\r\n      console.error('cancelCacheClear error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get all active cache clear operations\r\n  static async getActiveCacheOperations(): Promise<any[]> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/cache/active-operations`, {\r\n        signal: AbortSignal.timeout(5000),\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<any[]>(res);\r\n    } catch (error) {\r\n      console.error('getActiveCacheOperations error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Legacy method for compatibility\r\n  static async clearCache(service: string | null = null): Promise<any> {\r\n    if (service) {\r\n      return await this.removeServiceFromLogs(service);\r\n    } else {\r\n      return await this.clearAllCache();\r\n    }\r\n  }\r\n\r\n  // Reset database (requires auth)\r\n  static async resetDatabase(): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/database`, {\r\n        method: 'DELETE',\r\n        headers: this.getHeaders({ 'Content-Type': 'application/json' }),\r\n        signal: AbortSignal.timeout(60000)\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error) {\r\n      console.error('resetDatabase error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Reset log position (requires auth)\r\n  static async resetLogPosition(): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/reset-logs`, {\r\n        method: 'POST',\r\n        headers: this.getHeaders({ 'Content-Type': 'application/json' }),\r\n        signal: AbortSignal.timeout(60000)\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error) {\r\n      console.error('resetLogPosition error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Process all logs (requires auth)\r\n  static async processAllLogs(): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/process-all-logs`, {\r\n        method: 'POST',\r\n        headers: this.getHeaders({ 'Content-Type': 'application/json' }),\r\n        signal: AbortSignal.timeout(120000)\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error) {\r\n      console.error('processAllLogs error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Cancel processing (requires auth)\r\n  static async cancelProcessing(): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/cancel-processing`, {\r\n        method: 'POST',\r\n        headers: this.getHeaders({ 'Content-Type': 'application/json' }),\r\n        signal: AbortSignal.timeout(10000)\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error) {\r\n      console.error('cancelProcessing error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getProcessingStatus(): Promise<ProcessingStatus> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/processing-status`, {\r\n        signal: AbortSignal.timeout(5000),\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<ProcessingStatus>(res);\r\n    } catch (error) {\r\n      console.error('getProcessingStatus error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Remove specific service entries from log file (requires auth)\r\n  static async removeServiceFromLogs(service: string): Promise<any> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/logs/remove-service`, {\r\n        method: 'POST',\r\n        headers: this.getHeaders({ 'Content-Type': 'application/json' }),\r\n        body: JSON.stringify({ service }),\r\n        signal: AbortSignal.timeout(120000)\r\n      });\r\n      return await this.handleResponse(res);\r\n    } catch (error) {\r\n      console.error('removeServiceFromLogs error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get counts of log entries per service\r\n  static async getServiceLogCounts(): Promise<Record<string, number>> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/logs/service-counts`, {\r\n        signal: AbortSignal.timeout(30000),\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<Record<string, number>>(res);\r\n    } catch (error) {\r\n      console.error('getServiceLogCounts error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get configuration info\r\n  static async getConfig(): Promise<Config> {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/management/config`, {\r\n        signal: AbortSignal.timeout(5000),\r\n        headers: this.getHeaders()\r\n      });\r\n      return await this.handleResponse<Config>(res);\r\n    } catch (error) {\r\n      console.error('getConfig error:', error);\r\n      // Return defaults if API fails\r\n      return {\r\n        cachePath: '/cache',\r\n        logPath: '/logs/access.log',\r\n        services: ['steam', 'epic', 'origin', 'blizzard', 'wsus', 'riot']\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default ApiService;\r\n","import { SERVICES } from '../utils/constants';\r\n\r\ninterface MockData {\r\n  cacheInfo: any;\r\n  activeDownloads: any[];\r\n  latestDownloads: any[];\r\n  clientStats: any[];\r\n  serviceStats: any[];\r\n}\r\n\r\ninterface GameInfo {\r\n  name: string;\r\n  size: number;\r\n}\r\n\r\nclass MockDataService {\r\n  static generateMockData(downloadCount: number | 'unlimited' = 50): MockData {\r\n    const clients = [\r\n      '192.168.1.100',\r\n      '192.168.1.101',\r\n      '192.168.1.102',\r\n      '192.168.1.103',\r\n      '192.168.1.104',\r\n      '192.168.1.105',\r\n      '192.168.1.106',\r\n      '192.168.1.107',\r\n      '192.168.1.108',\r\n      '192.168.1.109',\r\n      '192.168.1.110',\r\n      '192.168.1.111',\r\n      '10.0.0.50',\r\n      '10.0.0.51',\r\n      '10.0.0.52',\r\n      '10.0.0.53',\r\n      '127.0.0.1'\r\n    ];\r\n\r\n    const steamGames: GameInfo[] = [\r\n      { name: 'Counter-Strike 2', size: 30 * 1024 * 1024 * 1024 },\r\n      { name: 'Dota 2', size: 35 * 1024 * 1024 * 1024 },\r\n      { name: 'Team Fortress 2', size: 25 * 1024 * 1024 * 1024 },\r\n      { name: 'Grand Theft Auto V', size: 95 * 1024 * 1024 * 1024 },\r\n      { name: 'Apex Legends', size: 60 * 1024 * 1024 * 1024 },\r\n      { name: 'Dead by Daylight', size: 45 * 1024 * 1024 * 1024 },\r\n      { name: 'Marvel Rivals', size: 55 * 1024 * 1024 * 1024 },\r\n      { name: 'Path of Exile', size: 40 * 1024 * 1024 * 1024 },\r\n      { name: 'Warframe', size: 50 * 1024 * 1024 * 1024 },\r\n      { name: 'Destiny 2', size: 105 * 1024 * 1024 * 1024 },\r\n      { name: 'Rust', size: 35 * 1024 * 1024 * 1024 },\r\n      { name: 'Valheim', size: 1 * 1024 * 1024 * 1024 },\r\n      { name: 'Unknown Steam Game', size: 15 * 1024 * 1024 * 1024 }\r\n    ];\r\n\r\n    // Generate cache info\r\n    const cacheInfo = {\r\n      totalCacheSize: 2000000000000, // 2TB\r\n      usedCacheSize: 1450000000000, // 1.45TB\r\n      freeCacheSize: 550000000000,\r\n      usagePercent: 72.5,\r\n      totalFiles: 48293 + (typeof downloadCount === 'number' ? downloadCount : 500) * 100,\r\n      serviceSizes: {\r\n        steam: 650000000000,\r\n        epic: 320000000000,\r\n        origin: 180000000000,\r\n        blizzard: 150000000000,\r\n        wsus: 100000000000,\r\n        riot: 50000000000\r\n      }\r\n    };\r\n\r\n    // Generate downloads with realistic patterns\r\n    const downloads: any[] = [];\r\n    const now = new Date();\r\n\r\n    // Calculate the actual count - if \"unlimited\", generate a large dataset\r\n    const actualCount = downloadCount === 'unlimited' ? 500 : downloadCount;\r\n\r\n    // Track client activity for accurate stats\r\n    const clientActivity: Record<string, any> = {};\r\n\r\n    for (let i = 0; i < actualCount; i++) {\r\n      const service = SERVICES[Math.floor(Math.random() * SERVICES.length)];\r\n      const client = clients[Math.floor(Math.random() * clients.length)];\r\n\r\n      // 30% chance of metadata/zero-byte download\r\n      const isMetadata = Math.random() < 0.3;\r\n\r\n      // Time distribution - more recent downloads at the top\r\n      // Spread over 90 days instead of just 7 for better \"all time\" data\r\n      const hoursAgo = Math.pow(i / actualCount, 2) * 2160; // Up to 90 days ago, exponentially distributed\r\n      const startTime = new Date(\r\n        now.getTime() - hoursAgo * 60 * 60 * 1000 - Math.random() * 3600000\r\n      );\r\n\r\n      let download: any;\r\n\r\n      if (isMetadata) {\r\n        // Metadata download\r\n        const endTime = new Date(startTime.getTime() + Math.random() * 5000); // 0-5 seconds\r\n        download = {\r\n          id: i + 1,\r\n          service,\r\n          clientIp: client,\r\n          startTime: startTime.toISOString(),\r\n          endTime: endTime.toISOString(),\r\n          cacheHitBytes: 0,\r\n          cacheMissBytes: 0,\r\n          totalBytes: 0,\r\n          cacheHitPercent: 0,\r\n          isActive: false,\r\n          gameName: null\r\n        };\r\n      } else {\r\n        // Regular download\r\n        let gameName = null;\r\n        let totalBytes: number;\r\n\r\n        if (service === 'steam' && Math.random() < 0.7) {\r\n          // 70% chance of identifiable Steam game\r\n          const game = steamGames[Math.floor(Math.random() * steamGames.length)];\r\n          gameName = game.name;\r\n          // Vary the size a bit (80-100% of full game size)\r\n          totalBytes = Math.floor(game.size * (0.8 + Math.random() * 0.2));\r\n        } else {\r\n          // Generic content\r\n          totalBytes = Math.floor(Math.random() * 50 * 1024 * 1024 * 1024); // Up to 50GB\r\n        }\r\n\r\n        // Cache hit ratio varies by age - older downloads have better cache hit\r\n        const cacheHitRatio = Math.min(0.95, 0.1 + (hoursAgo / 2160) * 0.85);\r\n        const cacheHitBytes = Math.floor(totalBytes * cacheHitRatio);\r\n        const cacheMissBytes = totalBytes - cacheHitBytes;\r\n\r\n        // Duration based on size and whether it's cached\r\n        const downloadSpeed = cacheHitRatio > 0.8 ? 500 * 1024 * 1024 : 50 * 1024 * 1024; // 500MB/s cached, 50MB/s uncached\r\n        const durationMs = (totalBytes / downloadSpeed) * 1000;\r\n        const endTime = new Date(startTime.getTime() + durationMs);\r\n\r\n        download = {\r\n          id: i + 1,\r\n          service,\r\n          clientIp: client,\r\n          startTime: startTime.toISOString(),\r\n          endTime: endTime.toISOString(),\r\n          cacheHitBytes,\r\n          cacheMissBytes,\r\n          totalBytes,\r\n          cacheHitPercent: (cacheHitBytes / totalBytes) * 100,\r\n          isActive: i < 3 && hoursAgo < 0.5, // First 3 recent downloads are active\r\n          gameName,\r\n          gameAppId:\r\n            gameName && gameName !== 'Unknown Steam Game'\r\n              ? 200000 + Math.floor(Math.random() * 2000000)\r\n              : null\r\n        };\r\n      }\r\n\r\n      // Track client activity\r\n      if (!clientActivity[client]) {\r\n        clientActivity[client] = {\r\n          totalCacheHitBytes: 0,\r\n          totalCacheMissBytes: 0,\r\n          totalDownloads: 0,\r\n          lastSeen: startTime\r\n        };\r\n      }\r\n\r\n      clientActivity[client].totalCacheHitBytes += download.cacheHitBytes || 0;\r\n      clientActivity[client].totalCacheMissBytes += download.cacheMissBytes || 0;\r\n      clientActivity[client].totalDownloads += 1;\r\n\r\n      // Update last seen if this is more recent\r\n      if (startTime > clientActivity[client].lastSeen) {\r\n        clientActivity[client].lastSeen = startTime;\r\n      }\r\n\r\n      downloads.push(download);\r\n    }\r\n\r\n    // Sort by start time (most recent first)\r\n    downloads.sort((a, b) => new Date(b.startTime).getTime() - new Date(a.startTime).getTime());\r\n\r\n    // Generate client stats based on actual download activity\r\n    const clientStats = clients\r\n      .map((ip) => {\r\n        const activity = clientActivity[ip];\r\n\r\n        if (activity) {\r\n          // Use actual data from downloads\r\n          const totalBytes = activity.totalCacheHitBytes + activity.totalCacheMissBytes;\r\n          return {\r\n            clientIp: ip,\r\n            totalCacheHitBytes: activity.totalCacheHitBytes,\r\n            totalCacheMissBytes: activity.totalCacheMissBytes,\r\n            totalBytes: totalBytes,\r\n            cacheHitPercent: totalBytes > 0 ? (activity.totalCacheHitBytes / totalBytes) * 100 : 0,\r\n            totalDownloads: activity.totalDownloads,\r\n            lastSeen: activity.lastSeen.toISOString()\r\n          };\r\n        } else {\r\n          // Client had no downloads - return zeros\r\n          return {\r\n            clientIp: ip,\r\n            totalCacheHitBytes: 0,\r\n            totalCacheMissBytes: 0,\r\n            totalBytes: 0,\r\n            cacheHitPercent: 0,\r\n            totalDownloads: 0,\r\n            lastSeen: null\r\n          };\r\n        }\r\n      })\r\n      .filter((client) => client.totalBytes > 0); // Only include clients with activity\r\n\r\n    // Generate service stats\r\n    const serviceStats = SERVICES.map((service) => {\r\n      const serviceDownloads = downloads.filter((d) => d.service === service);\r\n      const hitBytes = serviceDownloads.reduce((sum, d) => sum + d.cacheHitBytes, 0);\r\n      const missBytes = serviceDownloads.reduce((sum, d) => sum + d.cacheMissBytes, 0);\r\n\r\n      return {\r\n        service,\r\n        totalCacheHitBytes: hitBytes || cacheInfo.serviceSizes[service] * 0.8,\r\n        totalCacheMissBytes: missBytes || cacheInfo.serviceSizes[service] * 0.2,\r\n        totalBytes: hitBytes + missBytes || cacheInfo.serviceSizes[service],\r\n        cacheHitPercent: hitBytes + missBytes > 0 ? (hitBytes / (hitBytes + missBytes)) * 100 : 80,\r\n        totalDownloads: serviceDownloads.length,\r\n        lastActivity:\r\n          serviceDownloads[0]?.startTime ||\r\n          new Date(now.getTime() - Math.random() * 7200000).toISOString()\r\n      };\r\n    });\r\n\r\n    return {\r\n      cacheInfo,\r\n      activeDownloads: downloads.filter((d) => d.isActive),\r\n      latestDownloads: downloads,\r\n      clientStats,\r\n      serviceStats\r\n    };\r\n  }\r\n\r\n  static generateRealtimeUpdate(): any {\r\n    const clients = [\r\n      '192.168.1.100',\r\n      '192.168.1.101',\r\n      '192.168.1.102',\r\n      '192.168.1.103',\r\n      '192.168.1.104',\r\n      '192.168.1.105',\r\n      '192.168.1.106',\r\n      '192.168.1.107'\r\n    ];\r\n\r\n    const isMetadata = Math.random() < 0.2;\r\n\r\n    if (isMetadata) {\r\n      return {\r\n        id: Date.now(),\r\n        service: SERVICES[Math.floor(Math.random() * SERVICES.length)],\r\n        clientIp: clients[Math.floor(Math.random() * clients.length)],\r\n        startTime: new Date().toISOString(),\r\n        endTime: new Date().toISOString(),\r\n        cacheHitBytes: 0,\r\n        cacheMissBytes: 0,\r\n        totalBytes: 0,\r\n        cacheHitPercent: 0,\r\n        isActive: false\r\n      };\r\n    }\r\n\r\n    const cacheHitBytes = Math.floor(Math.random() * 500000000);\r\n    const cacheMissBytes = Math.floor(Math.random() * 100000000);\r\n\r\n    return {\r\n      id: Date.now(),\r\n      service: SERVICES[Math.floor(Math.random() * SERVICES.length)],\r\n      clientIp: clients[Math.floor(Math.random() * clients.length)],\r\n      startTime: new Date().toISOString(),\r\n      endTime: null,\r\n      cacheHitBytes,\r\n      cacheMissBytes,\r\n      totalBytes: cacheHitBytes + cacheMissBytes,\r\n      cacheHitPercent: (cacheHitBytes / (cacheHitBytes + cacheMissBytes)) * 100,\r\n      isActive: true,\r\n      gameName: Math.random() < 0.5 ? 'Counter-Strike 2' : null\r\n    };\r\n  }\r\n}\r\n\r\nexport default MockDataService;\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  type ReactNode\r\n} from 'react';\r\nimport ApiService from '@services/api.service';\r\nimport MockDataService from '@services/mockData.service';\r\nimport { REFRESH_INTERVAL } from '@utils/constants';\r\n\r\ninterface CacheInfo {\r\n  totalCacheSize: number;\r\n  usedCacheSize: number;\r\n  freeCacheSize: number;\r\n  usagePercent: number;\r\n  totalFiles: number;\r\n  serviceSizes: Record<string, number>;\r\n}\r\n\r\ninterface Download {\r\n  id: number;\r\n  service: string;\r\n  clientIp: string;\r\n  startTime: string;\r\n  endTime: string | null;\r\n  cacheHitBytes: number;\r\n  cacheMissBytes: number;\r\n  totalBytes: number;\r\n  cacheHitPercent: number;\r\n  isActive: boolean;\r\n  gameName?: string;\r\n  gameAppId?: number;\r\n}\r\n\r\ninterface ClientStat {\r\n  clientIp: string;\r\n  totalCacheHitBytes: number;\r\n  totalCacheMissBytes: number;\r\n  totalBytes: number;\r\n  cacheHitPercent: number;\r\n  totalDownloads: number;\r\n  lastSeen: string | null;\r\n}\r\n\r\ninterface ServiceStat {\r\n  service: string;\r\n  totalCacheHitBytes: number;\r\n  totalCacheMissBytes: number;\r\n  totalBytes: number;\r\n  cacheHitPercent: number;\r\n  totalDownloads: number;\r\n  lastActivity: string;\r\n}\r\n\r\ninterface ProcessingStatus {\r\n  type?: string;\r\n  message: string;\r\n  progress?: number;\r\n  estimatedTime?: string;\r\n  downloadCount?: number;\r\n}\r\n\r\ninterface DataContextType {\r\n  mockMode: boolean;\r\n  setMockMode: (mode: boolean) => void;\r\n  mockDownloadCount: number | 'unlimited';\r\n  updateMockDataCount: (count: number | 'unlimited') => void;\r\n  apiDownloadCount: number | 'unlimited';\r\n  updateApiDownloadCount: (count: number | 'unlimited') => void;\r\n  cacheInfo: CacheInfo | null;\r\n  activeDownloads: Download[];\r\n  latestDownloads: Download[];\r\n  clientStats: ClientStat[];\r\n  serviceStats: ServiceStat[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  fetchData: () => Promise<void>;\r\n  clearAllData: () => void;\r\n  isProcessingLogs: boolean;\r\n  setIsProcessingLogs: (processing: boolean) => void;\r\n  processingStatus: ProcessingStatus | null;\r\n  setProcessingStatus: (status: ProcessingStatus | null) => void;\r\n  connectionStatus: string;\r\n  getCurrentRefreshInterval: () => number;\r\n}\r\n\r\nconst DataContext = createContext<DataContextType | undefined>(undefined);\r\n\r\nexport const useData = () => {\r\n  const context = useContext(DataContext);\r\n  if (!context) throw new Error('useData must be used within DataProvider');\r\n  return context;\r\n};\r\n\r\ninterface DataProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  const [mockMode, setMockMode] = useState(false);\r\n  const [mockDownloadCount, setMockDownloadCount] = useState<number | 'unlimited'>(20);\r\n  const [apiDownloadCount, setApiDownloadCount] = useState<number | 'unlimited'>(20);\r\n  const [cacheInfo, setCacheInfo] = useState<CacheInfo | null>(null);\r\n  const [activeDownloads, setActiveDownloads] = useState<Download[]>([]);\r\n  const [latestDownloads, setLatestDownloads] = useState<Download[]>([]);\r\n  const [clientStats, setClientStats] = useState<ClientStat[]>([]);\r\n  const [serviceStats, setServiceStats] = useState<ServiceStat[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const [isProcessingLogs, setIsProcessingLogs] = useState(false);\r\n  const [processingStatus, setProcessingStatus] = useState<ProcessingStatus | null>(null);\r\n  const [connectionStatus, setConnectionStatus] = useState('checking');\r\n\r\n  const isInitialLoad = useRef(true);\r\n  const hasData = useRef(false);\r\n  const fetchInProgress = useRef(false);\r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  const getApiUrl = (): string => {\r\n    if (typeof import.meta !== 'undefined' && import.meta.env?.VITE_API_URL) {\r\n      return import.meta.env.VITE_API_URL;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const checkConnectionStatus = async () => {\r\n    try {\r\n      const apiUrl = getApiUrl();\r\n      const response = await fetch(`${apiUrl}/health`, {\r\n        signal: AbortSignal.timeout(5000)\r\n      });\r\n      if (response.ok) {\r\n        setConnectionStatus('connected');\r\n        return true;\r\n      }\r\n      setConnectionStatus('error');\r\n      return false;\r\n    } catch (err) {\r\n      setConnectionStatus('disconnected');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    if (fetchInProgress.current && !isInitialLoad.current) {\r\n      return;\r\n    }\r\n\r\n    fetchInProgress.current = true;\r\n\r\n    // Cancel any previous request\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort();\r\n    }\r\n    abortControllerRef.current = new AbortController();\r\n\r\n    try {\r\n      if (isInitialLoad.current) {\r\n        setLoading(true);\r\n      }\r\n\r\n      if (mockMode) {\r\n        // Cap mock data at 100 for performance\r\n        const actualCount =\r\n          mockDownloadCount === 'unlimited' ? 100 : Math.min(Number(mockDownloadCount), 100);\r\n        const mockData = MockDataService.generateMockData(actualCount);\r\n        setCacheInfo(mockData.cacheInfo);\r\n        setActiveDownloads(mockData.activeDownloads);\r\n        setLatestDownloads(mockData.latestDownloads);\r\n        setClientStats(mockData.clientStats);\r\n        setServiceStats(mockData.serviceStats);\r\n        setError(null);\r\n        setConnectionStatus('connected');\r\n        hasData.current = true;\r\n      } else {\r\n        const isConnected = await checkConnectionStatus();\r\n\r\n        if (isConnected) {\r\n          try {\r\n            const timeout = isProcessingLogs ? 30000 : 10000;\r\n            const timeoutId = setTimeout(() => abortControllerRef.current?.abort(), timeout);\r\n\r\n            if (isInitialLoad.current) {\r\n              // Phase 1: Critical data for initial display\r\n              const [cache, active] = await Promise.all([\r\n                ApiService.getCacheInfo(abortControllerRef.current.signal),\r\n                ApiService.getActiveDownloads(abortControllerRef.current.signal)\r\n              ]);\r\n\r\n              if (cache) setCacheInfo(cache);\r\n              if (active) setActiveDownloads(active);\r\n\r\n              // Phase 2: Limited downloads for initial display (cap at 20)\r\n              const latest = await ApiService.getLatestDownloads(\r\n                abortControllerRef.current.signal,\r\n                20\r\n              );\r\n              if (latest) {\r\n                setLatestDownloads(latest);\r\n                hasData.current = true;\r\n              }\r\n\r\n              // Phase 3: Defer stats loading after initial render\r\n              setTimeout(async () => {\r\n                if (abortControllerRef.current?.signal.aborted) return;\r\n\r\n                try {\r\n                  const [clients, services] = await Promise.all([\r\n                    ApiService.getClientStats(abortControllerRef.current!.signal),\r\n                    ApiService.getServiceStats(abortControllerRef.current!.signal)\r\n                  ]);\r\n                  if (clients) setClientStats(clients);\r\n                  if (services) setServiceStats(services);\r\n                } catch (err) {\r\n                  console.log('Deferred stats fetch error:', err);\r\n                }\r\n              }, 100);\r\n            } else {\r\n              // Regular updates - use user-specified count but cap at 100 for unlimited\r\n              const cappedCount = apiDownloadCount === 'unlimited' ? 100 : apiDownloadCount;\r\n\r\n              const [cache, active, latest, clients, services] = await Promise.allSettled([\r\n                ApiService.getCacheInfo(abortControllerRef.current.signal),\r\n                ApiService.getActiveDownloads(abortControllerRef.current.signal),\r\n                ApiService.getLatestDownloads(abortControllerRef.current.signal, cappedCount),\r\n                ApiService.getClientStats(abortControllerRef.current.signal),\r\n                ApiService.getServiceStats(abortControllerRef.current.signal)\r\n              ]);\r\n\r\n              if (cache.status === 'fulfilled' && cache.value !== undefined) {\r\n                setCacheInfo(cache.value);\r\n              }\r\n\r\n              if (active.status === 'fulfilled' && active.value !== undefined) {\r\n                setActiveDownloads(active.value);\r\n              }\r\n\r\n              if (latest.status === 'fulfilled' && latest.value !== undefined) {\r\n                setLatestDownloads(latest.value);\r\n                hasData.current = true;\r\n\r\n                if (isProcessingLogs && latest.value.length > 0) {\r\n                  setProcessingStatus((prev) => ({\r\n                    ...prev!,\r\n                    message: `Processing logs... Found ${latest.value.length} downloads`,\r\n                    downloadCount: latest.value.length\r\n                  }));\r\n                }\r\n              }\r\n\r\n              if (clients.status === 'fulfilled' && clients.value !== undefined) {\r\n                setClientStats(clients.value);\r\n              }\r\n\r\n              if (services.status === 'fulfilled' && services.value !== undefined) {\r\n                setServiceStats(services.value);\r\n              }\r\n            }\r\n\r\n            clearTimeout(timeoutId);\r\n            setError(null);\r\n          } catch (err: any) {\r\n            if (!hasData.current) {\r\n              if (err.name === 'AbortError') {\r\n                setError('Request timeout - the server may be busy');\r\n              } else {\r\n                setError('Failed to fetch data from API');\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          if (!hasData.current) {\r\n            setError('Cannot connect to API server');\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error in fetchData:', err);\r\n      if (!hasData.current && !mockMode) {\r\n        setError('An unexpected error occurred');\r\n      }\r\n    } finally {\r\n      if (isInitialLoad.current) {\r\n        setLoading(false);\r\n        isInitialLoad.current = false;\r\n      }\r\n      fetchInProgress.current = false;\r\n    }\r\n  };\r\n\r\n  const updateMockDataCount = (count: number | 'unlimited') => {\r\n    if (mockMode) {\r\n      // Cap at 100 for performance\r\n      const cappedCount = count === 'unlimited' ? 100 : Math.min(count, 100);\r\n      setMockDownloadCount(cappedCount);\r\n    }\r\n  };\r\n\r\n  const updateApiDownloadCount = (count: number | 'unlimited') => {\r\n    // Cap unlimited at 100 for performance\r\n    const cappedCount = count === 'unlimited' ? 100 : count;\r\n    setApiDownloadCount(cappedCount);\r\n  };\r\n\r\n  const getCurrentRefreshInterval = () => {\r\n    if (isProcessingLogs) return 15000; // 15 seconds when processing\r\n    if (apiDownloadCount === 'unlimited' || apiDownloadCount > 100) return 30000; // 30 seconds for large datasets\r\n    return REFRESH_INTERVAL; // Default 5 seconds\r\n  };\r\n\r\n  // Initial load and refresh interval\r\n  useEffect(() => {\r\n    if (!mockMode) {\r\n      fetchData();\r\n\r\n      const refreshInterval = getCurrentRefreshInterval();\r\n      intervalRef.current = setInterval(fetchData, refreshInterval);\r\n\r\n      return () => {\r\n        if (intervalRef.current) {\r\n          clearInterval(intervalRef.current);\r\n          intervalRef.current = null;\r\n        }\r\n        if (abortControllerRef.current) {\r\n          abortControllerRef.current.abort();\r\n        }\r\n      };\r\n    }\r\n  }, [isProcessingLogs, mockMode, apiDownloadCount]);\r\n\r\n  // Mock mode changes\r\n  useEffect(() => {\r\n    if (mockMode) {\r\n      // Clear any existing interval\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n\r\n      // Clear real data\r\n      setCacheInfo(null);\r\n      setActiveDownloads([]);\r\n      setLatestDownloads([]);\r\n      setClientStats([]);\r\n      setServiceStats([]);\r\n\r\n      // Generate mock data (capped at 100)\r\n      const actualCount =\r\n        mockDownloadCount === 'unlimited' ? 100 : Math.min(Number(mockDownloadCount), 100);\r\n      const mockData = MockDataService.generateMockData(actualCount);\r\n      setCacheInfo(mockData.cacheInfo);\r\n      setActiveDownloads(mockData.activeDownloads);\r\n      setLatestDownloads(mockData.latestDownloads);\r\n      setClientStats(mockData.clientStats);\r\n      setServiceStats(mockData.serviceStats);\r\n      setError(null);\r\n      setConnectionStatus('connected');\r\n      hasData.current = true;\r\n\r\n      // Set up mock update interval\r\n      const updateInterval = 30000;\r\n      intervalRef.current = setInterval(() => {\r\n        const newDownload = MockDataService.generateRealtimeUpdate();\r\n        setLatestDownloads((prev) => {\r\n          const maxCount = 100;\r\n          return [newDownload, ...prev.slice(0, maxCount - 1)];\r\n        });\r\n\r\n        setActiveDownloads((prev) => {\r\n          const updated = [newDownload, ...prev.filter((d) => d.id !== newDownload.id)];\r\n          return updated.slice(0, 5);\r\n        });\r\n      }, updateInterval);\r\n\r\n      return () => {\r\n        if (intervalRef.current) {\r\n          clearInterval(intervalRef.current);\r\n          intervalRef.current = null;\r\n        }\r\n      };\r\n    } else {\r\n      // Clear mock data and fetch real data\r\n      setCacheInfo(null);\r\n      setActiveDownloads([]);\r\n      setLatestDownloads([]);\r\n      setClientStats([]);\r\n      setServiceStats([]);\r\n      setError(null);\r\n      hasData.current = false;\r\n      isInitialLoad.current = true;\r\n\r\n      fetchData();\r\n    }\r\n  }, [mockMode, mockDownloadCount]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const clearAllData = () => {\r\n    setCacheInfo(null);\r\n    setActiveDownloads([]);\r\n    setLatestDownloads([]);\r\n    setClientStats([]);\r\n    setServiceStats([]);\r\n    hasData.current = false;\r\n  };\r\n\r\n  const value: DataContextType = {\r\n    mockMode,\r\n    setMockMode,\r\n    mockDownloadCount,\r\n    updateMockDataCount,\r\n    apiDownloadCount,\r\n    updateApiDownloadCount,\r\n    cacheInfo,\r\n    activeDownloads,\r\n    latestDownloads,\r\n    clientStats,\r\n    serviceStats,\r\n    loading,\r\n    error,\r\n    fetchData,\r\n    clearAllData,\r\n    isProcessingLogs,\r\n    setIsProcessingLogs,\r\n    processingStatus,\r\n    setProcessingStatus,\r\n    connectionStatus,\r\n    getCurrentRefreshInterval\r\n  };\r\n\r\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\r\n};\r\n","import React from 'react';\r\nimport { Monitor, Wifi } from 'lucide-react';\r\n\r\ninterface HeaderProps {\r\n  title?: string;\r\n  subtitle?: string;\r\n  connectionStatus?: 'connected' | 'disconnected' | 'reconnecting';\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n  title = 'LANCache Manager',\r\n  subtitle = 'High-performance cache monitoring & management',\r\n  connectionStatus = 'connected'\r\n}) => {\r\n  const getStatusInfo = () => {\r\n    switch (connectionStatus) {\r\n      case 'connected':\r\n        return {\r\n          color: 'cache-hit',\r\n          text: 'Connected',\r\n          icon: <Wifi className=\"w-4 h-4\" />\r\n        };\r\n      case 'disconnected':\r\n        return {\r\n          color: 'text-themed-error',\r\n          text: 'Disconnected',\r\n          icon: <Wifi className=\"w-4 h-4\" />\r\n        };\r\n      case 'reconnecting':\r\n        return {\r\n          color: 'cache-miss',\r\n          text: 'Reconnecting...',\r\n          icon: <Wifi className=\"w-4 h-4 animate-pulse\" />\r\n        };\r\n      default:\r\n        return {\r\n          color: 'text-themed-muted',\r\n          text: 'Unknown',\r\n          icon: <Wifi className=\"w-4 h-4\" />\r\n        };\r\n    }\r\n  };\r\n\r\n  const status = getStatusInfo();\r\n\r\n  return (\r\n    <header\r\n      className=\"border-b\"\r\n      style={{\r\n        backgroundColor: 'var(--theme-nav-bg)',\r\n        borderColor: 'var(--theme-nav-border)'\r\n      }}\r\n    >\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"flex items-center justify-between h-16 min-w-0\">\r\n          <div className=\"flex items-center space-x-2 sm:space-x-3 min-w-0 flex-1\">\r\n            <div className=\"p-1.5 sm:p-2 rounded-lg flex-shrink-0\" style={{ backgroundColor: 'var(--theme-icon-blue)' }}>\r\n              <Monitor className=\"w-5 h-5 sm:w-6 sm:h-6 text-white\" />\r\n            </div>\r\n            <div className=\"min-w-0 flex-1\">\r\n              <h1 className=\"text-lg sm:text-xl font-bold text-themed-primary truncate\">{title}</h1>\r\n              <p className=\"text-xs sm:text-sm text-themed-muted truncate hidden sm:block\">{subtitle}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-1 sm:space-x-2 flex-shrink-0\">\r\n            <div className={`flex items-center space-x-1 ${status.color}`}>\r\n              {status.icon}\r\n              <span className=\"text-xs sm:text-sm font-medium hidden sm:inline\">{status.text}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { LayoutDashboard, Download, Users, Settings, Menu, X } from 'lucide-react';\r\n\r\ninterface NavigationProps {\r\n  activeTab: string;\r\n  setActiveTab: (tab: string) => void;\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = ({ activeTab, setActiveTab }) => {\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n\r\n  const tabs = [\r\n    { id: 'dashboard', label: 'Dashboard', icon: LayoutDashboard },\r\n    { id: 'downloads', label: 'Downloads', icon: Download },\r\n    { id: 'clients', label: 'Clients', icon: Users },\r\n    { id: 'management', label: 'Management', icon: Settings }\r\n  ];\r\n\r\n  const TabButton: React.FC<{\r\n    tab: (typeof tabs)[0];\r\n    isActive: boolean;\r\n    onClick: () => void;\r\n    className?: string;\r\n  }> = ({ tab, isActive, onClick, className = '' }) => {\r\n    const Icon = tab.icon;\r\n\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        className={`flex items-center space-x-2 px-3 py-2 rounded-lg font-medium transition-all duration-200 ${className}`}\r\n        style={{\r\n          color: isActive ? 'var(--theme-nav-tab-active)' : 'var(--theme-nav-tab-inactive)',\r\n          backgroundColor: 'transparent'\r\n        }}\r\n        onMouseEnter={(e) => {\r\n          if (!isActive) {\r\n            e.currentTarget.style.color = 'var(--theme-nav-tab-hover)';\r\n            e.currentTarget.style.backgroundColor = 'var(--theme-nav-mobile-item-hover)';\r\n          }\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          if (!isActive) {\r\n            e.currentTarget.style.color = 'var(--theme-nav-tab-inactive)';\r\n            e.currentTarget.style.backgroundColor = 'transparent';\r\n          }\r\n        }}\r\n      >\r\n        <Icon className=\"w-5 h-5\" />\r\n        <span>{tab.label}</span>\r\n        {isActive && (\r\n          <div\r\n            className=\"absolute bottom-0 left-0 right-0 h-0.5 rounded-full\"\r\n            style={{ backgroundColor: 'var(--theme-nav-tab-active-border)' }}\r\n          />\r\n        )}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"border-b\"\r\n      style={{\r\n        backgroundColor: 'var(--theme-nav-bg)',\r\n        borderColor: 'var(--theme-nav-border)'\r\n      }}\r\n    >\r\n      <div className=\"container mx-auto px-4\">\r\n        {/* Desktop Navigation */}\r\n        <div className=\"hidden md:flex space-x-1 h-12 items-center\">\r\n          {tabs.map((tab) => (\r\n            <div key={tab.id} className=\"relative\">\r\n              <TabButton\r\n                tab={tab}\r\n                isActive={activeTab === tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Mobile Navigation */}\r\n        <div className=\"md:hidden\">\r\n          <div className=\"flex items-center justify-between h-12\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"font-medium text-themed-primary\">\r\n                {tabs.find((t) => t.id === activeTab)?.label || 'Dashboard'}\r\n              </span>\r\n            </div>\r\n            <button\r\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\r\n              className=\"p-2 rounded-lg transition-colors\"\r\n              style={{\r\n                color: 'var(--theme-nav-tab-inactive)',\r\n                backgroundColor: 'transparent'\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.backgroundColor = 'var(--theme-nav-mobile-item-hover)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.backgroundColor = 'transparent';\r\n              }}\r\n            >\r\n              {mobileMenuOpen ? <X className=\"w-5 h-5\" /> : <Menu className=\"w-5 h-5\" />}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Mobile Menu */}\r\n          {mobileMenuOpen && (\r\n            <div\r\n              className=\"border-t py-2 space-y-1\"\r\n              style={{\r\n                backgroundColor: 'var(--theme-nav-mobile-menu-bg)',\r\n                borderColor: 'var(--theme-nav-border)'\r\n              }}\r\n            >\r\n              {tabs.map((tab) => (\r\n                <TabButton\r\n                  key={tab.id}\r\n                  tab={tab}\r\n                  isActive={activeTab === tab.id}\r\n                  onClick={() => {\r\n                    setActiveTab(tab.id);\r\n                    setMobileMenuOpen(false);\r\n                  }}\r\n                  className=\"w-full justify-start\"\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component, type ReactNode } from 'react';\r\nimport { AlertCircle } from 'lucide-react';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('Error caught by boundary:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"min-h-screen bg-themed-primary flex items-center justify-center p-4\">\r\n          <div className=\"alert-error rounded-lg p-6 max-w-md w-full\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              <AlertCircle className=\"w-5 h-5 mt-0.5\" />\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold mb-2\">Something went wrong</h3>\r\n                <p className=\"text-sm text-themed-secondary\">\r\n                  {this.state.error?.message || 'An unexpected error occurred'}\r\n                </p>\r\n                <button\r\n                  onClick={() => window.location.reload()}\r\n                  className=\"mt-4 px-4 py-2 action-delete rounded-lg text-sm smooth-transition\"\r\n                >\r\n                  Reload Page\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport { Loader } from 'lucide-react';\r\n\r\ninterface LoadingSpinnerProps {\r\n  message?: string;\r\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n  fullScreen?: boolean;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\r\n  message,\r\n  size = 'md',\r\n  fullScreen = false\r\n}) => {\r\n  const sizeClasses = {\r\n    xs: 'w-4 h-4',\r\n    sm: 'w-6 h-6',\r\n    md: 'w-8 h-8',\r\n    lg: 'w-12 h-12',\r\n    xl: 'w-16 h-16'\r\n  };\r\n\r\n  const content = (\r\n    <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n      <Loader className={`${sizeClasses[size]} text-themed-primary animate-spin`} />\r\n      {message && <p className=\"text-sm text-themed-muted\">{message}</p>}\r\n    </div>\r\n  );\r\n\r\n  if (fullScreen) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-themed-primary bg-opacity-50 flex items-center justify-center z-50\">\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div className=\"flex items-center justify-center min-h-[200px]\">{content}</div>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, Suspense, lazy } from 'react';\r\nimport { DataProvider } from '@contexts/DataContext';\r\nimport Header from '@components/layout/Header';\r\nimport Navigation from '@components/layout/Navigation';\r\nimport ErrorBoundary from '@components/common/ErrorBoundary';\r\nimport LoadingSpinner from '@components/common/LoadingSpinner';\r\n\r\n// Lazy load heavy components\r\nconst Dashboard = lazy(() => import('@components/dashboard/Dashboard'));\r\nconst DownloadsTab = lazy(() => import('@components/downloads/DownloadsTab'));\r\nconst ClientsTab = lazy(() => import('@components/clients/ClientsTab'));\r\nconst ServicesTab = lazy(() => import('@components/services/ServicesTab'));\r\nconst ManagementTab = lazy(() => import('@components/management/ManagementTab'));\r\n\r\nconst App: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n\r\n  const renderContent = () => {\r\n    const TabComponent = (() => {\r\n      switch (activeTab) {\r\n        case 'dashboard':\r\n          return Dashboard;\r\n        case 'downloads':\r\n          return DownloadsTab;\r\n        case 'clients':\r\n          return ClientsTab;\r\n        case 'services':\r\n          return ServicesTab;\r\n        case 'management':\r\n          return ManagementTab;\r\n        default:\r\n          return Dashboard;\r\n      }\r\n    })();\r\n\r\n    return (\r\n      <Suspense fallback={<LoadingSpinner fullScreen={false} message=\"Loading...\" />}>\r\n        <TabComponent />\r\n      </Suspense>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <DataProvider>\r\n        <div\r\n          className=\"min-h-screen\"\r\n          style={{\r\n            backgroundColor: 'var(--theme-bg-primary)',\r\n            color: 'var(--theme-text-primary)'\r\n          }}\r\n        >\r\n          <Header />\r\n          <Navigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n          <main className=\"container mx-auto px-4 py-6\">{renderContent()}</main>\r\n        </div>\r\n      </DataProvider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { API_BASE } from '../utils/constants';\r\nimport authService from './auth.service';\r\nimport * as TOML from 'toml';\r\n\r\ninterface ThemeColors {\r\n  // Core colors\r\n  primaryColor?: string;\r\n  secondaryColor?: string;\r\n  accentColor?: string;\r\n\r\n  // Background colors\r\n  bgPrimary?: string;\r\n  bgSecondary?: string;\r\n  bgTertiary?: string;\r\n  bgHover?: string;\r\n\r\n  // Text colors\r\n  textPrimary?: string;\r\n  textSecondary?: string;\r\n  textMuted?: string;\r\n  textAccent?: string;\r\n  textPlaceholder?: string;\r\n\r\n  // Drag handle colors\r\n  dragHandleColor?: string;\r\n  dragHandleHover?: string;\r\n\r\n  // Border colors\r\n  borderPrimary?: string;\r\n  borderSecondary?: string;\r\n  borderFocus?: string;\r\n\r\n  // Navigation specific colors\r\n  navBg?: string;\r\n  navBorder?: string;\r\n  navTabActive?: string;\r\n  navTabInactive?: string;\r\n  navTabHover?: string;\r\n  navTabActiveBorder?: string;\r\n  navMobileMenuBg?: string;\r\n  navMobileItemHover?: string;\r\n\r\n  // Status colors\r\n  success?: string;\r\n  successBg?: string;\r\n  successText?: string;\r\n  warning?: string;\r\n  warningBg?: string;\r\n  warningText?: string;\r\n  error?: string;\r\n  errorBg?: string;\r\n  errorText?: string;\r\n  info?: string;\r\n  infoBg?: string;\r\n  infoText?: string;\r\n\r\n  // Service colors\r\n  steamColor?: string;\r\n  epicColor?: string;\r\n  originColor?: string;\r\n  blizzardColor?: string;\r\n  wsusColor?: string;\r\n  riotColor?: string;\r\n\r\n  // Component colors\r\n  cardBg?: string;\r\n  cardBorder?: string;\r\n  buttonBg?: string;\r\n  buttonHover?: string;\r\n  buttonText?: string;\r\n  inputBg?: string;\r\n  inputBorder?: string;\r\n  inputFocus?: string;\r\n  badgeBg?: string;\r\n  badgeText?: string;\r\n  progressBar?: string;\r\n  progressBg?: string;\r\n\r\n  // Hit rate specific colors\r\n  hitRateHighBg?: string;\r\n  hitRateHighText?: string;\r\n  hitRateMediumBg?: string;\r\n  hitRateMediumText?: string;\r\n  hitRateLowBg?: string;\r\n  hitRateLowText?: string;\r\n  hitRateWarningBg?: string;\r\n  hitRateWarningText?: string;\r\n\r\n  // Action button colors\r\n  actionResetBg?: string;\r\n  actionResetHover?: string;\r\n  actionProcessBg?: string;\r\n  actionProcessHover?: string;\r\n  actionDeleteBg?: string;\r\n  actionDeleteHover?: string;\r\n\r\n  // Icon backgrounds\r\n  iconBgBlue?: string;\r\n  iconBgGreen?: string;\r\n  iconBgEmerald?: string;\r\n  iconBgPurple?: string;\r\n  iconBgIndigo?: string;\r\n  iconBgOrange?: string;\r\n  iconBgYellow?: string;\r\n  iconBgCyan?: string;\r\n  iconBgRed?: string;\r\n\r\n  // Chart colors\r\n  chartColor1?: string;\r\n  chartColor2?: string;\r\n  chartColor3?: string;\r\n  chartColor4?: string;\r\n  chartColor5?: string;\r\n  chartColor6?: string;\r\n  chartColor7?: string;\r\n  chartColor8?: string;\r\n  chartBorderColor?: string;\r\n  chartGridColor?: string;\r\n  chartTextColor?: string;\r\n  chartCacheHitColor?: string;\r\n  chartCacheMissColor?: string;\r\n\r\n  // Scrollbar colors\r\n  scrollbarTrack?: string;\r\n  scrollbarThumb?: string;\r\n  scrollbarHover?: string;\r\n\r\n  // Access indicator colors\r\n  publicAccessBg?: string;\r\n  publicAccessText?: string;\r\n  publicAccessBorder?: string;\r\n  securedAccessBg?: string;\r\n  securedAccessText?: string;\r\n  securedAccessBorder?: string;\r\n}\r\n\r\ninterface ThemeMeta {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  author?: string;\r\n  version?: string;\r\n  isDark?: boolean;\r\n}\r\n\r\ninterface Theme {\r\n  meta: ThemeMeta;\r\n  colors: ThemeColors;\r\n  custom?: Record<string, string>;\r\n  css?: { content?: string };\r\n}\r\n\r\nclass ThemeService {\r\n  private currentTheme: Theme | null = null;\r\n  private styleElement: HTMLStyleElement | null = null;\r\n\r\n  async loadThemes(): Promise<Theme[]> {\r\n    const builtInThemes = this.getBuiltInThemes();\r\n\r\n    const apiThemes: Theme[] = [];\r\n    const deletedThemeIds: string[] = [];\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE}/theme`);\r\n      if (response.ok) {\r\n        const themeList = await response.json();\r\n\r\n        for (const themeInfo of themeList) {\r\n          if (themeInfo.format === 'toml') {\r\n            try {\r\n              const themeResponse = await fetch(`${API_BASE}/theme/${themeInfo.id}`);\r\n\r\n              if (themeResponse.status === 404) {\r\n                deletedThemeIds.push(themeInfo.id);\r\n                console.log(`Theme ${themeInfo.id} no longer exists on server`);\r\n                continue;\r\n              }\r\n\r\n              if (themeResponse.ok) {\r\n                const tomlContent = await themeResponse.text();\r\n                const theme = this.parseTomlTheme(tomlContent);\r\n                if (theme) {\r\n                  apiThemes.push(theme);\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.error(`Failed to load theme ${themeInfo.id}:`, error);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (deletedThemeIds.length > 0) {\r\n          // If current theme was deleted, reset to default\r\n          if (this.currentTheme && deletedThemeIds.includes(this.currentTheme.meta.id)) {\r\n            console.log(`Current theme ${this.currentTheme.meta.id} was deleted, resetting to default`);\r\n            const darkDefault = builtInThemes.find((t) => t.meta.id === 'dark-default');\r\n            if (darkDefault) {\r\n              this.applyTheme(darkDefault);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load themes from server:', error);\r\n    }\r\n\r\n    const allThemes = [...builtInThemes];\r\n    const themeIds = new Set(allThemes.map((t) => t.meta.id));\r\n\r\n    apiThemes.forEach((theme) => {\r\n      if (!themeIds.has(theme.meta.id)) {\r\n        allThemes.push(theme);\r\n        themeIds.add(theme.meta.id);\r\n      }\r\n    });\r\n\r\n    return allThemes;\r\n  }\r\n\r\n  private getBuiltInThemes(): Theme[] {\r\n    return [\r\n      {\r\n        meta: {\r\n          id: 'dark-default',\r\n          name: 'Dark Default',\r\n          description: 'Default dark theme with blue accents',\r\n          author: 'System',\r\n          version: '1.0.0',\r\n          isDark: true\r\n        },\r\n        colors: {\r\n          // Core colors\r\n          primaryColor: '#3b82f6',\r\n          secondaryColor: '#8b5cf6',\r\n          accentColor: '#06b6d4',\r\n\r\n          // Backgrounds\r\n          bgPrimary: '#111827',\r\n          bgSecondary: '#1f2937',\r\n          bgTertiary: '#374151',\r\n          bgHover: '#4b5563',\r\n\r\n          // Text\r\n          textPrimary: '#ffffff',\r\n          textSecondary: '#d1d5db',\r\n          textMuted: '#9ca3af',\r\n          textAccent: '#60a5fa',\r\n          textPlaceholder: '#6b7280',\r\n          \r\n          // Drag handle\r\n          dragHandleColor: '#6b7280',\r\n          dragHandleHover: '#60a5fa',\r\n\r\n          // Borders\r\n          borderPrimary: '#374151',\r\n          borderSecondary: '#4b5563',\r\n          borderFocus: '#3b82f6',\r\n\r\n          // Navigation\r\n          navBg: '#1f2937',\r\n          navBorder: '#374151',\r\n          navTabActive: '#3b82f6',\r\n          navTabInactive: '#9ca3af',\r\n          navTabHover: '#ffffff',\r\n          navTabActiveBorder: '#3b82f6',\r\n          navMobileMenuBg: '#1f2937',\r\n          navMobileItemHover: '#374151',\r\n\r\n          // Status colors\r\n          success: '#10b981',\r\n          successBg: '#064e3b',\r\n          successText: '#34d399',\r\n          warning: '#fb923c',\r\n          warningBg: '#44403c', // Softer warm grey-brown\r\n          warningText: '#fcd34d', // Bright golden yellow\r\n          error: '#ef4444',\r\n          errorBg: '#7f1d1d',\r\n          errorText: '#fca5a5',\r\n          info: '#3b82f6',\r\n          infoBg: '#1e3a8a',\r\n          infoText: '#93c5fd',\r\n\r\n          // Service colors\r\n          steamColor: '#3b82f6',\r\n          epicColor: '#8b5cf6',\r\n          originColor: '#10b981',\r\n          blizzardColor: '#ef4444',\r\n          wsusColor: '#06b6d4',\r\n          riotColor: '#f59e0b',\r\n\r\n          // Components\r\n          cardBg: '#1f2937',\r\n          cardBorder: '#374151',\r\n          buttonBg: '#3b82f6',\r\n          buttonHover: '#2563eb',\r\n          buttonText: '#ffffff',\r\n          inputBg: '#374151',\r\n          inputBorder: '#4b5563',\r\n          inputFocus: '#3b82f6',\r\n          badgeBg: '#3b82f6',\r\n          badgeText: '#ffffff',\r\n          progressBar: '#3b82f6',\r\n          progressBg: '#374151',\r\n\r\n          // Hit rate specific - MUCH PRETTIER COLORS\r\n          hitRateHighBg: '#064e3b',\r\n          hitRateHighText: '#34d399',\r\n          hitRateMediumBg: '#1e3a8a',\r\n          hitRateMediumText: '#93c5fd',\r\n          hitRateLowBg: '#44403c', // Warm neutral grey-brown\r\n          hitRateLowText: '#fbbf24', // Bright amber\r\n          hitRateWarningBg: '#44403c', // Same warm neutral background\r\n          hitRateWarningText: '#fcd34d', // Golden yellow (prettier!)\r\n\r\n          // Action buttons\r\n          actionResetBg: '#f59e0b',\r\n          actionResetHover: '#d97706',\r\n          actionProcessBg: '#10b981',\r\n          actionProcessHover: '#059669',\r\n          actionDeleteBg: '#ef4444',\r\n          actionDeleteHover: '#dc2626',\r\n\r\n          // Icon backgrounds\r\n          iconBgBlue: '#3b82f6',\r\n          iconBgGreen: '#10b981',\r\n          iconBgEmerald: '#10b981',\r\n          iconBgPurple: '#8b5cf6',\r\n          iconBgIndigo: '#6366f1',\r\n          iconBgOrange: '#f97316',\r\n          iconBgYellow: '#eab308',\r\n          iconBgCyan: '#06b6d4',\r\n          iconBgRed: '#ef4444',\r\n\r\n          // Chart colors\r\n          chartColor1: '#3b82f6',\r\n          chartColor2: '#10b981',\r\n          chartColor3: '#f59e0b',\r\n          chartColor4: '#ef4444',\r\n          chartColor5: '#8b5cf6',\r\n          chartColor6: '#06b6d4',\r\n          chartColor7: '#f97316',\r\n          chartColor8: '#ec4899',\r\n          chartBorderColor: '#1f2937',\r\n          chartGridColor: '#374151',\r\n          chartTextColor: '#9ca3af',\r\n          chartCacheHitColor: '#10b981',\r\n          chartCacheMissColor: '#f59e0b',\r\n\r\n          // Scrollbar colors\r\n          scrollbarTrack: '#374151',\r\n          scrollbarThumb: '#6B7280',\r\n          scrollbarHover: '#9CA3AF',\r\n\r\n          // Access indicator colors\r\n          publicAccessBg: 'rgba(16, 185, 129, 0.2)',  // green-500 with 20% opacity\r\n          publicAccessText: '#34d399',                 // green-400\r\n          publicAccessBorder: 'rgba(16, 185, 129, 0.3)', // green-500 with 30% opacity\r\n          securedAccessBg: 'rgba(245, 158, 11, 0.2)',    // yellow-500 with 20% opacity\r\n          securedAccessText: '#fbbf24',                   // yellow-400\r\n          securedAccessBorder: 'rgba(245, 158, 11, 0.3)'  // yellow-500 with 30% opacity\r\n        }\r\n      },\r\n      // In theme.service.ts, update the light-default theme:\r\n\r\n      {\r\n        meta: {\r\n          id: 'light-default',\r\n          name: 'Light Default',\r\n          description: 'Default light theme with blue accents',\r\n          author: 'System',\r\n          version: '1.0.0',\r\n          isDark: false\r\n        },\r\n        colors: {\r\n          // Core colors\r\n          primaryColor: '#3b82f6',\r\n          secondaryColor: '#8b5cf6',\r\n          accentColor: '#06b6d4',\r\n\r\n          // Backgrounds - LIGHT GREY INSTEAD OF WHITE\r\n          bgPrimary: '#f8f9fa',\r\n          bgSecondary: '#ffffff',\r\n          bgTertiary: '#f3f4f6',\r\n          bgHover: '#e5e7eb',\r\n\r\n          // Text\r\n          textPrimary: '#111827',\r\n          textSecondary: '#374151',\r\n          textMuted: '#6b7280',\r\n          textAccent: '#2563eb',\r\n          textPlaceholder: '#9ca3af',\r\n          \r\n          // Drag handle\r\n          dragHandleColor: '#9ca3af',\r\n          dragHandleHover: '#2563eb',\r\n\r\n          // Borders\r\n          borderPrimary: '#e5e7eb',\r\n          borderSecondary: '#d1d5db',\r\n          borderFocus: '#3b82f6',\r\n\r\n          // Navigation\r\n          navBg: '#ffffff',\r\n          navBorder: '#e5e7eb',\r\n          navTabActive: '#3b82f6',\r\n          navTabInactive: '#6b7280',\r\n          navTabHover: '#111827',\r\n          navTabActiveBorder: '#3b82f6',\r\n          navMobileMenuBg: '#ffffff',\r\n          navMobileItemHover: '#f3f4f6',\r\n\r\n          // Status colors - FIXED FOR BETTER CONTRAST ON LIGHT BACKGROUNDS\r\n          success: '#10b981',\r\n          successBg: '#d1fae5',\r\n          successText: '#047857', // Changed from '#065f46' - darker green for better contrast\r\n          warning: '#f97316',\r\n          warningBg: '#fef3c7',\r\n          warningText: '#b45309', // Changed from '#92400e' - darker amber for better contrast\r\n          error: '#ef4444',\r\n          errorBg: '#fee2e2',\r\n          errorText: '#991b1b',\r\n          info: '#3b82f6',\r\n          infoBg: '#dbeafe',\r\n          infoText: '#1e40af',\r\n\r\n          // Service colors\r\n          steamColor: '#3b82f6',\r\n          epicColor: '#8b5cf6',\r\n          originColor: '#10b981',\r\n          blizzardColor: '#ef4444',\r\n          wsusColor: '#06b6d4',\r\n          riotColor: '#f59e0b',\r\n\r\n          // Components\r\n          cardBg: '#ffffff',\r\n          cardBorder: '#e5e7eb',\r\n          buttonBg: '#3b82f6',\r\n          buttonHover: '#2563eb',\r\n          buttonText: '#ffffff',\r\n          inputBg: '#ffffff',\r\n          inputBorder: '#d1d5db',\r\n          inputFocus: '#3b82f6',\r\n          badgeBg: '#3b82f6',\r\n          badgeText: '#ffffff',\r\n          progressBar: '#3b82f6',\r\n          progressBg: '#e5e7eb',\r\n\r\n          // Hit rate specific - MUCH PRETTIER COLORS\r\n          hitRateHighBg: '#d1fae5',\r\n          hitRateHighText: '#047857', // Changed to match successText for consistency\r\n          hitRateMediumBg: '#dbeafe',\r\n          hitRateMediumText: '#1e40af',\r\n          hitRateLowBg: '#fef3c7',\r\n          hitRateLowText: '#92400e',\r\n          hitRateWarningBg: '#fef3c7',\r\n          hitRateWarningText: '#92400e',\r\n\r\n          // Action buttons\r\n          actionResetBg: '#f59e0b',\r\n          actionResetHover: '#d97706',\r\n          actionProcessBg: '#10b981',\r\n          actionProcessHover: '#059669',\r\n          actionDeleteBg: '#ef4444',\r\n          actionDeleteHover: '#dc2626',\r\n\r\n          // Icon backgrounds\r\n          iconBgBlue: '#3b82f6',\r\n          iconBgGreen: '#10b981',\r\n          iconBgEmerald: '#10b981',\r\n          iconBgPurple: '#8b5cf6',\r\n          iconBgIndigo: '#6366f1',\r\n          iconBgOrange: '#f97316',\r\n          iconBgYellow: '#eab308',\r\n          iconBgCyan: '#06b6d4',\r\n          iconBgRed: '#ef4444',\r\n\r\n          // Chart colors\r\n          chartColor1: '#3b82f6',\r\n          chartColor2: '#10b981',\r\n          chartColor3: '#f59e0b',\r\n          chartColor4: '#ef4444',\r\n          chartColor5: '#8b5cf6',\r\n          chartColor6: '#06b6d4',\r\n          chartColor7: '#f97316',\r\n          chartColor8: '#ec4899',\r\n          chartBorderColor: '#e5e7eb',\r\n          chartGridColor: '#d1d5db',\r\n          chartTextColor: '#6b7280',\r\n          chartCacheHitColor: '#047857', // Changed to darker green for better contrast\r\n          chartCacheMissColor: '#b45309', // Changed to darker amber for better contrast\r\n\r\n          // Scrollbar colors - Light theme appropriate\r\n          scrollbarTrack: '#e5e7eb',\r\n          scrollbarThumb: '#9ca3af',\r\n          scrollbarHover: '#6b7280',\r\n\r\n          // Access indicator colors\r\n          publicAccessBg: '#d1fae5',      // green-100\r\n          publicAccessText: '#047857',    // green-800\r\n          publicAccessBorder: '#86efac',  // green-300\r\n          securedAccessBg: '#fef3c7',     // yellow-100\r\n          securedAccessText: '#92400e',   // yellow-800\r\n          securedAccessBorder: '#fde047'  // yellow-300\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  async getTheme(themeId: string): Promise<Theme | null> {\r\n    const builtIn = this.getBuiltInThemes().find((t) => t.meta.id === themeId);\r\n    if (builtIn) return builtIn;\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE}/theme/${themeId}`);\r\n      if (!response.ok) return null;\r\n\r\n      const tomlText = await response.text();\r\n      return this.parseTomlTheme(tomlText);\r\n    } catch (error) {\r\n      console.error('Error loading theme:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  parseTomlTheme(tomlText: string): Theme | null {\r\n    try {\r\n      const parsed = TOML.parse(tomlText);\r\n\r\n      if (!parsed.meta || !parsed.meta.id || !parsed.meta.name) {\r\n        console.error('Invalid theme: missing meta.id or meta.name');\r\n        return null;\r\n      }\r\n\r\n      if (!parsed.colors) {\r\n        console.error('Invalid theme: missing colors section');\r\n        return null;\r\n      }\r\n\r\n      return parsed as Theme;\r\n    } catch (error) {\r\n      console.error('Error parsing TOML theme:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async uploadTheme(file: File): Promise<Theme> {\r\n    const text = await file.text();\r\n    const theme = this.parseTomlTheme(text);\r\n\r\n    if (!theme) {\r\n      throw new Error('Invalid TOML theme format');\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE}/theme/upload`, {\r\n        method: 'POST',\r\n        headers: authService.getAuthHeaders(),\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json().catch(() => ({ error: 'Failed to upload theme' }));\r\n        throw new Error(error.error || 'Failed to upload theme');\r\n      }\r\n\r\n      return theme;\r\n    } catch (error: any) {\r\n      if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {\r\n        throw new Error('Cannot save theme: API server is not running. Please start the LANCache Manager API service.');\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteTheme(themeId: string): Promise<void> {\r\n    const response = await fetch(`${API_BASE}/theme/${themeId}`, {\r\n      method: 'DELETE',\r\n      headers: authService.getAuthHeaders()\r\n    });\r\n\r\n    if (!response.ok && response.status !== 404) {\r\n      const error = await response.json().catch(() => ({ error: 'Failed to delete theme' }));\r\n      throw new Error(error.error || 'Failed to delete theme');\r\n    }\r\n  }\r\n\r\n  private applyDefaultVariables(): void {\r\n    const defaultStyles = `\r\n      :root {\r\n        --theme-primary: #3b82f6;\r\n        --theme-secondary: #8b5cf6;\r\n        --theme-accent: #06b6d4;\r\n        --theme-bg-primary: #111827;\r\n        --theme-bg-secondary: #1f2937;\r\n        --theme-bg-tertiary: #374151;\r\n        --theme-bg-hover: #4b5563;\r\n        --theme-text-primary: #ffffff;\r\n        --theme-text-secondary: #d1d5db;\r\n        --theme-text-muted: #9ca3af;\r\n        --theme-text-accent: #60a5fa;\r\n        --theme-drag-handle: #6b7280;\r\n        --theme-drag-handle-hover: #60a5fa;\r\n        --theme-border-primary: #374151;\r\n        --theme-border-secondary: #4b5563;\r\n        --theme-border-focus: #3b82f6;\r\n        --theme-nav-bg: #1f2937;\r\n        --theme-nav-border: #374151;\r\n        --theme-nav-tab-active: #3b82f6;\r\n        --theme-nav-tab-inactive: #9ca3af;\r\n        --theme-nav-tab-hover: #ffffff;\r\n        --theme-nav-tab-active-border: #3b82f6;\r\n        --theme-nav-mobile-menu-bg: #1f2937;\r\n        --theme-nav-mobile-item-hover: #374151;\r\n        --theme-success: #10b981;\r\n        --theme-success-bg: #064e3b;\r\n        --theme-success-text: #34d399;\r\n        --theme-warning: #f59e0b;\r\n        --theme-warning-bg: #78350f;\r\n        --theme-warning-text: #fbbf24;\r\n        --theme-error: #ef4444;\r\n        --theme-error-bg: #7f1d1d;\r\n        --theme-error-text: #fca5a5;\r\n        --theme-info: #3b82f6;\r\n        --theme-info-bg: #1e3a8a;\r\n        --theme-info-text: #93c5fd;\r\n        --theme-steam: #3b82f6;\r\n        --theme-epic: #8b5cf6;\r\n        --theme-origin: #10b981;\r\n        --theme-blizzard: #ef4444;\r\n        --theme-wsus: #06b6d4;\r\n        --theme-riot: #f59e0b;\r\n        --theme-card-bg: #1f2937;\r\n        --theme-card-border: #374151;\r\n        --theme-button-bg: #3b82f6;\r\n        --theme-button-hover: #2563eb;\r\n        --theme-button-text: #ffffff;\r\n        --theme-input-bg: #374151;\r\n        --theme-input-border: #4b5563;\r\n        --theme-input-focus: #3b82f6;\r\n        --theme-badge-bg: #3b82f6;\r\n        --theme-badge-text: #ffffff;\r\n        --theme-progress-bar: #3b82f6;\r\n        --theme-progress-bg: #374151;\r\n        --theme-hit-rate-high-bg: #064e3b;\r\n        --theme-hit-rate-high-text: #34d399;\r\n        --theme-hit-rate-medium-bg: #1e3a8a;\r\n        --theme-hit-rate-medium-text: #93c5fd;\r\n        --theme-hit-rate-low-bg: #ea580c;\r\n        --theme-hit-rate-low-text: #fb923c;\r\n        --theme-hit-rate-warning-bg: #78350f;\r\n        --theme-hit-rate-warning-text: #fbbf24;\r\n        --theme-action-reset-bg: #f59e0b;\r\n        --theme-action-reset-hover: #d97706;\r\n        --theme-action-process-bg: #10b981;\r\n        --theme-action-process-hover: #059669;\r\n        --theme-action-delete-bg: #ef4444;\r\n        --theme-action-delete-hover: #dc2626;\r\n        --theme-icon-blue: #3b82f6;\r\n        --theme-icon-green: #10b981;\r\n        --theme-icon-emerald: #10b981;\r\n        --theme-icon-purple: #8b5cf6;\r\n        --theme-icon-indigo: #6366f1;\r\n        --theme-icon-orange: #f97316;\r\n        --theme-icon-yellow: #eab308;\r\n        --theme-icon-cyan: #06b6d4;\r\n        --theme-icon-red: #ef4444;\r\n        --theme-chart-1: #3b82f6;\r\n        --theme-chart-2: #10b981;\r\n        --theme-chart-3: #f59e0b;\r\n        --theme-chart-4: #ef4444;\r\n        --theme-chart-5: #8b5cf6;\r\n        --theme-chart-6: #06b6d4;\r\n        --theme-chart-7: #f97316;\r\n        --theme-chart-8: #ec4899;\r\n        --theme-chart-border: #1f2937;\r\n        --theme-chart-grid: #374151;\r\n        --theme-chart-text: #9ca3af;\r\n        --theme-chart-cache-hit: #10b981;\r\n        --theme-chart-cache-miss: #f59e0b;\r\n      }\r\n    `;\r\n\r\n    let defaultStyleElement = document.getElementById('lancache-default-vars');\r\n    if (!defaultStyleElement) {\r\n      defaultStyleElement = document.createElement('style');\r\n      defaultStyleElement.id = 'lancache-default-vars';\r\n      document.head.appendChild(defaultStyleElement);\r\n    }\r\n    defaultStyleElement.textContent = defaultStyles;\r\n  }\r\n\r\n  clearTheme(): void {\r\n    if (this.styleElement) {\r\n      this.styleElement.remove();\r\n      this.styleElement = null;\r\n    }\r\n\r\n    const root = document.documentElement;\r\n    root.removeAttribute('data-theme');\r\n    root.removeAttribute('data-theme-id');\r\n    this.currentTheme = null;\r\n    \r\n    // Clear all saved theme data\r\n    localStorage.removeItem('lancache_selected_theme');\r\n    localStorage.removeItem('lancache_theme_css');\r\n    localStorage.removeItem('lancache_theme_dark');\r\n\r\n    this.applyDefaultVariables();\r\n  }\r\n\r\n  applyTheme(theme: Theme): void {\r\n    if (!theme || !theme.colors) return;\r\n\r\n    // Remove any existing theme styles\r\n    if (this.styleElement) {\r\n      this.styleElement.remove();\r\n      this.styleElement = null;\r\n    }\r\n    \r\n    // Remove preload styles since we're applying the real theme\r\n    const preloadStyle = document.getElementById('lancache-theme-preload');\r\n    if (preloadStyle) {\r\n      preloadStyle.remove();\r\n    }\r\n    \r\n    const defaultPreload = document.getElementById('lancache-default-preload');\r\n    if (defaultPreload) {\r\n      defaultPreload.remove();\r\n    }\r\n\r\n    const colors = theme.colors;\r\n\r\n    // Create clean theme styles with only CSS variables - no Tailwind overrides\r\n    const themeStyles = `\r\n    :root {\r\n      --theme-primary: ${colors.primaryColor || '#3b82f6'};\r\n      --theme-secondary: ${colors.secondaryColor || '#8b5cf6'};\r\n      --theme-accent: ${colors.accentColor || '#06b6d4'};\r\n      --theme-bg-primary: ${colors.bgPrimary || '#111827'};\r\n      --theme-bg-secondary: ${colors.bgSecondary || '#1f2937'};\r\n      --theme-bg-tertiary: ${colors.bgTertiary || '#374151'};\r\n      --theme-bg-hover: ${colors.bgHover || '#4b5563'};\r\n      --theme-text-primary: ${colors.textPrimary || '#ffffff'};\r\n      --theme-text-secondary: ${colors.textSecondary || '#d1d5db'};\r\n      --theme-text-muted: ${colors.textMuted || '#9ca3af'};\r\n      --theme-text-accent: ${colors.textAccent || '#60a5fa'};\r\n      --theme-text-placeholder: ${colors.textPlaceholder || '#6b7280'};\r\n      --theme-drag-handle: ${colors.dragHandleColor || colors.textMuted || '#6b7280'};\r\n      --theme-drag-handle-hover: ${colors.dragHandleHover || colors.textAccent || '#60a5fa'};\r\n      --theme-border-primary: ${colors.borderPrimary || '#374151'};\r\n      --theme-border-secondary: ${colors.borderSecondary || '#4b5563'};\r\n      --theme-border-focus: ${colors.borderFocus || '#3b82f6'};\r\n      \r\n      /* Navigation Variables */\r\n      --theme-nav-bg: ${colors.navBg || colors.bgSecondary || '#1f2937'};\r\n      --theme-nav-border: ${colors.navBorder || colors.borderPrimary || '#374151'};\r\n      --theme-nav-tab-active: ${colors.navTabActive || colors.primaryColor || '#3b82f6'};\r\n      --theme-nav-tab-inactive: ${colors.navTabInactive || colors.textMuted || '#9ca3af'};\r\n      --theme-nav-tab-hover: ${colors.navTabHover || colors.textPrimary || '#ffffff'};\r\n      --theme-nav-tab-active-border: ${colors.navTabActiveBorder || colors.primaryColor || '#3b82f6'};\r\n      --theme-nav-mobile-menu-bg: ${colors.navMobileMenuBg || colors.bgSecondary || '#1f2937'};\r\n      --theme-nav-mobile-item-hover: ${colors.navMobileItemHover || colors.bgTertiary || '#374151'};\r\n      \r\n      /* Status Colors */\r\n      --theme-success: ${colors.success || '#10b981'};\r\n      --theme-success-bg: ${colors.successBg || '#064e3b'};\r\n      --theme-success-text: ${colors.successText || '#34d399'};\r\n      --theme-warning: ${colors.warning || '#f59e0b'};\r\n      --theme-warning-bg: ${colors.warningBg || '#78350f'};\r\n      --theme-warning-text: ${colors.warningText || '#fbbf24'};\r\n      --theme-error: ${colors.error || '#ef4444'};\r\n      --theme-error-bg: ${colors.errorBg || '#7f1d1d'};\r\n      --theme-error-text: ${colors.errorText || '#fca5a5'};\r\n      --theme-info: ${colors.info || '#3b82f6'};\r\n      --theme-info-bg: ${colors.infoBg || '#1e3a8a'};\r\n      --theme-info-text: ${colors.infoText || '#93c5fd'};\r\n      \r\n      /* Service Colors */\r\n      --theme-steam: ${colors.steamColor || '#3b82f6'};\r\n      --theme-epic: ${colors.epicColor || '#8b5cf6'};\r\n      --theme-origin: ${colors.originColor || '#10b981'};\r\n      --theme-blizzard: ${colors.blizzardColor || '#ef4444'};\r\n      --theme-wsus: ${colors.wsusColor || '#06b6d4'};\r\n      --theme-riot: ${colors.riotColor || '#f59e0b'};\r\n      \r\n      /* Component Colors */\r\n      --theme-card-bg: ${colors.cardBg || colors.bgSecondary || '#1f2937'};\r\n      --theme-card-border: ${colors.cardBorder || colors.borderPrimary || '#374151'};\r\n      --theme-button-bg: ${colors.buttonBg || colors.primaryColor || '#3b82f6'};\r\n      --theme-button-hover: ${colors.buttonHover || '#2563eb'};\r\n      --theme-button-text: ${colors.buttonText || '#ffffff'};\r\n      --theme-input-bg: ${colors.inputBg || colors.bgTertiary || '#374151'};\r\n      --theme-input-border: ${colors.inputBorder || colors.borderSecondary || '#4b5563'};\r\n      --theme-input-focus: ${colors.inputFocus || colors.primaryColor || '#3b82f6'};\r\n      --theme-badge-bg: ${colors.badgeBg || colors.primaryColor || '#3b82f6'};\r\n      --theme-badge-text: ${colors.badgeText || '#ffffff'};\r\n      --theme-progress-bar: ${colors.progressBar || colors.primaryColor || '#3b82f6'};\r\n      --theme-progress-bg: ${colors.progressBg || colors.bgTertiary || '#374151'};\r\n      \r\n      /* Hit Rate Colors - FIXED WITH PRETTIER COLORS */\r\n      --theme-hit-rate-high-bg: ${colors.hitRateHighBg || '#064e3b'};\r\n      --theme-hit-rate-high-text: ${colors.hitRateHighText || '#34d399'};\r\n      --theme-hit-rate-medium-bg: ${colors.hitRateMediumBg || '#1e3a8a'};\r\n      --theme-hit-rate-medium-text: ${colors.hitRateMediumText || '#93c5fd'};\r\n      --theme-hit-rate-low-bg: ${colors.hitRateLowBg || '#44403c'};\r\n      --theme-hit-rate-low-text: ${colors.hitRateLowText || '#fbbf24'};\r\n      --theme-hit-rate-warning-bg: ${colors.hitRateWarningBg || '#44403c'};\r\n      --theme-hit-rate-warning-text: ${colors.hitRateWarningText || '#fcd34d'};\r\n      \r\n      /* Action Button Colors */\r\n      --theme-action-reset-bg: ${colors.actionResetBg || '#f59e0b'};\r\n      --theme-action-reset-hover: ${colors.actionResetHover || '#d97706'};\r\n      --theme-action-process-bg: ${colors.actionProcessBg || '#10b981'};\r\n      --theme-action-process-hover: ${colors.actionProcessHover || '#059669'};\r\n      --theme-action-delete-bg: ${colors.actionDeleteBg || '#ef4444'};\r\n      --theme-action-delete-hover: ${colors.actionDeleteHover || '#dc2626'};\r\n      \r\n      /* Icon Colors */\r\n      --theme-icon-blue: ${colors.iconBgBlue || '#3b82f6'};\r\n      --theme-icon-green: ${colors.iconBgGreen || '#10b981'};\r\n      --theme-icon-emerald: ${colors.iconBgEmerald || '#10b981'};\r\n      --theme-icon-purple: ${colors.iconBgPurple || '#8b5cf6'};\r\n      --theme-icon-indigo: ${colors.iconBgIndigo || '#6366f1'};\r\n      --theme-icon-orange: ${colors.iconBgOrange || '#f97316'};\r\n      --theme-icon-yellow: ${colors.iconBgYellow || '#eab308'};\r\n      --theme-icon-cyan: ${colors.iconBgCyan || '#06b6d4'};\r\n      --theme-icon-red: ${colors.iconBgRed || '#ef4444'};\r\n      \r\n      /* Chart Colors */\r\n      --theme-chart-1: ${colors.chartColor1 || '#3b82f6'};\r\n      --theme-chart-2: ${colors.chartColor2 || '#10b981'};\r\n      --theme-chart-3: ${colors.chartColor3 || '#f59e0b'};\r\n      --theme-chart-4: ${colors.chartColor4 || '#ef4444'};\r\n      --theme-chart-5: ${colors.chartColor5 || '#8b5cf6'};\r\n      --theme-chart-6: ${colors.chartColor6 || '#06b6d4'};\r\n      --theme-chart-7: ${colors.chartColor7 || '#f97316'};\r\n      --theme-chart-8: ${colors.chartColor8 || '#ec4899'};\r\n      --theme-chart-border: ${colors.chartBorderColor || '#1f2937'};\r\n      --theme-chart-grid: ${colors.chartGridColor || '#374151'};\r\n      --theme-chart-text: ${colors.chartTextColor || '#9ca3af'};\r\n      --theme-chart-cache-hit: ${colors.chartCacheHitColor || '#10b981'};\r\n      --theme-chart-cache-miss: ${colors.chartCacheMissColor || '#f59e0b'};\r\n      \r\n      /* Scrollbar Colors */\r\n      --theme-scrollbar-track: ${colors.scrollbarTrack || colors.bgTertiary || '#374151'};\r\n      --theme-scrollbar-thumb: ${colors.scrollbarThumb || colors.textMuted || '#6B7280'};\r\n      --theme-scrollbar-hover: ${colors.scrollbarHover || colors.textSecondary || '#9CA3AF'};\r\n\r\n      /* Access Indicator Colors */\r\n      --theme-public-access-bg: ${colors.publicAccessBg || 'rgba(16, 185, 129, 0.2)'};\r\n      --theme-public-access-text: ${colors.publicAccessText || '#34d399'};\r\n      --theme-public-access-border: ${colors.publicAccessBorder || 'rgba(16, 185, 129, 0.3)'};\r\n      --theme-secured-access-bg: ${colors.securedAccessBg || 'rgba(245, 158, 11, 0.2)'};\r\n      --theme-secured-access-text: ${colors.securedAccessText || '#fbbf24'};\r\n      --theme-secured-access-border: ${colors.securedAccessBorder || 'rgba(245, 158, 11, 0.3)'};\r\n    }\r\n\r\n    /* Global Transitions */\r\n    body * {\r\n      transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;\r\n    }\r\n\r\n    /* Global Body Style */\r\n    body {\r\n      background-color: var(--theme-bg-primary) !important;\r\n      color: var(--theme-text-primary) !important;\r\n    }\r\n\r\n    /* Custom CSS from theme */\r\n    ${theme.css?.content || ''}\r\n  `;\r\n\r\n    // Create and inject the style element\r\n    this.styleElement = document.createElement('style');\r\n    this.styleElement.id = 'lancache-theme';\r\n    this.styleElement.textContent = themeStyles;\r\n    document.head.appendChild(this.styleElement);\r\n\r\n    // Set data attributes\r\n    const root = document.documentElement;\r\n    root.setAttribute('data-theme', theme.meta.isDark ? 'dark' : 'light');\r\n    root.setAttribute('data-theme-id', theme.meta.id);\r\n    this.currentTheme = theme;\r\n    \r\n    // Save the theme ID and CSS for instant loading on next page load\r\n    localStorage.setItem('lancache_selected_theme', theme.meta.id);\r\n    localStorage.setItem('lancache_theme_css', themeStyles);\r\n    localStorage.setItem('lancache_theme_dark', theme.meta.isDark ? 'true' : 'false');\r\n\r\n    // Force re-render\r\n    window.dispatchEvent(new Event('themechange'));\r\n  }\r\n\r\n  async loadSavedTheme(): Promise<void> {\r\n    // Check if we have a preloaded theme from the HTML\r\n    const preloadStyle = document.getElementById('lancache-theme-preload');\r\n    const savedThemeId = localStorage.getItem('lancache_selected_theme');\r\n    \r\n    if (preloadStyle && savedThemeId) {\r\n      // We have a preloaded theme, load the fresh version from server\r\n      const theme = await this.getTheme(savedThemeId);\r\n      if (theme) {\r\n        // Apply the fresh theme (this will remove the preload and apply the real theme)\r\n        this.applyTheme(theme);\r\n        this.currentTheme = theme;\r\n        return;\r\n      }\r\n      // If saved theme not found on server, clear everything\r\n      localStorage.removeItem('lancache_selected_theme');\r\n      localStorage.removeItem('lancache_theme_css');\r\n      localStorage.removeItem('lancache_theme_dark');\r\n    }\r\n    \r\n    // No preload or theme not found, apply defaults\r\n    this.applyDefaultVariables();\r\n    \r\n    // Check if user has a saved theme preference without preload\r\n    if (savedThemeId) {\r\n      const theme = await this.getTheme(savedThemeId);\r\n      if (theme) {\r\n        this.applyTheme(theme);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Default to dark theme if no saved preference or theme not found\r\n    const darkDefault = await this.getTheme('dark-default');\r\n    if (darkDefault) {\r\n      this.applyTheme(darkDefault);\r\n    }\r\n  }\r\n\r\n  getCurrentThemeId(): string {\r\n    return this.currentTheme?.meta.id || 'dark-default';\r\n  }\r\n\r\n  getCurrentTheme(): Theme | null {\r\n    return this.currentTheme;\r\n  }\r\n\r\n  isThemeApplied(): boolean {\r\n    return this.currentTheme !== null;\r\n  }\r\n\r\n  exportTheme(theme: Theme): string {\r\n    console.log('Exporting theme to TOML:', theme);\r\n    let toml = '';\r\n\r\n    toml += '[meta]\\n';\r\n    toml += `name = \"${theme.meta.name}\"\\n`;\r\n    toml += `id = \"${theme.meta.id}\"\\n`;\r\n    if (theme.meta.description) toml += `description = \"${theme.meta.description}\"\\n`;\r\n    if (theme.meta.author) toml += `author = \"${theme.meta.author}\"\\n`;\r\n    if (theme.meta.version) toml += `version = \"${theme.meta.version}\"\\n`;\r\n    if (theme.meta.isDark !== undefined) toml += `isDark = ${theme.meta.isDark}\\n`;\r\n    toml += '\\n';\r\n\r\n    toml += '[colors]\\n';\r\n    if (theme.colors) {\r\n      console.log('Exporting colors:', theme.colors);\r\n      Object.entries(theme.colors).forEach(([key, value]) => {\r\n        toml += `${key} = \"${value}\"\\n`;\r\n      });\r\n    }\r\n    toml += '\\n';\r\n\r\n    if (theme.custom && Object.keys(theme.custom).length > 0) {\r\n      toml += '[custom]\\n';\r\n      Object.entries(theme.custom).forEach(([key, value]) => {\r\n        toml += `\"${key}\" = \"${value}\"\\n`;\r\n      });\r\n      toml += '\\n';\r\n    }\r\n\r\n    if (theme.css?.content) {\r\n      toml += '[css]\\n';\r\n      toml += `content = \"\"\"\\n${theme.css.content}\\n\"\"\"\\n`;\r\n    }\r\n\r\n    return toml;\r\n  }\r\n}\r\n\r\nexport default new ThemeService();\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\nimport themeService from './services/theme.service';\r\n\r\n// Load saved theme ONLY if user has explicitly applied one\r\n// Otherwise use default Tailwind dark theme\r\nthemeService.loadSavedTheme();\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"file":"assets/index-DmsffjsH.js"}