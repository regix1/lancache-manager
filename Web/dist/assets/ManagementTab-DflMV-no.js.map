{"version":3,"file":"ManagementTab-DflMV-no.js","sources":["../../src/utils/silentFetch.ts","../../src/services/operationState.service.ts","../../src/hooks/useBackendOperation.ts","../../src/components/ui/Button.tsx","../../src/components/ui/Modal.tsx","../../src/components/management/AuthenticationManager.tsx","../../src/components/management/CacheManager.tsx","../../src/components/management/LogProcessingManager.tsx","../../src/components/management/ThemeManager.tsx","../../src/components/management/AlertsManager.tsx","../../src/components/management/DataExportManager.tsx","../../src/components/management/ManagementTab.tsx"],"sourcesContent":["// utils/silentFetch.ts\r\n\r\ninterface FetchResult<T = any> {\r\n  ok: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Fetch data silently without throwing errors\r\n * Used for checking operation states without interrupting user flow\r\n */\r\nexport async function fetchStateOrNull<T = any>(url: string): Promise<FetchResult<T>> {\r\n  try {\r\n    const response = await fetch(url, {\r\n      signal: AbortSignal.timeout(5000)\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return { ok: true, data };\r\n    }\r\n\r\n    return { ok: false, error: `HTTP ${response.status}` };\r\n  } catch (error: any) {\r\n    // Silently handle errors - don't log to console to avoid noise\r\n    return { ok: false, error: error.message };\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a resource exists without throwing errors\r\n */\r\nexport async function checkResourceExists(url: string): Promise<boolean> {\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'HEAD',\r\n      signal: AbortSignal.timeout(3000)\r\n    });\r\n    return response.ok;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch with retry logic for resilient API calls\r\n */\r\nexport async function fetchWithRetry<T = any>(\r\n  url: string,\r\n  options: RequestInit = {},\r\n  maxRetries = 3,\r\n  retryDelay = 1000\r\n): Promise<T> {\r\n  let lastError: Error | null = null;\r\n\r\n  for (let i = 0; i < maxRetries; i++) {\r\n    try {\r\n      const response = await fetch(url, {\r\n        ...options,\r\n        signal: options.signal || AbortSignal.timeout(10000)\r\n      });\r\n\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n\r\n      // Don't retry on client errors (4xx)\r\n      if (response.status >= 400 && response.status < 500) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      lastError = new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n    } catch (error: any) {\r\n      lastError = error;\r\n\r\n      // Don't retry on abort\r\n      if (error.name === 'AbortError') {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    // Wait before retrying (except on last attempt)\r\n    if (i < maxRetries - 1) {\r\n      await new Promise((resolve) => setTimeout(resolve, retryDelay * (i + 1)));\r\n    }\r\n  }\r\n\r\n  throw lastError || new Error('Failed to fetch after retries');\r\n}\r\n","import { fetchStateOrNull } from '../utils/silentFetch';\r\nimport authService from './auth.service';\r\n\r\ninterface OperationState {\r\n  key: string;\r\n  type: string;\r\n  data: any;\r\n  expirationMinutes?: number;\r\n  createdAt?: string;\r\n  expiresAt?: string;\r\n}\r\n\r\ninterface StateUpdateResponse {\r\n  success: boolean;\r\n  state?: OperationState;\r\n}\r\n\r\nconst getApiUrl = (): string => {\r\n  if (typeof import.meta !== 'undefined' && import.meta.env?.VITE_API_URL) {\r\n    return import.meta.env.VITE_API_URL;\r\n  }\r\n  return '';\r\n};\r\n\r\nconst API_URL = getApiUrl();\r\n\r\nclass OperationStateService {\r\n  async getState(key: string): Promise<OperationState | null> {\r\n    const result = await fetchStateOrNull(`${API_URL}/api/operationstate/${key}`);\r\n    return result.ok ? result.data : null;\r\n  }\r\n\r\n  async saveState(\r\n    key: string,\r\n    type: string,\r\n    data: any,\r\n    expirationMinutes = 30\r\n  ): Promise<OperationState> {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/operationstate`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...authService.getAuthHeaders()\r\n        },\r\n        body: JSON.stringify({\r\n          key,\r\n          type,\r\n          data,\r\n          expirationMinutes\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.text();\r\n        throw new Error(`Failed to save state: ${error}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error: any) {\r\n      console.error('Error saving state:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateState(key: string, updates: any): Promise<StateUpdateResponse | null> {\r\n    try {\r\n      const url = `${API_URL}/api/operationstate/${encodeURIComponent(key)}`;\r\n      console.log('Updating state at:', url);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...authService.getAuthHeaders()\r\n        },\r\n        body: JSON.stringify({\r\n          updates: updates || {}\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.text();\r\n        console.error('Update state response:', response.status, error);\r\n        throw new Error(`Failed to update state: ${response.status} - ${error}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error: any) {\r\n      console.error('Error updating state:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async removeState(key: string): Promise<{ success: boolean; message?: string }> {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/operationstate/${encodeURIComponent(key)}`, {\r\n        method: 'DELETE',\r\n        headers: authService.getAuthHeaders()\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to remove state');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error: any) {\r\n      console.error('Error removing state:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAllStates(type: string | null = null): Promise<OperationState[]> {\r\n    try {\r\n      const url = type\r\n        ? `${API_URL}/api/operationstate?type=${type}`\r\n        : `${API_URL}/api/operationstate`;\r\n\r\n      const response = await fetch(url, {\r\n        headers: authService.getAuthHeaders()\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to get states');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error: any) {\r\n      console.error('Error getting all states:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async migrateFromLocalStorage(): Promise<number> {\r\n    const keys = ['activeCacheClearOperation', 'activeLogProcessing', 'activeServiceRemoval'];\r\n    let migrated = 0;\r\n\r\n    for (const key of keys) {\r\n      try {\r\n        const localData = localStorage.getItem(key);\r\n        if (localData) {\r\n          const parsed = JSON.parse(localData);\r\n\r\n          let type = 'general';\r\n          if (key.includes('CacheClear')) type = 'cacheClearing';\r\n          else if (key.includes('LogProcessing')) type = 'logProcessing';\r\n          else if (key.includes('ServiceRemoval')) type = 'serviceRemoval';\r\n\r\n          await this.saveState(key, type, parsed, 120);\r\n          localStorage.removeItem(key);\r\n          migrated++;\r\n          console.log(`Migrated ${key} from localStorage to backend`);\r\n        }\r\n      } catch (err) {\r\n        console.error(`Failed to migrate ${key}:`, err);\r\n      }\r\n    }\r\n\r\n    if (migrated > 0) {\r\n      console.log(`Successfully migrated ${migrated} operations to backend storage`);\r\n    }\r\n\r\n    return migrated;\r\n  }\r\n}\r\n\r\nexport default new OperationStateService();\r\n","import { useState, useCallback, useEffect } from 'react';\r\nimport operationStateService from '../services/operationState.service';\r\n\r\ninterface OperationState {\r\n  key: string;\r\n  type: string;\r\n  data: any;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface UseBackendOperationReturn {\r\n  operation: OperationState | null;\r\n  save: (data: any) => Promise<OperationState>;\r\n  load: () => Promise<OperationState | null>;\r\n  clear: () => Promise<void>;\r\n  update: (updates: any) => Promise<void>;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport const useBackendOperation = (\r\n  key: string,\r\n  type = 'general',\r\n  expirationMinutes = 30\r\n): UseBackendOperationReturn => {\r\n  const [operation, setOperation] = useState<OperationState | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const save = useCallback(\r\n    async (data: any): Promise<OperationState> => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        await operationStateService.saveState(key, type, data, expirationMinutes);\r\n\r\n        const newState: OperationState = {\r\n          key,\r\n          type,\r\n          data,\r\n          createdAt: new Date().toISOString(),\r\n          updatedAt: new Date().toISOString()\r\n        };\r\n        setOperation(newState);\r\n\r\n        return newState;\r\n      } catch (err: any) {\r\n        console.error(`Failed to save ${key}:`, err);\r\n        setError(err.message);\r\n        throw err;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [key, type, expirationMinutes]\r\n  );\r\n\r\n  const load = useCallback(async (): Promise<OperationState | null> => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const state = await operationStateService.getState(key);\r\n\r\n      if (state) {\r\n        // Type the state as any to access properties\r\n        const stateData = state as any;\r\n\r\n        // Ensure the state has all required properties\r\n        const operationState: OperationState = {\r\n          key: stateData.key || key,\r\n          type: stateData.type || type,\r\n          data: stateData.data || {},\r\n          createdAt: stateData.createdAt || new Date().toISOString(),\r\n          updatedAt: stateData.updatedAt || stateData.createdAt || new Date().toISOString()\r\n        };\r\n        setOperation(operationState);\r\n        return operationState;\r\n      }\r\n\r\n      return null;\r\n    } catch (err: any) {\r\n      console.error(`Failed to load ${key}:`, err);\r\n      setError(err.message);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [key, type]);\r\n\r\n  const clear = useCallback(async (): Promise<void> => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      await operationStateService.removeState(key);\r\n      setOperation(null);\r\n    } catch (err: any) {\r\n      console.error(`Failed to clear ${key}:`, err);\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [key]);\r\n\r\n  const update = useCallback(\r\n    async (updates: any): Promise<void> => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        await operationStateService.updateState(key, updates);\r\n\r\n        setOperation((prev) => {\r\n          if (!prev) return null;\r\n\r\n          return {\r\n            ...prev,\r\n            data: { ...prev.data, ...updates },\r\n            updatedAt: new Date().toISOString()\r\n          };\r\n        });\r\n      } catch (err: any) {\r\n        console.error(`Failed to update ${key}:`, err);\r\n        setError(err.message);\r\n        throw err;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [key]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (key) {\r\n      load();\r\n    }\r\n  }, [key]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return {\r\n    operation,\r\n    save,\r\n    load,\r\n    clear,\r\n    update,\r\n    loading,\r\n    error\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'filled' | 'subtle' | 'outline' | 'default';\r\n  color?: 'blue' | 'green' | 'red' | 'yellow' | 'purple' | 'gray' | 'orange';\r\n  size?: 'xs' | 'sm' | 'md' | 'lg';\r\n  loading?: boolean;\r\n  leftSection?: React.ReactNode;\r\n  rightSection?: React.ReactNode;\r\n  fullWidth?: boolean;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  variant = 'default',\r\n  color = 'blue',\r\n  size = 'md',\r\n  loading = false,\r\n  leftSection,\r\n  rightSection,\r\n  fullWidth = false,\r\n  className = '',\r\n  disabled,\r\n  ...props\r\n}) => {\r\n  const getVariantClasses = () => {\r\n    if (variant === 'filled') {\r\n      const colors = {\r\n        blue: 'themed-button-primary',\r\n        green: 'action-process',\r\n        red: 'action-delete',\r\n        yellow: 'action-reset',\r\n        purple: 'themed-button-primary',\r\n        gray: 'bg-themed-hover hover:bg-themed-tertiary text-themed-primary',\r\n        orange: 'action-reset'\r\n      };\r\n      return colors[color];\r\n    }\r\n    if (variant === 'subtle') {\r\n      return 'bg-transparent hover:bg-themed-hover text-themed-secondary';\r\n    }\r\n    if (variant === 'outline') {\r\n      return 'border border-themed-secondary hover:bg-themed-hover text-themed-primary';\r\n    }\r\n    return 'bg-themed-tertiary hover:bg-themed-hover text-themed-primary';\r\n  };\r\n\r\n  const sizes = {\r\n    xs: 'px-2 py-1 text-xs',\r\n    sm: 'px-3 py-1.5 text-sm',\r\n    md: 'px-4 py-2',\r\n    lg: 'px-6 py-3 text-lg'\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`\r\n        ${getVariantClasses()}\r\n        ${sizes[size]}\r\n        ${fullWidth ? 'w-full' : ''}\r\n        rounded-lg font-medium\r\n        smooth-transition\r\n        disabled:opacity-50 disabled:cursor-not-allowed\r\n        flex items-center justify-center gap-2\r\n        button-press\r\n        ${className}\r\n      `}\r\n      disabled={disabled || loading}\r\n      {...props}\r\n    >\r\n      {loading && <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-current\" />}\r\n      {leftSection}\r\n      {children}\r\n      {rightSection}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface ModalProps {\r\n  opened: boolean;\r\n  onClose: () => void;\r\n  title?: React.ReactNode;\r\n  children: React.ReactNode;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n}\r\n\r\nexport const Modal: React.FC<ModalProps> = ({ opened, onClose, title, children, size = 'md' }) => {\r\n  const sizes = {\r\n    sm: 'max-w-md',\r\n    md: 'max-w-lg',\r\n    lg: 'max-w-2xl',\r\n    xl: 'max-w-4xl'\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (opened) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [opened]);\r\n\r\n  if (!opened) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div\r\n        className={`themed-card rounded-lg ${sizes[size]} w-full mx-4 max-h-[90vh] overflow-y-auto custom-scrollbar`}\r\n      >\r\n        {title && (\r\n          <div className=\"flex items-center justify-between p-6 border-b border-themed-secondary\">\r\n            <div className=\"text-lg font-semibold text-themed-primary\">{title}</div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-1 hover:bg-themed-hover rounded-lg smooth-transition\"\r\n            >\r\n              <X className=\"w-5 h-5 text-themed-muted\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"p-6\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Key, Lock, Unlock, AlertCircle } from 'lucide-react';\r\nimport authService from '../../services/auth.service';\r\nimport { Button } from '../ui/Button';\r\nimport { Alert } from '../ui/Alert';\r\nimport { Modal } from '../ui/Modal';\r\n\r\ninterface AuthenticationManagerProps {\r\n  onAuthChange?: (isAuthenticated: boolean) => void;\r\n  onError?: (message: string) => void;\r\n  onSuccess?: (message: string) => void;\r\n}\r\n\r\nconst AuthenticationManager: React.FC<AuthenticationManagerProps> = ({\r\n  onAuthChange,\r\n  onError,\r\n  onSuccess\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [authChecking, setAuthChecking] = useState(true);\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n  const [apiKey, setApiKey] = useState('');\r\n  const [authError, setAuthError] = useState('');\r\n  const [authLoading, setAuthLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    setAuthChecking(true);\r\n    try {\r\n      const result = await authService.checkAuth();\r\n      setIsAuthenticated(result.isAuthenticated);\r\n      onAuthChange?.(result.isAuthenticated);\r\n\r\n      if (!result.isAuthenticated && authService.isRegistered()) {\r\n        authService.clearAuth();\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      setIsAuthenticated(false);\r\n      onAuthChange?.(false);\r\n    } finally {\r\n      setAuthChecking(false);\r\n    }\r\n  };\r\n\r\n  const handleAuthenticate = async () => {\r\n    if (!apiKey.trim()) {\r\n      setAuthError('Please enter an API key');\r\n      return;\r\n    }\r\n\r\n    setAuthLoading(true);\r\n    setAuthError('');\r\n\r\n    try {\r\n      const result = await authService.register(apiKey);\r\n\r\n      if (result.success) {\r\n        setIsAuthenticated(true);\r\n        onAuthChange?.(true);\r\n        setShowAuthModal(false);\r\n        setApiKey('');\r\n        onSuccess?.('Authentication successful! You can now use management features.');\r\n      } else {\r\n        setAuthError(result.message || 'Authentication failed');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Authentication error:', error);\r\n      setAuthError(error.message || 'Authentication failed');\r\n    } finally {\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegenerateKey = async () => {\r\n    const message =\r\n      'WARNING: This will:\\n\\n' +\r\n      '1. Generate a NEW API key on the server\\n' +\r\n      '2. Revoke ALL existing device registrations\\n' +\r\n      '3. Require ALL users to re-authenticate\\n' +\r\n      '4. You must check the container logs for the new key\\n\\n' +\r\n      'This cannot be undone. Continue?';\r\n\r\n    if (!window.confirm(message)) return;\r\n\r\n    setAuthLoading(true);\r\n\r\n    try {\r\n      const result = await authService.regenerateApiKey();\r\n\r\n      if (result.success) {\r\n        setIsAuthenticated(false);\r\n        onAuthChange?.(false);\r\n        setShowAuthModal(false);\r\n\r\n        onError?.('API KEY REGENERATED - Check container logs for new key!');\r\n        onSuccess?.(result.message);\r\n\r\n        setTimeout(() => {\r\n          setShowAuthModal(true);\r\n        }, 3000);\r\n      } else {\r\n        onError?.(result.message || 'Failed to regenerate API key');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error regenerating key:', error);\r\n      onError?.('Failed to regenerate API key: ' + error.message);\r\n    } finally {\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  if (authChecking) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        color={isAuthenticated ? 'green' : 'yellow'}\r\n        icon={isAuthenticated ? <Unlock className=\"w-5 h-5\" /> : <Lock className=\"w-5 h-5\" />}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <span className=\"font-medium\">\r\n              {isAuthenticated ? 'Authenticated' : 'Not Authenticated'}\r\n            </span>\r\n            <p className=\"text-xs mt-1 opacity-75\">\r\n              {isAuthenticated\r\n                ? 'Management features enabled'\r\n                : 'Management features require API key'}\r\n            </p>\r\n          </div>\r\n\r\n          {isAuthenticated ? (\r\n            <Button\r\n              variant=\"filled\"\r\n              color=\"red\"\r\n              size=\"sm\"\r\n              leftSection={<AlertCircle className=\"w-3 h-3\" />}\r\n              onClick={handleRegenerateKey}\r\n              loading={authLoading}\r\n            >\r\n              Regenerate Key\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant=\"filled\"\r\n              color=\"yellow\"\r\n              leftSection={<Key className=\"w-4 h-4\" />}\r\n              onClick={() => setShowAuthModal(true)}\r\n            >\r\n              Authenticate\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Alert>\r\n\r\n      <Modal\r\n        opened={showAuthModal}\r\n        onClose={() => {\r\n          setShowAuthModal(false);\r\n          setApiKey('');\r\n          setAuthError('');\r\n        }}\r\n        title={\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Key className=\"w-6 h-6 text-themed-warning\" />\r\n            <span>Authentication Required</span>\r\n          </div>\r\n        }\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-themed-secondary\">\r\n            Management operations require authentication. Please enter your API key to continue.\r\n          </p>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-themed-secondary mb-2\">API Key</label>\r\n            <input\r\n              type=\"password\"\r\n              value={apiKey}\r\n              onChange={(e) => setApiKey(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && handleAuthenticate()}\r\n              placeholder=\"lm_xxxxxxxxxxxxxxxxxxxxx\"\r\n              className=\"w-full px-3 py-2 themed-input text-themed-primary placeholder-themed-muted focus:outline-none\"\r\n              disabled={authLoading}\r\n            />\r\n          </div>\r\n\r\n          {authError && <Alert color=\"red\">{authError}</Alert>}\r\n\r\n          <Alert color=\"blue\">\r\n            <div>\r\n              <p className=\"font-medium mb-2\">To find your API key:</p>\r\n              <ol className=\"list-decimal list-inside text-xs space-y-1\">\r\n                <li>SSH into your server</li>\r\n                <li>\r\n                  Check the file:{' '}\r\n                  <code className=\"bg-themed-tertiary px-1 rounded\">/data/api_key.txt</code>\r\n                </li>\r\n                <li>Or check the API container logs on startup</li>\r\n              </ol>\r\n            </div>\r\n          </Alert>\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4 border-t border-themed-secondary\">\r\n            <Button\r\n              variant=\"default\"\r\n              onClick={() => {\r\n                setShowAuthModal(false);\r\n                setApiKey('');\r\n                setAuthError('');\r\n              }}\r\n              disabled={authLoading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"filled\"\r\n              color=\"blue\"\r\n              leftSection={<Lock className=\"w-4 h-4\" />}\r\n              onClick={handleAuthenticate}\r\n              loading={authLoading}\r\n              disabled={!apiKey.trim()}\r\n            >\r\n              Authenticate\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthenticationManager;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { HardDrive, Trash2, Loader, CheckCircle, AlertCircle, StopCircle } from 'lucide-react';\r\nimport ApiService from '@services/api.service';\r\nimport { useBackendOperation } from '@hooks/useBackendOperation';\r\nimport { formatBytes } from '@utils/formatters';\r\nimport { Alert } from '@components/ui/Alert';\r\nimport { Button } from '@components/ui/Button';\r\nimport { Card } from '@components/ui/Card';\r\nimport { Modal } from '@components/ui/Modal';\r\nimport type { CacheClearStatus, Config } from '../../types';\r\n\r\ninterface CacheManagerProps {\r\n  isAuthenticated: boolean;\r\n  mockMode: boolean;\r\n  onError?: (message: string) => void;\r\n  onSuccess?: (message: string) => void;\r\n  onBackgroundOperation?: (operation: any) => void;\r\n}\r\n\r\nconst CacheManager: React.FC<CacheManagerProps> = ({\r\n  isAuthenticated,\r\n  mockMode,\r\n  onError,\r\n  onSuccess,\r\n  onBackgroundOperation\r\n}) => {\r\n  const [cacheClearProgress, setCacheClearProgress] = useState<CacheClearStatus | null>(null);\r\n  const [showCacheClearModal, setShowCacheClearModal] = useState(false);\r\n  const [actionLoading, setActionLoading] = useState(false);\r\n  const [config, setConfig] = useState<Config>({\r\n    cachePath: '/cache',\r\n    logPath: '/logs/access.log',\r\n    services: []\r\n  });\r\n\r\n  const cacheOp = useBackendOperation('activeCacheClearOperation', 'cacheClearing', 30);\r\n\r\n  // Report cache clearing status to parent\r\n  useEffect(() => {\r\n    const isCacheClearingInBackground =\r\n      (cacheOp.operation as any)?.data &&\r\n      !showCacheClearModal &&\r\n      cacheClearProgress &&\r\n      ['Running', 'Preparing'].includes(cacheClearProgress.status);\r\n\r\n    if (isCacheClearingInBackground && onBackgroundOperation) {\r\n      onBackgroundOperation({\r\n        bytesDeleted: cacheClearProgress.bytesDeleted,\r\n        progress: cacheClearProgress.percentComplete || cacheClearProgress.progress || 0,\r\n        showModal: () => setShowCacheClearModal(true)\r\n      });\r\n    } else if (onBackgroundOperation) {\r\n      onBackgroundOperation(null);\r\n    }\r\n  }, [cacheOp.operation, showCacheClearModal, cacheClearProgress, onBackgroundOperation]);\r\n\r\n  useEffect(() => {\r\n    loadConfig();\r\n    restoreCacheOperation();\r\n  }, []);\r\n\r\n  const loadConfig = async () => {\r\n    try {\r\n      const configData = await ApiService.getConfig();\r\n      setConfig(configData);\r\n    } catch (err) {\r\n      console.error('Failed to load config:', err);\r\n    }\r\n  };\r\n\r\n  const restoreCacheOperation = async () => {\r\n    const cacheClear = await cacheOp.load();\r\n    if (cacheClear?.data?.operationId) {\r\n      try {\r\n        const status = await ApiService.getCacheClearStatus(cacheClear.data.operationId);\r\n        if (status && ['Running', 'Preparing'].includes(status.status)) {\r\n          setCacheClearProgress(status);\r\n          startCacheClearPolling(cacheClear.data.operationId);\r\n        } else {\r\n          await cacheOp.clear();\r\n        }\r\n      } catch (err) {\r\n        await cacheOp.clear();\r\n      }\r\n    }\r\n  };\r\n\r\n  const startCacheClearPolling = (operationId: string) => {\r\n    const pollInterval = setInterval(async () => {\r\n      try {\r\n        const status = await ApiService.getCacheClearStatus(operationId);\r\n        setCacheClearProgress(status);\r\n\r\n        if (['Running', 'Preparing'].includes(status.status)) {\r\n          await cacheOp.update({ lastProgress: status.percentComplete || status.progress || 0 });\r\n        } else {\r\n          handleCacheClearComplete(status);\r\n          clearInterval(pollInterval);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error polling cache clear status:', err);\r\n        clearInterval(pollInterval);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCacheClearComplete = async (progress: CacheClearStatus) => {\r\n    await cacheOp.clear();\r\n\r\n    if (progress.status === 'Completed') {\r\n      onSuccess?.(`Cache cleared successfully! ${formatBytes(progress.bytesDeleted || 0)} freed.`);\r\n      setTimeout(() => {\r\n        setShowCacheClearModal(false);\r\n        setCacheClearProgress(null);\r\n      }, 2000);\r\n    } else if (progress.status === 'Failed') {\r\n      onError?.(`Cache clearing failed: ${progress.error || progress.message || 'Unknown error'}`);\r\n      setTimeout(() => {\r\n        setShowCacheClearModal(false);\r\n        setCacheClearProgress(null);\r\n      }, 5000);\r\n    } else if (progress.status === 'Cancelled') {\r\n      onSuccess?.('Cache clearing cancelled');\r\n      setShowCacheClearModal(false);\r\n      setCacheClearProgress(null);\r\n    }\r\n  };\r\n\r\n  const handleClearAllCache = async () => {\r\n    if (!isAuthenticated) {\r\n      onError?.('Authentication required');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm('This will clear ALL cached game files. Continue?')) return;\r\n\r\n    setActionLoading(true);\r\n\r\n    try {\r\n      const result = await ApiService.clearAllCache();\r\n      if (result.operationId) {\r\n        await cacheOp.save({ operationId: result.operationId });\r\n        setCacheClearProgress({\r\n          operationId: result.operationId,\r\n          status: 'Preparing',\r\n          statusMessage: 'Starting cache clear...',\r\n          percentComplete: 0,\r\n          bytesDeleted: 0,\r\n          totalBytesToDelete: 0\r\n        });\r\n        setShowCacheClearModal(true);\r\n        startCacheClearPolling(result.operationId);\r\n      }\r\n    } catch (err: any) {\r\n      onError?.('Failed to start cache clearing: ' + err.message);\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelCacheClear = async () => {\r\n    const operation = cacheOp.operation as any;\r\n    if (!operation?.data?.operationId) return;\r\n\r\n    try {\r\n      setCacheClearProgress((prev) =>\r\n        prev\r\n          ? {\r\n              ...prev,\r\n              status: 'Cancelling',\r\n              statusMessage: 'Cancelling operation...'\r\n            }\r\n          : null\r\n      );\r\n\r\n      await ApiService.cancelCacheClear(operation.data.operationId);\r\n      await cacheOp.clear();\r\n\r\n      setTimeout(() => {\r\n        setShowCacheClearModal(false);\r\n        setCacheClearProgress(null);\r\n        onSuccess?.('Cache clearing operation cancelled');\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Failed to cancel cache clear:', err);\r\n      setShowCacheClearModal(false);\r\n      setCacheClearProgress(null);\r\n      await cacheOp.clear();\r\n    }\r\n  };\r\n\r\n  const isCacheClearingInBackground =\r\n    (cacheOp.operation as any)?.data &&\r\n    !showCacheClearModal &&\r\n    cacheClearProgress &&\r\n    ['Running', 'Preparing'].includes(cacheClearProgress.status);\r\n\r\n  const progressPercent = cacheClearProgress?.percentComplete || cacheClearProgress?.progress || 0;\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className=\"flex items-center space-x-2 mb-4\">\r\n          <HardDrive className=\"w-5 h-5 text-themed-primary\" />\r\n          <h3 className=\"text-lg font-semibold text-themed-primary\">Disk Cache Management</h3>\r\n        </div>\r\n        <p className=\"text-themed-muted text-sm mb-4\">\r\n          Manage cached game files in{' '}\r\n          <code className=\"bg-themed-tertiary px-2 py-1 rounded\">{config.cachePath}</code>\r\n        </p>\r\n        <Button\r\n          fullWidth\r\n          variant=\"filled\"\r\n          color=\"red\"\r\n          leftSection={<Trash2 className=\"w-4 h-4\" />}\r\n          onClick={handleClearAllCache}\r\n          disabled={\r\n            actionLoading ||\r\n            mockMode ||\r\n            isCacheClearingInBackground ||\r\n            cacheOp.loading ||\r\n            !isAuthenticated\r\n          }\r\n          loading={actionLoading || cacheOp.loading}\r\n        >\r\n          {isCacheClearingInBackground ? 'Cache Clearing in Progress...' : 'Clear All Cached Files'}\r\n        </Button>\r\n        <p className=\"text-xs text-themed-muted mt-2\">\r\n          ⚠️ This deletes ALL cached game files from disk\r\n        </p>\r\n      </Card>\r\n\r\n      <Modal\r\n        opened={showCacheClearModal && cacheClearProgress !== null}\r\n        onClose={() => {\r\n          if (!['Running', 'Preparing'].includes(cacheClearProgress?.status || '')) {\r\n            setShowCacheClearModal(false);\r\n            setCacheClearProgress(null);\r\n          }\r\n        }}\r\n        title=\"Clearing Cache\"\r\n        size=\"lg\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            {cacheClearProgress?.status === 'Completed' ? (\r\n              <CheckCircle className=\"w-5 h-5 cache-hit\" />\r\n            ) : cacheClearProgress?.status === 'Failed' ? (\r\n              <AlertCircle className=\"w-5 h-5 text-themed-error\" />\r\n            ) : (\r\n              <Loader className=\"w-5 h-5 text-themed-primary animate-spin\" />\r\n            )}\r\n            <div className=\"flex-1\">\r\n              <span className=\"text-themed-primary font-medium\">{cacheClearProgress?.status}</span>\r\n              {(cacheClearProgress?.statusMessage || cacheClearProgress?.message) && (\r\n                <p className=\"text-sm text-themed-muted\">\r\n                  {cacheClearProgress?.statusMessage || cacheClearProgress?.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {cacheClearProgress && ['Running', 'Preparing'].includes(cacheClearProgress.status) && (\r\n            <>\r\n              <div className=\"w-full progress-track rounded-full h-4 relative overflow-hidden\">\r\n                <div\r\n                  className=\"progress-bar-medium h-4 rounded-full smooth-transition\"\r\n                  style={{ width: `${Math.min(100, progressPercent)}%` }}\r\n                />\r\n                <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                  <span className=\"text-xs text-themed-primary font-medium\">\r\n                    {progressPercent.toFixed(0)}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {cacheClearProgress.bytesDeleted !== undefined &&\r\n                cacheClearProgress.totalBytesToDelete &&\r\n                cacheClearProgress.totalBytesToDelete > 0 && (\r\n                  <div className=\"text-sm text-themed-muted text-center\">\r\n                    <span className=\"cache-hit font-semibold\">\r\n                      {formatBytes(cacheClearProgress.bytesDeleted || 0)}\r\n                    </span>\r\n                    {' / '}\r\n                    <span className=\"text-themed-primary\">\r\n                      {formatBytes(cacheClearProgress.totalBytesToDelete)}\r\n                    </span>\r\n                    {' cleared'}\r\n                  </div>\r\n                )}\r\n            </>\r\n          )}\r\n\r\n          {cacheClearProgress?.error && <Alert color=\"red\">{cacheClearProgress.error}</Alert>}\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4 border-t border-themed-secondary\">\r\n            {cacheClearProgress && ['Running', 'Preparing'].includes(cacheClearProgress.status) ? (\r\n              <>\r\n                <Button\r\n                  variant=\"filled\"\r\n                  color=\"red\"\r\n                  leftSection={<StopCircle className=\"w-4 h-4\" />}\r\n                  onClick={handleCancelCacheClear}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button variant=\"default\" onClick={() => setShowCacheClearModal(false)}>\r\n                  Run in Background\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button\r\n                variant=\"default\"\r\n                onClick={() => {\r\n                  setShowCacheClearModal(false);\r\n                  setCacheClearProgress(null);\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {cacheOp.error && <Alert color=\"orange\">Backend storage error: {cacheOp.error}</Alert>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CacheManager;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { FileText, RefreshCw, PlayCircle } from 'lucide-react';\r\nimport ApiService from '@services/api.service';\r\nimport { useBackendOperation } from '@hooks/useBackendOperation';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { Alert } from '@components/ui/Alert';\r\nimport { Button } from '@components/ui/Button';\r\nimport { Card } from '@components/ui/Card';\r\nimport type { ProcessingStatus as ApiProcessingStatus } from '../../types';\r\n\r\ninterface LogProcessingManagerProps {\r\n  isAuthenticated: boolean;\r\n  mockMode: boolean;\r\n  onError?: (message: string) => void;\r\n  onSuccess?: (message: string) => void;\r\n  onDataRefresh?: () => void;\r\n  onBackgroundOperation?: (operation: any) => void;\r\n}\r\n\r\ninterface ProcessingUIStatus {\r\n  message: string;\r\n  detailMessage?: string;\r\n  progress: number;\r\n  estimatedTime?: string;\r\n  status: string;\r\n}\r\n\r\nconst LogProcessingManager: React.FC<LogProcessingManagerProps> = ({\r\n  isAuthenticated,\r\n  mockMode,\r\n  onError,\r\n  onSuccess,\r\n  onDataRefresh,\r\n  onBackgroundOperation\r\n}) => {\r\n  const [isProcessingLogs, setIsProcessingLogs] = useState(false);\r\n  const [processingStatus, setProcessingStatus] = useState<ProcessingUIStatus | null>(null);\r\n  const [actionLoading, setActionLoading] = useState(false);\r\n  const [signalRConnected, setSignalRConnected] = useState(false);\r\n\r\n  const logProcessingOp = useBackendOperation('activeLogProcessing', 'logProcessing', 120);\r\n  const signalRConnection = useRef<signalR.HubConnection | null>(null);\r\n  const pollingInterval = useRef<NodeJS.Timeout | null>(null);\r\n  const reconnectTimeout = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Report processing status to parent\r\n  useEffect(() => {\r\n    if (isProcessingLogs && processingStatus && onBackgroundOperation) {\r\n      onBackgroundOperation({\r\n        message: processingStatus.message,\r\n        detailMessage: processingStatus.detailMessage,\r\n        progress: processingStatus.progress,\r\n        estimatedTime: processingStatus.estimatedTime,\r\n        status: processingStatus.status,\r\n        onCancel: handleCancelProcessing\r\n      });\r\n    } else if (onBackgroundOperation) {\r\n      onBackgroundOperation(null);\r\n    }\r\n  }, [isProcessingLogs, processingStatus, onBackgroundOperation]);\r\n\r\n  useEffect(() => {\r\n    restoreLogProcessing();\r\n    setupSignalR();\r\n\r\n    return () => {\r\n      if (pollingInterval.current) {\r\n        clearInterval(pollingInterval.current);\r\n      }\r\n      if (reconnectTimeout.current) {\r\n        clearTimeout(reconnectTimeout.current);\r\n      }\r\n      if (signalRConnection.current) {\r\n        signalRConnection.current.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const restoreLogProcessing = async () => {\r\n    const logOp = await logProcessingOp.load();\r\n    if (logOp?.data) {\r\n      const status = await ApiService.getProcessingStatus().catch(() => null);\r\n      if (status?.isProcessing) {\r\n        setIsProcessingLogs(true);\r\n        setProcessingStatus({\r\n          message: `Processing: ${status.mbProcessed?.toFixed(1) || 0} MB of ${status.mbTotal?.toFixed(1) || 0} MB`,\r\n          detailMessage: status.processingRate\r\n            ? `Speed: ${status.processingRate.toFixed(1)} MB/s`\r\n            : '',\r\n          progress: status.percentComplete || status.progress || 0,\r\n          estimatedTime: status.estimatedTime,\r\n          status: status.status || 'processing'\r\n        });\r\n        startProcessingPolling();\r\n      } else {\r\n        await logProcessingOp.clear();\r\n      }\r\n    }\r\n  };\r\n\r\n  const setupSignalR = async () => {\r\n    try {\r\n      const connection = new signalR.HubConnectionBuilder()\r\n        .withUrl('/hubs/downloads')\r\n        .withAutomaticReconnect([0, 2000, 5000, 10000, 30000])\r\n        .build();\r\n\r\n      connection.on('ProcessingProgress', async (progress: any) => {\r\n        console.log('Processing progress received:', progress);\r\n\r\n        setProcessingStatus((prev) => {\r\n          if (prev?.status === 'complete') {\r\n            return prev;\r\n          }\r\n\r\n          return {\r\n            message: `Processing: ${progress.mbProcessed?.toFixed(1) || 0} MB of ${progress.mbTotal?.toFixed(1) || 0} MB`,\r\n            detailMessage: `${progress.entriesProcessed || 0} entries from ${progress.linesProcessed || 0} lines`,\r\n            progress: progress.percentComplete || progress.progress || 0,\r\n            status: 'processing'\r\n          };\r\n        });\r\n\r\n        setIsProcessingLogs(true);\r\n\r\n        await logProcessingOp.update({\r\n          lastProgress: progress.percentComplete || progress.progress || 0,\r\n          mbProcessed: progress.mbProcessed,\r\n          mbTotal: progress.mbTotal,\r\n          entriesProcessed: progress.entriesProcessed,\r\n          linesProcessed: progress.linesProcessed\r\n        });\r\n      });\r\n\r\n      connection.on('BulkProcessingComplete', async (result: any) => {\r\n        console.log('Bulk processing complete:', result);\r\n\r\n        if (pollingInterval.current) {\r\n          clearInterval(pollingInterval.current);\r\n        }\r\n\r\n        setProcessingStatus({\r\n          message: 'Processing Complete!',\r\n          detailMessage: `Successfully processed ${result.entriesProcessed?.toLocaleString()} entries from ${result.linesProcessed?.toLocaleString()} lines in ${result.elapsed?.toFixed(1)} minutes`,\r\n          progress: 100,\r\n          status: 'complete'\r\n        });\r\n\r\n        setIsProcessingLogs(true);\r\n        await logProcessingOp.clear();\r\n\r\n        setTimeout(async () => {\r\n          setIsProcessingLogs(false);\r\n          setProcessingStatus(null);\r\n          onDataRefresh?.();\r\n        }, 10000);\r\n      });\r\n\r\n      connection.onreconnecting((error) => {\r\n        console.log('SignalR reconnecting:', error);\r\n        setSignalRConnected(false);\r\n      });\r\n\r\n      connection.onreconnected((connectionId) => {\r\n        console.log('SignalR reconnected:', connectionId);\r\n        setSignalRConnected(true);\r\n      });\r\n\r\n      connection.onclose((error) => {\r\n        console.error('SignalR disconnected:', error);\r\n        setSignalRConnected(false);\r\n\r\n        if (isProcessingLogs) {\r\n          console.log('SignalR disconnected during processing, falling back to polling');\r\n          startProcessingPolling();\r\n        }\r\n\r\n        reconnectTimeout.current = setTimeout(() => {\r\n          setupSignalR();\r\n        }, 5000);\r\n      });\r\n\r\n      await connection.start();\r\n      signalRConnection.current = connection;\r\n      setSignalRConnected(true);\r\n      console.log('SignalR connected');\r\n    } catch (err) {\r\n      console.error('SignalR connection failed, falling back to polling:', err);\r\n      setSignalRConnected(false);\r\n\r\n      if (isProcessingLogs) {\r\n        startProcessingPolling();\r\n      }\r\n    }\r\n  };\r\n\r\n  const startProcessingPolling = () => {\r\n    if (pollingInterval.current) {\r\n      clearInterval(pollingInterval.current);\r\n    }\r\n\r\n    const checkStatus = async () => {\r\n      try {\r\n        const currentStatus = processingStatus;\r\n        if (currentStatus?.status === 'complete') {\r\n          return;\r\n        }\r\n\r\n        const status: ApiProcessingStatus = await ApiService.getProcessingStatus();\r\n        if (status?.isProcessing) {\r\n          setIsProcessingLogs(true);\r\n          setProcessingStatus({\r\n            message: `Processing: ${status.mbProcessed?.toFixed(1) || 0} MB of ${status.mbTotal?.toFixed(1) || 0} MB`,\r\n            detailMessage: status.processingRate\r\n              ? `Speed: ${status.processingRate.toFixed(1)} MB/s`\r\n              : '',\r\n            progress: status.percentComplete || status.progress || 0,\r\n            estimatedTime: status.estimatedTime,\r\n            status: status.status || 'processing'\r\n          });\r\n          await logProcessingOp.update({\r\n            lastProgress: status.percentComplete || status.progress || 0,\r\n            mbProcessed: status.mbProcessed,\r\n            mbTotal: status.mbTotal\r\n          });\r\n        } else {\r\n          const finalProgress = status?.percentComplete || status?.progress || 0;\r\n          if (finalProgress >= 100) {\r\n            if (pollingInterval.current) {\r\n              clearInterval(pollingInterval.current);\r\n            }\r\n\r\n            setProcessingStatus({\r\n              message: 'Processing Complete!',\r\n              detailMessage: `Processed ${status.mbTotal?.toFixed(1) || 0} MB`,\r\n              progress: 100,\r\n              status: 'complete'\r\n            });\r\n\r\n            setIsProcessingLogs(true);\r\n            await logProcessingOp.clear();\r\n\r\n            setTimeout(() => {\r\n              setIsProcessingLogs(false);\r\n              setProcessingStatus(null);\r\n              onDataRefresh?.();\r\n            }, 10000);\r\n          } else {\r\n            setIsProcessingLogs(false);\r\n            await logProcessingOp.clear();\r\n            if (pollingInterval.current) {\r\n              clearInterval(pollingInterval.current);\r\n            }\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Error checking processing status:', err);\r\n      }\r\n    };\r\n\r\n    checkStatus();\r\n    pollingInterval.current = setInterval(checkStatus, 3000);\r\n  };\r\n\r\n  const handleResetLogs = async () => {\r\n    if (!isAuthenticated) {\r\n      onError?.('Authentication required');\r\n      return;\r\n    }\r\n\r\n    setActionLoading(true);\r\n    try {\r\n      const result = await ApiService.resetLogPosition();\r\n      if (result) {\r\n        onSuccess?.(result.message || 'Log position reset successfully');\r\n        setTimeout(() => onDataRefresh?.(), 2000);\r\n      }\r\n    } catch (err: any) {\r\n      onError?.(err.message || 'Failed to reset log position');\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProcessAllLogs = async () => {\r\n    if (!isAuthenticated) {\r\n      onError?.('Authentication required');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm('Process entire log file?')) return;\r\n\r\n    setActionLoading(true);\r\n    try {\r\n      const result = await ApiService.processAllLogs();\r\n\r\n      if (result) {\r\n        if (\r\n          result.status === 'empty_file' ||\r\n          result.status === 'no_log_file' ||\r\n          result.status === 'insufficient_data'\r\n        ) {\r\n          onError?.(result.message);\r\n          setActionLoading(false);\r\n          return;\r\n        }\r\n\r\n        if (result.logSizeMB > 0) {\r\n          await logProcessingOp.save({ type: 'processAll' });\r\n          setIsProcessingLogs(true);\r\n          setProcessingStatus({\r\n            message: 'Preparing to process logs...',\r\n            detailMessage: `${result.logSizeMB?.toFixed(1) || 0} MB to process`,\r\n            progress: 0,\r\n            estimatedTime: `Estimated: ${result.estimatedTimeMinutes} minutes`,\r\n            status: 'starting'\r\n          });\r\n\r\n          if (!signalRConnected) {\r\n            setTimeout(() => startProcessingPolling(), 5000);\r\n          }\r\n        } else {\r\n          onError?.('Log file appears to be empty or invalid');\r\n          await logProcessingOp.clear();\r\n        }\r\n      } else {\r\n        await logProcessingOp.clear();\r\n      }\r\n    } catch (err: any) {\r\n      await logProcessingOp.clear();\r\n      onError?.(err.message || 'Failed to process logs');\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelProcessing = async () => {\r\n    if (!isAuthenticated) {\r\n      onError?.('Authentication required');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm('Cancel log processing?')) return;\r\n\r\n    setActionLoading(true);\r\n    try {\r\n      await ApiService.cancelProcessing();\r\n      setIsProcessingLogs(false);\r\n      await logProcessingOp.clear();\r\n      if (pollingInterval.current) {\r\n        clearInterval(pollingInterval.current);\r\n      }\r\n      onSuccess?.('Processing cancelled');\r\n      setTimeout(() => {\r\n        setProcessingStatus(null);\r\n        onDataRefresh?.();\r\n      }, 5000);\r\n    } catch (err) {\r\n      onError?.('Failed to cancel processing');\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <div className=\"flex items-center space-x-2 mb-4\">\r\n        <FileText className=\"w-5 h-5 cache-hit\" />\r\n        <h3 className=\"text-lg font-semibold text-themed-primary\">Log Processing</h3>\r\n      </div>\r\n      <p className=\"text-themed-muted text-sm mb-4\">\r\n        Control how access.log is processed for statistics\r\n      </p>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <Button\r\n          variant=\"filled\"\r\n          color=\"yellow\"\r\n          leftSection={<RefreshCw className=\"w-4 h-4\" />}\r\n          onClick={handleResetLogs}\r\n          disabled={\r\n            actionLoading ||\r\n            isProcessingLogs ||\r\n            mockMode ||\r\n            logProcessingOp.loading ||\r\n            !isAuthenticated\r\n          }\r\n          fullWidth\r\n        >\r\n          Reset Log Position\r\n        </Button>\r\n        <Button\r\n          variant=\"filled\"\r\n          color=\"green\"\r\n          leftSection={<PlayCircle className=\"w-4 h-4\" />}\r\n          onClick={handleProcessAllLogs}\r\n          disabled={\r\n            actionLoading ||\r\n            isProcessingLogs ||\r\n            mockMode ||\r\n            logProcessingOp.loading ||\r\n            !isAuthenticated\r\n          }\r\n          loading={logProcessingOp.loading}\r\n          fullWidth\r\n        >\r\n          Process All Logs\r\n        </Button>\r\n      </div>\r\n      <div className=\"mt-4 p-3 bg-themed-tertiary rounded-lg\">\r\n        <p className=\"text-xs text-themed-muted\">\r\n          <strong>Reset:</strong> Start from current end of log\r\n          <br />\r\n          <strong>Process All:</strong> Import entire log history\r\n        </p>\r\n      </div>\r\n\r\n      {logProcessingOp.error && (\r\n        <Alert color=\"orange\">Backend storage error: {logProcessingOp.error}</Alert>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LogProcessingManager;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { RotateCcw } from 'lucide-react';\r\nimport { Gamepad2 } from 'lucide-react';\r\nimport {\r\n  Palette,\r\n  Upload,\r\n  Trash2,\r\n  Check,\r\n  Download,\r\n  Eye,\r\n  RefreshCw,\r\n  Lock,\r\n  Plus,\r\n  EyeOff,\r\n  ChevronDown,\r\n  ChevronRight,\r\n  Info,\r\n  Save,\r\n  Copy,\r\n  Sun,\r\n  Moon,\r\n  Brush,\r\n  Layout,\r\n  Type,\r\n  Square,\r\n  AlertCircle,\r\n  Component,\r\n  Sparkles,\r\n  Activity,\r\n  Edit,\r\n  Search,\r\n  X,\r\n  Percent\r\n} from 'lucide-react';\r\nimport themeService from '../../services/theme.service';\r\nimport authService from '../../services/auth.service';\r\nimport { Alert } from '../ui/Alert';\r\nimport { Button } from '../ui/Button';\r\nimport { Card } from '../ui/Card';\r\nimport { Modal } from '../ui/Modal';\r\nimport { API_BASE } from '../../utils/constants';\r\n\r\ninterface Theme {\r\n  meta: {\r\n    id: string;\r\n    name: string;\r\n    description?: string;\r\n    author?: string;\r\n    version?: string;\r\n    isDark?: boolean;\r\n  };\r\n  colors: any;\r\n  custom?: any;\r\n  css?: { content?: string };\r\n}\r\n\r\ninterface ColorGroup {\r\n  name: string;\r\n  icon: React.ElementType;\r\n  description: string;\r\n  colors: {\r\n    key: string;\r\n    label: string;\r\n    description: string;\r\n    affects: string[];\r\n    value?: string;\r\n    supportsAlpha?: boolean; // Allow transparency for this color\r\n  }[];\r\n}\r\n\r\ninterface ThemeManagerProps {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst ThemeManager: React.FC<ThemeManagerProps> = ({ isAuthenticated }) => {\r\n  const [themes, setThemes] = useState<Theme[]>([]);\r\n  const [currentTheme, setCurrentTheme] = useState('dark-default');\r\n  const [loading, setLoading] = useState(false);\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [uploadError, setUploadError] = useState<string | null>(null);\r\n  const [uploadSuccess, setUploadSuccess] = useState<string | null>(null);\r\n  const [previewTheme, setPreviewTheme] = useState<string | null>(null);\r\n  const [createModalOpen, setCreateModalOpen] = useState(false);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [editingTheme, setEditingTheme] = useState<Theme | null>(null);\r\n  const [expandedGroups, setExpandedGroups] = useState<string[]>([\r\n    'core',\r\n    'backgrounds',\r\n    'text'\r\n  ]);\r\n  const [copiedColor, setCopiedColor] = useState<string | null>(null);\r\n  const [colorEditingStarted, setColorEditingStarted] = useState<Record<string, boolean>>({});\r\n  const [createSearchQuery, setCreateSearchQuery] = useState('');\r\n  const [editSearchQuery, setEditSearchQuery] = useState('');\r\n\r\n  const [editedTheme, setEditedTheme] = useState<any>({});\r\n  const [newTheme, setNewTheme] = useState<any>({\r\n    name: '',\r\n    description: '',\r\n    author: '',\r\n    version: '1.0.0',\r\n    isDark: true,\r\n\r\n    // Core colors\r\n    primaryColor: '#3b82f6',\r\n    secondaryColor: '#8b5cf6',\r\n    accentColor: '#06b6d4',\r\n\r\n    // Backgrounds\r\n    bgPrimary: '#111827',\r\n    bgSecondary: '#1f2937',\r\n    bgTertiary: '#374151',\r\n    bgHover: '#4b5563',\r\n\r\n    // Text\r\n    textPrimary: '#ffffff',\r\n    textSecondary: '#d1d5db',\r\n    textMuted: '#9ca3af',\r\n    textAccent: '#60a5fa',\r\n    textPlaceholder: '#6b7280',\r\n    dragHandleColor: '#6b7280',\r\n    dragHandleHover: '#60a5fa',\r\n\r\n    // Borders\r\n    borderPrimary: '#374151',\r\n    borderSecondary: '#4b5563',\r\n    borderFocus: '#3b82f6',\r\n\r\n    // Navigation\r\n    navBg: '#1f2937',\r\n    navBorder: '#374151',\r\n    navTabActive: '#3b82f6',\r\n    navTabInactive: '#9ca3af',\r\n    navTabHover: '#ffffff',\r\n    navTabActiveBorder: '#3b82f6',\r\n    navMobileMenuBg: '#1f2937',\r\n    navMobileItemHover: '#374151',\r\n\r\n    // Status colors with backgrounds and text\r\n    success: '#10b981',\r\n    successBg: '#064e3b',\r\n    successText: '#34d399',\r\n    warning: '#f59e0b',\r\n    warningBg: '#78350f',\r\n    warningText: '#fbbf24',\r\n    error: '#ef4444',\r\n    errorBg: '#7f1d1d',\r\n    errorText: '#fca5a5',\r\n    info: '#3b82f6',\r\n    infoBg: '#1e3a8a',\r\n    infoText: '#93c5fd',\r\n\r\n    // Service colors\r\n    steamColor: '#1e40af',\r\n    epicColor: '#7c3aed',\r\n    originColor: '#ea580c',\r\n    blizzardColor: '#0891b2',\r\n    wsusColor: '#16a34a',\r\n    riotColor: '#dc2626',\r\n\r\n    // Components\r\n    cardBg: '#1f2937',\r\n    cardBorder: '#374151',\r\n    buttonBg: '#3b82f6',\r\n    buttonHover: '#2563eb',\r\n    buttonText: '#ffffff',\r\n    inputBg: '#374151',\r\n    inputBorder: '#4b5563',\r\n    inputFocus: '#3b82f6',\r\n    badgeBg: '#3b82f6',\r\n    badgeText: '#ffffff',\r\n    progressBar: '#3b82f6',\r\n    progressBg: '#374151',\r\n\r\n    // Icon backgrounds (solid colors)\r\n    iconBgBlue: '#3b82f6',\r\n    iconBgGreen: '#10b981',\r\n    iconBgEmerald: '#10b981',\r\n    iconBgPurple: '#8b5cf6',\r\n    iconBgIndigo: '#6366f1',\r\n    iconBgOrange: '#f97316',\r\n    iconBgYellow: '#eab308',\r\n    iconBgCyan: '#06b6d4',\r\n    iconBgRed: '#ef4444',\r\n\r\n    chartColor1: '#3b82f6',\r\n    chartColor2: '#10b981',\r\n    chartColor3: '#f59e0b',\r\n    chartColor4: '#ef4444',\r\n    chartColor5: '#8b5cf6',\r\n    chartColor6: '#06b6d4',\r\n    chartColor7: '#f97316',\r\n    chartColor8: '#ec4899',\r\n    chartBorderColor: '#1f2937',\r\n    chartGridColor: '#374151',\r\n    chartTextColor: '#9ca3af',\r\n    chartCacheHitColor: '#10b981',\r\n    chartCacheMissColor: '#f59e0b',\r\n\r\n    // Scrollbar colors\r\n    scrollbarTrack: '#374151',\r\n    scrollbarThumb: '#6B7280',\r\n    scrollbarHover: '#9CA3AF',\r\n\r\n    // Access indicators\r\n    publicAccessBg: 'rgba(16, 185, 129, 0.2)',\r\n    publicAccessText: '#34d399',\r\n    publicAccessBorder: 'rgba(16, 185, 129, 0.3)',\r\n    securedAccessBg: 'rgba(245, 158, 11, 0.2)',\r\n    securedAccessText: '#fbbf24',\r\n    securedAccessBorder: 'rgba(245, 158, 11, 0.3)',\r\n\r\n    customCSS: ''\r\n  });\r\n\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Helper functions for color conversion\r\n  const hexToRgba = (hex: string, alpha: number = 1): string => {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!result) return hex;\r\n    const r = parseInt(result[1], 16);\r\n    const g = parseInt(result[2], 16);\r\n    const b = parseInt(result[3], 16);\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n  };\r\n\r\n  const parseColorValue = (color: string): { hex: string; alpha: number } => {\r\n    // Handle rgba format\r\n    const rgbaMatch = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*([\\d.]+))?\\)/);\r\n    if (rgbaMatch) {\r\n      const r = parseInt(rgbaMatch[1]);\r\n      const g = parseInt(rgbaMatch[2]);\r\n      const b = parseInt(rgbaMatch[3]);\r\n      const alpha = rgbaMatch[4] ? parseFloat(rgbaMatch[4]) : 1;\r\n      const hex = '#' + [r, g, b].map(x => x.toString(16).padStart(2, '0')).join('');\r\n      return { hex, alpha };\r\n    }\r\n    // Handle hex format\r\n    return { hex: color, alpha: 1 };\r\n  };\r\n\r\n  const updateColorWithAlpha = (key: string, hex: string, alpha: number, isCreate: boolean = false) => {\r\n    const colorValue = alpha < 1 ? hexToRgba(hex, alpha) : hex;\r\n    if (isCreate) {\r\n      setNewTheme((prev: any) => ({ ...prev, [key]: colorValue }));\r\n    } else {\r\n      setEditedTheme((prev: any) => ({ ...prev, [key]: colorValue }));\r\n    }\r\n  };\r\n\r\n  // Filter color groups based on search\r\n  const filterColorGroups = (groups: ColorGroup[], search: string): ColorGroup[] => {\r\n    if (!search.trim()) return groups;\r\n\r\n    const searchLower = search.toLowerCase();\r\n    return groups.map(group => {\r\n      const filteredColors = group.colors.filter(color =>\r\n        color.label.toLowerCase().includes(searchLower) ||\r\n        color.description.toLowerCase().includes(searchLower) ||\r\n        color.affects.some(affect => affect.toLowerCase().includes(searchLower)) ||\r\n        color.key.toLowerCase().includes(searchLower)\r\n      );\r\n\r\n      // If group name matches, show all colors in that group\r\n      if (group.name.toLowerCase().includes(searchLower) ||\r\n          group.description.toLowerCase().includes(searchLower)) {\r\n        return group;\r\n      }\r\n\r\n      // Otherwise only show groups with matching colors\r\n      return { ...group, colors: filteredColors };\r\n    }).filter(group => group.colors.length > 0);\r\n  };\r\n\r\n  const colorGroups: ColorGroup[] = [\r\n    // 1. FOUNDATION - Core brand colors\r\n    {\r\n      name: 'foundation',\r\n      icon: Palette,\r\n      description: 'Core brand colors that define your theme\\'s identity',\r\n      colors: [\r\n        {\r\n          key: 'primaryColor',\r\n          label: 'Primary Brand Color',\r\n          description: 'Main brand color used throughout',\r\n          affects: ['Primary buttons', 'Links', 'Active states', 'Focus rings'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'secondaryColor',\r\n          label: 'Secondary Brand Color',\r\n          description: 'Complementary brand accent',\r\n          affects: ['Secondary buttons', 'Highlights', 'Accents'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'accentColor',\r\n          label: 'Accent Color',\r\n          description: 'Tertiary accent for special elements',\r\n          affects: ['Special badges', 'Tooltips', 'Info elements'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 2. CONTENT - Text and typography\r\n    {\r\n      name: 'content',\r\n      icon: Type,\r\n      description: 'Text colors for content hierarchy and readability',\r\n      colors: [\r\n        {\r\n          key: 'textPrimary',\r\n          label: 'Primary Text',\r\n          description: 'Main content text color',\r\n          affects: ['Headings', 'Body text', 'Labels'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'textSecondary',\r\n          label: 'Secondary Text',\r\n          description: 'Supporting content text',\r\n          affects: ['Descriptions', 'Subtitles', 'Help text'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'textMuted',\r\n          label: 'Muted Text',\r\n          description: 'De-emphasized text',\r\n          affects: ['Disabled text', 'Timestamps', 'Minor labels'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'textAccent',\r\n          label: 'Accent Text',\r\n          description: 'Highlighted or linked text',\r\n          affects: ['Links', 'Highlighted values', 'Active menu items'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'textPlaceholder',\r\n          label: 'Placeholder Text',\r\n          description: 'Input placeholder text color',\r\n          affects: ['Form placeholders', 'Search hints', 'Empty states'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 3. LAYOUT - Surfaces and containers\r\n    {\r\n      name: 'layout',\r\n      icon: Layout,\r\n      description: 'Background colors for UI surfaces and layers',\r\n      colors: [\r\n        {\r\n          key: 'bgPrimary',\r\n          label: 'Base Background',\r\n          description: 'Main application background',\r\n          affects: ['Body', 'Main container', 'Base layer'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'bgSecondary',\r\n          label: 'Surface Background',\r\n          description: 'Elevated surface backgrounds',\r\n          affects: ['Cards', 'Panels', 'Modals', 'Dialogs'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'bgTertiary',\r\n          label: 'Recessed Background',\r\n          description: 'Sunken or nested elements',\r\n          affects: ['Input fields', 'Wells', 'Code blocks'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'bgHover',\r\n          label: 'Hover State',\r\n          description: 'Interactive hover backgrounds',\r\n          affects: ['Button hovers', 'List hovers', 'Menu hovers'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'cardBg',\r\n          label: 'Card Background',\r\n          description: 'Card component background',\r\n          affects: ['Stat cards', 'Content cards', 'Widget backgrounds'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'cardBorder',\r\n          label: 'Card Border',\r\n          description: 'Card component borders',\r\n          affects: ['Card outlines', 'Panel borders'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 4. INTERACTIVE - Form elements and controls\r\n    {\r\n      name: 'interactive',\r\n      icon: Component,\r\n      description: 'Interactive elements like buttons, inputs, and forms',\r\n      colors: [\r\n        {\r\n          key: 'buttonBg',\r\n          label: 'Button Background',\r\n          description: 'Primary button fill color',\r\n          affects: ['Primary buttons', 'Submit buttons', 'CTAs'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'buttonHover',\r\n          label: 'Button Hover',\r\n          description: 'Button hover state color',\r\n          affects: ['Button hover effects', 'Active button states'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'buttonText',\r\n          label: 'Button Text',\r\n          description: 'Button label color',\r\n          affects: ['Button labels', 'Button icons'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'inputBg',\r\n          label: 'Input Background',\r\n          description: 'Form input background',\r\n          affects: ['Text inputs', 'Textareas', 'Select boxes'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'inputBorder',\r\n          label: 'Input Border',\r\n          description: 'Form input border',\r\n          affects: ['Input outlines', 'Field borders'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'inputFocus',\r\n          label: 'Input Focus',\r\n          description: 'Focused input indicator',\r\n          affects: ['Active input borders', 'Focus rings'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'dragHandleColor',\r\n          label: 'Drag Handle',\r\n          description: 'Drag and reorder controls',\r\n          affects: ['Drag grips', 'Reorder handles', 'Move indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'dragHandleHover',\r\n          label: 'Drag Handle Hover',\r\n          description: 'Active drag handle state',\r\n          affects: ['Drag grip hover', 'Active dragging'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 5. BORDERS & DIVIDERS\r\n    {\r\n      name: 'borders',\r\n      icon: Square,\r\n      description: 'Border colors for separators and outlines',\r\n      colors: [\r\n        {\r\n          key: 'borderPrimary',\r\n          label: 'Primary Border',\r\n          description: 'Main divider and border color',\r\n          affects: ['Card borders', 'Dividers', 'Separators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'borderSecondary',\r\n          label: 'Secondary Border',\r\n          description: 'Subtle borders and dividers',\r\n          affects: ['Input borders', 'Section dividers', 'Subtle lines'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'borderFocus',\r\n          label: 'Focus Border',\r\n          description: 'Active focus indicators',\r\n          affects: ['Focus rings', 'Active borders', 'Selected outlines'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 6. FEEDBACK - Status and alerts\r\n    {\r\n      name: 'feedback',\r\n      icon: AlertCircle,\r\n      description: 'Status indicators, alerts, and feedback colors',\r\n      colors: [\r\n        {\r\n          key: 'success',\r\n          label: 'Success Primary',\r\n          description: 'Success state primary color',\r\n          affects: ['Success icons', 'Success buttons', 'Positive actions'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'successBg',\r\n          label: 'Success Background',\r\n          description: 'Success state background',\r\n          affects: ['Success alerts', 'Success badges', 'Success cards'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'successText',\r\n          label: 'Success Text',\r\n          description: 'Success state text color',\r\n          affects: ['Success messages', 'Positive values'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'warning',\r\n          label: 'Warning Primary',\r\n          description: 'Warning state primary color',\r\n          affects: ['Warning icons', 'Caution buttons'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'warningBg',\r\n          label: 'Warning Background',\r\n          description: 'Warning state background',\r\n          affects: ['Warning alerts', 'Warning badges'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'warningText',\r\n          label: 'Warning Text',\r\n          description: 'Warning state text color',\r\n          affects: ['Warning messages', 'Caution text'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'error',\r\n          label: 'Error Primary',\r\n          description: 'Error state primary color',\r\n          affects: ['Error icons', 'Delete buttons', 'Critical actions'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'errorBg',\r\n          label: 'Error Background',\r\n          description: 'Error state background',\r\n          affects: ['Error alerts', 'Error badges'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'errorText',\r\n          label: 'Error Text',\r\n          description: 'Error state text color',\r\n          affects: ['Error messages', 'Validation errors'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'info',\r\n          label: 'Info Primary',\r\n          description: 'Information state primary color',\r\n          affects: ['Info icons', 'Info buttons'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'infoBg',\r\n          label: 'Info Background',\r\n          description: 'Information state background',\r\n          affects: ['Info alerts', 'Info cards'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'infoText',\r\n          label: 'Info Text',\r\n          description: 'Information state text color',\r\n          affects: ['Info messages', 'Help content'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 7. NAVIGATION\r\n    {\r\n      name: 'navigation',\r\n      icon: Layout,\r\n      description: 'Navigation bar and menu styling',\r\n      colors: [\r\n        {\r\n          key: 'navBg',\r\n          label: 'Navigation Background',\r\n          description: 'Navigation bar background',\r\n          affects: ['Header', 'Nav bar', 'Menu background'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'navBorder',\r\n          label: 'Navigation Border',\r\n          description: 'Navigation separators',\r\n          affects: ['Nav borders', 'Menu dividers'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'navTabActive',\r\n          label: 'Active Tab',\r\n          description: 'Active navigation item',\r\n          affects: ['Current page', 'Active tab'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'navTabInactive',\r\n          label: 'Inactive Tab',\r\n          description: 'Inactive navigation items',\r\n          affects: ['Unselected tabs', 'Inactive menu items'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'navTabHover',\r\n          label: 'Tab Hover',\r\n          description: 'Navigation hover state',\r\n          affects: ['Tab hovers', 'Menu hovers'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'navTabActiveBorder',\r\n          label: 'Active Tab Indicator',\r\n          description: 'Active tab underline/border',\r\n          affects: ['Tab indicators', 'Active borders'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'navMobileMenuBg',\r\n          label: 'Mobile Menu Background',\r\n          description: 'Mobile navigation background',\r\n          affects: ['Mobile menu', 'Dropdown menus'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'navMobileItemHover',\r\n          label: 'Mobile Menu Hover',\r\n          description: 'Mobile menu item hover',\r\n          affects: ['Mobile hovers', 'Dropdown hovers'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 8. DATA DISPLAY - Progress, badges, charts\r\n    {\r\n      name: 'dataDisplay',\r\n      icon: Activity,\r\n      description: 'Data visualization and display elements',\r\n      colors: [\r\n        {\r\n          key: 'badgeBg',\r\n          label: 'Badge Background',\r\n          description: 'Badge and pill backgrounds',\r\n          affects: ['Status badges', 'Tags', 'Labels'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'badgeText',\r\n          label: 'Badge Text',\r\n          description: 'Badge text color',\r\n          affects: ['Badge labels', 'Tag text'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'progressBar',\r\n          label: 'Progress Bar Fill',\r\n          description: 'Progress indicator color',\r\n          affects: ['Progress bars', 'Loading bars', 'Completion indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'progressBg',\r\n          label: 'Progress Track',\r\n          description: 'Progress bar background',\r\n          affects: ['Progress tracks', 'Empty progress state'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartColor1',\r\n          label: 'Chart Primary',\r\n          description: 'Primary chart color',\r\n          affects: ['First data series', 'Main chart color'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartColor2',\r\n          label: 'Chart Secondary',\r\n          description: 'Secondary chart color',\r\n          affects: ['Second data series'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartColor3',\r\n          label: 'Chart Tertiary',\r\n          description: 'Third chart color',\r\n          affects: ['Third data series'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartColor4',\r\n          label: 'Chart Quaternary',\r\n          description: 'Fourth chart color',\r\n          affects: ['Fourth data series'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartCacheHitColor',\r\n          label: 'Cache Hit Color',\r\n          description: 'Cache hit visualization',\r\n          affects: ['Hit rate charts', 'Success indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartCacheMissColor',\r\n          label: 'Cache Miss Color',\r\n          description: 'Cache miss visualization',\r\n          affects: ['Miss rate charts', 'Warning indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartGridColor',\r\n          label: 'Chart Grid',\r\n          description: 'Chart grid lines',\r\n          affects: ['Grid lines', 'Axes'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'chartTextColor',\r\n          label: 'Chart Text',\r\n          description: 'Chart labels and legends',\r\n          affects: ['Axis labels', 'Legends'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 9. ACCESS CONTROL - Security indicators\r\n    {\r\n      name: 'accessControl',\r\n      icon: Lock,\r\n      description: 'Security and access control indicators',\r\n      colors: [\r\n        {\r\n          key: 'publicAccessBg',\r\n          label: 'Public Access Background',\r\n          description: 'Public/open access indicator',\r\n          affects: ['Public badges', 'Open access indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'publicAccessText',\r\n          label: 'Public Access Text',\r\n          description: 'Public access text color',\r\n          affects: ['Public labels', 'Open text'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'publicAccessBorder',\r\n          label: 'Public Access Border',\r\n          description: 'Public access border',\r\n          affects: ['Public badge borders'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'securedAccessBg',\r\n          label: 'Secured Access Background',\r\n          description: 'Secured/locked access indicator',\r\n          affects: ['Security badges', 'Locked indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'securedAccessText',\r\n          label: 'Secured Access Text',\r\n          description: 'Secured access text color',\r\n          affects: ['Security labels', 'Locked text'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'securedAccessBorder',\r\n          label: 'Secured Access Border',\r\n          description: 'Secured access border',\r\n          affects: ['Security badge borders'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 10. PLATFORM SERVICES - Brand-specific colors\r\n    {\r\n      name: 'platforms',\r\n      icon: Gamepad2,\r\n      description: 'Gaming platform and service colors',\r\n      colors: [\r\n        {\r\n          key: 'steamColor',\r\n          label: 'Steam',\r\n          description: 'Steam platform color',\r\n          affects: ['Steam badges', 'Steam charts'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'epicColor',\r\n          label: 'Epic Games',\r\n          description: 'Epic Games platform color',\r\n          affects: ['Epic badges', 'Epic charts'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'originColor',\r\n          label: 'Origin/EA',\r\n          description: 'EA/Origin platform color',\r\n          affects: ['Origin badges', 'EA charts'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'blizzardColor',\r\n          label: 'Blizzard',\r\n          description: 'Blizzard platform color',\r\n          affects: ['Blizzard badges', 'Battle.net charts'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'wsusColor',\r\n          label: 'Windows Update',\r\n          description: 'Windows Update service color',\r\n          affects: ['WSUS badges', 'Update charts'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'riotColor',\r\n          label: 'Riot Games',\r\n          description: 'Riot Games platform color',\r\n          affects: ['Riot badges', 'LoL charts'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 11. UTILITIES - Misc UI elements\r\n    {\r\n      name: 'utilities',\r\n      icon: Brush,\r\n      description: 'Utility colors for specialized UI elements',\r\n      colors: [\r\n        {\r\n          key: 'scrollbarTrack',\r\n          label: 'Scrollbar Track',\r\n          description: 'Scrollbar background track',\r\n          affects: ['Scrollbar tracks', 'Scroll gutters'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'scrollbarThumb',\r\n          label: 'Scrollbar Thumb',\r\n          description: 'Scrollbar draggable element',\r\n          affects: ['Scrollbar handles'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'scrollbarHover',\r\n          label: 'Scrollbar Hover',\r\n          description: 'Scrollbar hover state',\r\n          affects: ['Scrollbar hover effects'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgBlue',\r\n          label: 'Blue Icon Background',\r\n          description: 'Blue icon container',\r\n          affects: ['Database icons', 'Info icons'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgGreen',\r\n          label: 'Green Icon Background',\r\n          description: 'Green icon container',\r\n          affects: ['Success icons', 'Online status'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgEmerald',\r\n          label: 'Emerald Icon Background',\r\n          description: 'Emerald icon container',\r\n          affects: ['Trending icons', 'Growth indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgPurple',\r\n          label: 'Purple Icon Background',\r\n          description: 'Purple icon container',\r\n          affects: ['Special features', 'Premium indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgIndigo',\r\n          label: 'Indigo Icon Background',\r\n          description: 'Indigo icon container',\r\n          affects: ['Server icons', 'System indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgOrange',\r\n          label: 'Orange Icon Background',\r\n          description: 'Orange icon container',\r\n          affects: ['Download icons', 'Activity indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgYellow',\r\n          label: 'Yellow Icon Background',\r\n          description: 'Yellow icon container',\r\n          affects: ['Warning icons', 'Client indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgCyan',\r\n          label: 'Cyan Icon Background',\r\n          description: 'Cyan icon container',\r\n          affects: ['Activity icons', 'Performance indicators'],\r\n          supportsAlpha: true\r\n        },\r\n        {\r\n          key: 'iconBgRed',\r\n          label: 'Red Icon Background',\r\n          description: 'Red icon container',\r\n          affects: ['Error icons', 'Critical indicators'],\r\n          supportsAlpha: true\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Load themes and set the current theme ID\r\n    loadThemes();\r\n    const currentThemeId = themeService.getCurrentThemeId();\r\n    setCurrentTheme(currentThemeId);\r\n    \r\n    // Debug: Log all color history in localStorage\r\n    console.log('=== Color History in localStorage ===');\r\n    Object.keys(localStorage).forEach(key => {\r\n      if (key.startsWith('color_history_')) {\r\n        console.log(`${key}: ${localStorage.getItem(key)}`);\r\n      }\r\n    });\r\n    console.log('=====================================');\r\n  }, []);\r\n\r\n  // Update newTheme colors when create modal opens\r\n  useEffect(() => {\r\n    if (createModalOpen) {\r\n      // Get current theme's colors from computed styles\r\n      const computedStyle = getComputedStyle(document.documentElement);\r\n      const getCurrentColor = (varName: string, fallback: string) => {\r\n        const color = computedStyle.getPropertyValue(varName).trim();\r\n        return color || fallback;\r\n      };\r\n\r\n      setNewTheme((prev: any) => ({\r\n        ...prev,\r\n        // Update all color values with current theme colors\r\n        primaryColor: getCurrentColor('--theme-primary', '#3b82f6'),\r\n        secondaryColor: getCurrentColor('--theme-secondary', '#8b5cf6'),\r\n        accentColor: getCurrentColor('--theme-accent', '#06b6d4'),\r\n\r\n        bgPrimary: getCurrentColor('--theme-bg-primary', '#111827'),\r\n        bgSecondary: getCurrentColor('--theme-bg-secondary', '#1f2937'),\r\n        bgTertiary: getCurrentColor('--theme-bg-tertiary', '#374151'),\r\n        bgHover: getCurrentColor('--theme-bg-hover', '#4b5563'),\r\n\r\n        textPrimary: getCurrentColor('--theme-text-primary', '#ffffff'),\r\n        textSecondary: getCurrentColor('--theme-text-secondary', '#d1d5db'),\r\n        textMuted: getCurrentColor('--theme-text-muted', '#9ca3af'),\r\n        textAccent: getCurrentColor('--theme-text-accent', '#60a5fa'),\r\n        textPlaceholder: getCurrentColor('--theme-text-placeholder', '#6b7280'),\r\n        dragHandleColor: getCurrentColor('--theme-drag-handle-color', '#6b7280'),\r\n        dragHandleHover: getCurrentColor('--theme-drag-handle-hover', '#60a5fa'),\r\n\r\n        borderPrimary: getCurrentColor('--theme-border-primary', '#374151'),\r\n        borderSecondary: getCurrentColor('--theme-border-secondary', '#4b5563'),\r\n        borderFocus: getCurrentColor('--theme-border-focus', '#3b82f6'),\r\n\r\n        navBg: getCurrentColor('--theme-nav-bg', '#1f2937'),\r\n        navBorder: getCurrentColor('--theme-nav-border', '#374151'),\r\n        navTabActive: getCurrentColor('--theme-nav-tab-active', '#3b82f6'),\r\n        navTabInactive: getCurrentColor('--theme-nav-tab-inactive', '#9ca3af'),\r\n        navTabHover: getCurrentColor('--theme-nav-tab-hover', '#ffffff'),\r\n        navTabActiveBorder: getCurrentColor('--theme-nav-tab-active-border', '#3b82f6'),\r\n        navMobileMenuBg: getCurrentColor('--theme-nav-mobile-menu-bg', '#1f2937'),\r\n        navMobileItemHover: getCurrentColor('--theme-nav-mobile-item-hover', '#374151'),\r\n\r\n        success: getCurrentColor('--theme-success', '#10b981'),\r\n        successBg: getCurrentColor('--theme-success-bg', '#064e3b'),\r\n        successText: getCurrentColor('--theme-success-text', '#34d399'),\r\n        warning: getCurrentColor('--theme-warning', '#f59e0b'),\r\n        warningBg: getCurrentColor('--theme-warning-bg', '#78350f'),\r\n        warningText: getCurrentColor('--theme-warning-text', '#fbbf24'),\r\n        error: getCurrentColor('--theme-error', '#ef4444'),\r\n        errorBg: getCurrentColor('--theme-error-bg', '#7f1d1d'),\r\n        errorText: getCurrentColor('--theme-error-text', '#fca5a5'),\r\n        info: getCurrentColor('--theme-info', '#3b82f6'),\r\n        infoBg: getCurrentColor('--theme-info-bg', '#1e3a8a'),\r\n        infoText: getCurrentColor('--theme-info-text', '#93c5fd'),\r\n\r\n        steamColor: getCurrentColor('--theme-steam-color', '#1e40af'),\r\n        epicColor: getCurrentColor('--theme-epic-color', '#7c3aed'),\r\n        originColor: getCurrentColor('--theme-origin-color', '#ea580c'),\r\n        blizzardColor: getCurrentColor('--theme-blizzard-color', '#0891b2'),\r\n        wsusColor: getCurrentColor('--theme-wsus-color', '#16a34a'),\r\n        riotColor: getCurrentColor('--theme-riot-color', '#dc2626'),\r\n\r\n        cardBg: getCurrentColor('--theme-card-bg', '#1f2937'),\r\n        cardBorder: getCurrentColor('--theme-card-border', '#374151'),\r\n        buttonBg: getCurrentColor('--theme-button-bg', '#3b82f6'),\r\n        buttonHover: getCurrentColor('--theme-button-hover', '#2563eb'),\r\n        buttonText: getCurrentColor('--theme-button-text', '#ffffff'),\r\n        inputBg: getCurrentColor('--theme-input-bg', '#374151'),\r\n        inputBorder: getCurrentColor('--theme-input-border', '#4b5563'),\r\n        inputFocus: getCurrentColor('--theme-input-focus', '#3b82f6'),\r\n        badgeBg: getCurrentColor('--theme-badge-bg', '#3b82f6'),\r\n        badgeText: getCurrentColor('--theme-badge-text', '#ffffff'),\r\n        progressBar: getCurrentColor('--theme-progress-bar', '#3b82f6'),\r\n        progressBg: getCurrentColor('--theme-progress-bg', '#374151'),\r\n\r\n        // Icon backgrounds\r\n        iconBgBlue: getCurrentColor('--theme-icon-bg-blue', '#3b82f6'),\r\n        iconBgGreen: getCurrentColor('--theme-icon-bg-green', '#10b981'),\r\n        iconBgEmerald: getCurrentColor('--theme-icon-bg-emerald', '#10b981'),\r\n        iconBgPurple: getCurrentColor('--theme-icon-bg-purple', '#8b5cf6'),\r\n        iconBgIndigo: getCurrentColor('--theme-icon-bg-indigo', '#6366f1'),\r\n        iconBgOrange: getCurrentColor('--theme-icon-bg-orange', '#f97316'),\r\n        iconBgYellow: getCurrentColor('--theme-icon-bg-yellow', '#eab308'),\r\n        iconBgCyan: getCurrentColor('--theme-icon-bg-cyan', '#06b6d4'),\r\n        iconBgRed: getCurrentColor('--theme-icon-bg-red', '#ef4444'),\r\n\r\n        // Chart colors\r\n        chartColor1: getCurrentColor('--theme-chart-color-1', '#3b82f6'),\r\n        chartColor2: getCurrentColor('--theme-chart-color-2', '#10b981'),\r\n        chartColor3: getCurrentColor('--theme-chart-color-3', '#f59e0b'),\r\n        chartColor4: getCurrentColor('--theme-chart-color-4', '#ef4444'),\r\n        chartColor5: getCurrentColor('--theme-chart-color-5', '#8b5cf6'),\r\n        chartColor6: getCurrentColor('--theme-chart-color-6', '#06b6d4'),\r\n        chartColor7: getCurrentColor('--theme-chart-color-7', '#f97316'),\r\n        chartColor8: getCurrentColor('--theme-chart-color-8', '#ec4899'),\r\n        chartBorderColor: getCurrentColor('--theme-chart-border-color', '#1f2937'),\r\n        chartGridColor: getCurrentColor('--theme-chart-grid-color', '#374151'),\r\n        chartTextColor: getCurrentColor('--theme-chart-text-color', '#9ca3af'),\r\n        chartCacheHitColor: getCurrentColor('--theme-chart-cache-hit-color', '#10b981'),\r\n        chartCacheMissColor: getCurrentColor('--theme-chart-cache-miss-color', '#f59e0b'),\r\n\r\n        // Scrollbar colors\r\n        scrollbarThumb: getCurrentColor('--theme-scrollbar-thumb', '#4b5563'),\r\n        scrollbarTrack: getCurrentColor('--theme-scrollbar-track', '#1f2937'),\r\n        scrollbarThumbHover: getCurrentColor('--theme-scrollbar-thumb-hover', '#6b7280'),\r\n      }));\r\n    }\r\n  }, [createModalOpen]);\r\n\r\n  const loadThemes = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const themeList = await themeService.loadThemes();\r\n      setThemes(themeList);\r\n    } catch (error) {\r\n      console.error('Failed to load themes:', error);\r\n      setUploadError('Failed to load themes');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleThemeChange = async (themeId: string) => {\r\n    try {\r\n      if (!themeId) {\r\n        themeService.clearTheme();\r\n        setCurrentTheme('');\r\n        setPreviewTheme(null);\r\n        return;\r\n      }\r\n\r\n      const theme = await themeService.getTheme(themeId);\r\n      if (theme) {\r\n        themeService.applyTheme(theme);\r\n        setCurrentTheme(themeId);\r\n        setPreviewTheme(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to apply theme:', error);\r\n      setUploadError('Failed to apply theme');\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (themeId: string) => {\r\n    if (previewTheme === themeId) {\r\n      handleThemeChange(currentTheme);\r\n      setPreviewTheme(null);\r\n    } else {\r\n      try {\r\n        const theme = await themeService.getTheme(themeId);\r\n        if (theme) {\r\n          themeService.applyTheme(theme);\r\n          setPreviewTheme(themeId);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to preview theme:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleGroup = (groupName: string) => {\r\n    setExpandedGroups((prev) =>\r\n      prev.includes(groupName) ? prev.filter((g) => g !== groupName) : [...prev, groupName]\r\n    );\r\n  };\r\n\r\n  const [createColorEditingStarted, setCreateColorEditingStarted] = useState<Record<string, boolean>>({});\r\n  \r\n  const handleColorStart = (key: string) => {\r\n    // Save the original color when user starts editing\r\n    if (!createColorEditingStarted[key]) {\r\n      const currentValue = newTheme[key];\r\n      if (currentValue) {\r\n        localStorage.setItem(`color_history_create_${key}`, currentValue);\r\n        console.log(`Saved original create color: ${key} = ${currentValue}`);\r\n      }\r\n      setCreateColorEditingStarted(prev => ({ ...prev, [key]: true }));\r\n    }\r\n  };\r\n  \r\n  const handleColorChange = (key: string, value: string) => {\r\n    // Just update the value, don't save to history on every change\r\n    setNewTheme((prev: any) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const restoreCreatePreviousColor = (key: string) => {\r\n    const previousColor = localStorage.getItem(`color_history_create_${key}`);\r\n    if (previousColor) {\r\n      // Swap current with history\r\n      const currentColor = newTheme[key];\r\n      setNewTheme((prev: any) => ({ ...prev, [key]: previousColor }));\r\n      localStorage.setItem(`color_history_create_${key}`, currentColor);\r\n    }\r\n  };\r\n  \r\n  const getCreateColorHistory = (key: string) => {\r\n    return localStorage.getItem(`color_history_create_${key}`);\r\n  };\r\n\r\n  const handleEditColorStart = (key: string) => {\r\n    // Save the original color when user starts editing (not on every change)\r\n    if (!colorEditingStarted[key]) {\r\n      const currentValue = editedTheme[key];\r\n      if (currentValue && currentValue.match(/^#[0-9a-fA-F]{6}$/)) {\r\n        const historyKey = `color_history_${editingTheme?.meta.id}_${key}`;\r\n        localStorage.setItem(historyKey, currentValue);\r\n        console.log(`Saved original color to history: ${key} = ${currentValue}`);\r\n      }\r\n      setColorEditingStarted(prev => ({ ...prev, [key]: true }));\r\n    }\r\n  };\r\n\r\n  const handleEditColorChange = (key: string, value: string) => {\r\n    // Just update the value, don't save to history on every change\r\n    setEditedTheme((prev: any) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const restorePreviousColor = (key: string) => {\r\n    const historyKey = `color_history_${editingTheme?.meta.id}_${key}`;\r\n    const previousColor = localStorage.getItem(historyKey);\r\n    if (previousColor) {\r\n      // Swap current with history\r\n      const currentColor = editedTheme[key];\r\n      console.log(`Restoring ${key}: ${currentColor} -> ${previousColor}`);\r\n      setEditedTheme((prev: any) => ({ ...prev, [key]: previousColor }));\r\n      localStorage.setItem(historyKey, currentColor || '');\r\n    }\r\n  };\r\n  \r\n  const getEditColorHistory = (key: string) => {\r\n    const historyKey = `color_history_${editingTheme?.meta.id}_${key}`;\r\n    const value = localStorage.getItem(historyKey);\r\n    console.log(`getEditColorHistory: key=${key}, historyKey=${historyKey}, value=${value}`);\r\n    return value;\r\n  };\r\n\r\n  const copyColor = async (color: string) => {\r\n    try {\r\n      if (navigator.clipboard && navigator.clipboard.writeText) {\r\n        await navigator.clipboard.writeText(color);\r\n      } else {\r\n        // Fallback for browsers without clipboard API\r\n        const textarea = document.createElement('textarea');\r\n        textarea.value = color;\r\n        textarea.style.position = 'fixed';\r\n        textarea.style.left = '-999999px';\r\n        textarea.style.top = '-999999px';\r\n        document.body.appendChild(textarea);\r\n        textarea.focus();\r\n        textarea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textarea);\r\n      }\r\n      setCopiedColor(color);\r\n      setTimeout(() => setCopiedColor(null), 2000);\r\n    } catch (err) {\r\n      console.error('Failed to copy color:', err);\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === 'dragenter' || e.type === 'dragover') {\r\n      setDragActive(true);\r\n    } else if (e.type === 'dragleave') {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = async (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n\r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      await handleFile(e.dataTransfer.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFile = async (file: File) => {\r\n    setUploadError(null);\r\n    setUploadSuccess(null);\r\n\r\n    if (!file.name.endsWith('.toml')) {\r\n      setUploadError('Only TOML theme files are supported');\r\n      return;\r\n    }\r\n\r\n    if (file.size > 1024 * 1024) {\r\n      setUploadError('Theme file too large (max 1MB)');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const result = await themeService.uploadTheme(file);\r\n      \r\n      // Wait a moment for the server to save the file\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      // Reload themes from server to ensure we have the saved version\r\n      const themeList = await themeService.loadThemes();\r\n      setThemes(themeList);\r\n      \r\n      setUploadSuccess(`Theme \"${result.meta.name}\" uploaded successfully`);\r\n      setTimeout(() => setUploadSuccess(null), 5000);\r\n    } catch (error: any) {\r\n      setUploadError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (themeId: string, themeName: string) => {\r\n    const isSystemTheme = ['dark-default', 'light-default'].includes(themeId);\r\n\r\n    if (isSystemTheme) {\r\n      setUploadError('System themes cannot be deleted');\r\n      setTimeout(() => setUploadError(null), 5000);\r\n      return;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      setUploadError('Authentication required to delete custom themes');\r\n      setTimeout(() => setUploadError(null), 5000);\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`Delete theme \"${themeName}\"? This cannot be undone.`)) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/theme/${themeId}`, {\r\n        method: 'DELETE',\r\n        headers: authService.getAuthHeaders()\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        await loadThemes();\r\n\r\n        if (currentTheme === themeId) {\r\n          handleThemeChange('dark-default');\r\n        }\r\n\r\n        const deletedFiles = result.filesDeleted?.join(', ') || 'theme files';\r\n        setUploadSuccess(`Theme \"${themeName}\" deleted successfully (removed: ${deletedFiles})`);\r\n        setTimeout(() => setUploadSuccess(null), 5000);\r\n      } else if (response.status === 404) {\r\n        setUploadError(`Theme \"${themeName}\" not found on server. ${result.details || ''}`);\r\n\r\n        setThemes((prev) => prev.filter((t) => t.meta.id !== themeId));\r\n\r\n        if (currentTheme === themeId) {\r\n          handleThemeChange('dark-default');\r\n        }\r\n\r\n        if (result.availableThemes) {\r\n          console.log('Available themes on server:', result.availableThemes);\r\n        }\r\n\r\n        setTimeout(() => setUploadError(null), 10000);\r\n      } else {\r\n        const errorMsg = result.error || result.message || 'Failed to delete theme';\r\n        const details = result.details ? ` Details: ${result.details}` : '';\r\n        setUploadError(`${errorMsg}${details}`);\r\n        setTimeout(() => setUploadError(null), 7000);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Delete request failed:', error);\r\n      setUploadError(`Failed to delete theme: ${error.message || 'Network error'}`);\r\n      setTimeout(() => setUploadError(null), 7000);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const cleanupThemes = async () => {\r\n    if (!isAuthenticated) {\r\n      setUploadError('Authentication required to clean up themes');\r\n      setTimeout(() => setUploadError(null), 5000);\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !window.confirm(\r\n        'This will DELETE all custom themes (keeping only system themes). This cannot be undone. Continue?'\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE}/theme/cleanup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...authService.getAuthHeaders()\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to cleanup themes');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      await loadThemes();\r\n\r\n      const remainingThemeIds = themes.map((t) => t.meta.id);\r\n      if (!remainingThemeIds.includes(currentTheme)) {\r\n        handleThemeChange('dark-default');\r\n      }\r\n\r\n      setUploadSuccess(result.message || 'All custom themes have been deleted');\r\n      setTimeout(() => setUploadSuccess(null), 5000);\r\n    } catch (error: any) {\r\n      setUploadError('Failed to cleanup themes: ' + error.message);\r\n      setTimeout(() => setUploadError(null), 5000);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditTheme = (theme: Theme) => {\r\n    if (!isAuthenticated) {\r\n      setUploadError('Authentication required to edit themes');\r\n      setTimeout(() => setUploadError(null), 5000);\r\n      return;\r\n    }\r\n\r\n    if (isSystemTheme(theme.meta.id)) {\r\n      setUploadError('System themes cannot be edited');\r\n      setTimeout(() => setUploadError(null), 5000);\r\n      return;\r\n    }\r\n\r\n    // Always use the most recent version from the themes array\r\n    const latestTheme = themes.find(t => t.meta.id === theme.meta.id) || theme;\r\n    \r\n    console.log('Editing theme:', latestTheme);\r\n    console.log('Theme colors:', latestTheme.colors);\r\n\r\n    // Reset the color editing started flags\r\n    setColorEditingStarted({});\r\n    setEditingTheme(latestTheme);\r\n    \r\n    // Start with all theme colors\r\n    const themeData = {\r\n      name: latestTheme.meta.name,\r\n      description: latestTheme.meta.description || '',\r\n      author: latestTheme.meta.author || '',\r\n      version: latestTheme.meta.version || '1.0.0',\r\n      isDark: latestTheme.meta.isDark !== false,\r\n      ...latestTheme.colors,\r\n      customCSS: latestTheme.css?.content || ''\r\n    };\r\n    \r\n    // Only add defaults if the properties don't exist\r\n    if (!latestTheme.colors.dragHandleColor) {\r\n      themeData.dragHandleColor = latestTheme.meta.isDark ? '#6b7280' : '#9ca3af';\r\n    }\r\n    if (!latestTheme.colors.dragHandleHover) {\r\n      themeData.dragHandleHover = latestTheme.meta.isDark ? '#60a5fa' : '#2563eb';\r\n    }\r\n    \r\n    console.log('Theme data for editing:', themeData);\r\n    const colorKeys = Object.keys(themeData).filter(k => !['name', 'description', 'author', 'version', 'isDark', 'customCSS'].includes(k));\r\n    console.log('Color keys and values in theme data:');\r\n    colorKeys.forEach(key => {\r\n      console.log(`  ${key}: ${themeData[key]}`);\r\n    });\r\n    setEditedTheme(themeData);\r\n    setEditModalOpen(true);\r\n  };\r\n\r\n  const handleSaveEditedTheme = async () => {\r\n    if (!isAuthenticated || !editingTheme) return;\r\n\r\n    if (!editedTheme.name.trim()) {\r\n      setUploadError('Theme name is required');\r\n      setTimeout(() => setUploadError(null), 5000);\r\n      return;\r\n    }\r\n\r\n    console.log('Saving theme with colors:', editedTheme);\r\n\r\n    // Create a clean colors object without meta properties\r\n    const cleanColors: any = {};\r\n    Object.entries(editedTheme).forEach(([key, value]) => {\r\n      if (!['name', 'description', 'author', 'version', 'isDark', 'customCSS'].includes(key)) {\r\n        cleanColors[key] = value;\r\n      }\r\n    });\r\n\r\n    const updatedTheme: Theme = {\r\n      meta: {\r\n        id: editingTheme.meta.id,\r\n        name: editedTheme.name,\r\n        description: editedTheme.description,\r\n        author: editedTheme.author,\r\n        version: editedTheme.version,\r\n        isDark: editedTheme.isDark\r\n      },\r\n      colors: cleanColors,\r\n      css: editedTheme.customCSS ? { content: editedTheme.customCSS } : undefined\r\n    };\r\n    \r\n    console.log('Theme object to save:', updatedTheme);\r\n\r\n    const tomlContent = themeService.exportTheme(updatedTheme);\r\n    const blob = new Blob([tomlContent], { type: 'text/plain' });\r\n    const file = new File([blob], `${updatedTheme.meta.id}.toml`, { type: 'text/plain' });\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Upload the theme file\r\n      await themeService.uploadTheme(file);\r\n      \r\n      // Wait a moment for the server to save the file\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      // Reload themes from server to get the actual saved version\r\n      const themeList = await themeService.loadThemes();\r\n      setThemes(themeList);\r\n      \r\n      // Find the saved theme and apply it if it's current\r\n      const savedTheme = themeList.find(t => t.meta.id === updatedTheme.meta.id);\r\n      if (savedTheme) {\r\n        if (currentTheme === editingTheme.meta.id) {\r\n          themeService.applyTheme(savedTheme);\r\n        }\r\n        setUploadSuccess(`Theme \"${savedTheme.meta.name}\" updated successfully`);\r\n      } else {\r\n        throw new Error('Theme was uploaded but not found on server');\r\n      }\r\n      \r\n      // Clear color history and reset flags for this theme after successful save\r\n      Object.keys(editedTheme).forEach(key => {\r\n        const historyKey = `color_history_${editingTheme.meta.id}_${key}`;\r\n        localStorage.removeItem(historyKey);\r\n      });\r\n      setColorEditingStarted({});\r\n      \r\n      // Close modal\r\n      setEditModalOpen(false);\r\n      setEditingTheme(null);\r\n      setEditedTheme({});\r\n      setTimeout(() => setUploadSuccess(null), 5000);\r\n      \r\n    } catch (error: any) {\r\n      setUploadError(error.message || 'Failed to update theme');\r\n      setLoading(false);\r\n      return; // Exit early on error\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n\r\n  const handleCreateTheme = async () => {\r\n    if (!isAuthenticated) {\r\n      setUploadError('Authentication required to create themes');\r\n      return;\r\n    }\r\n\r\n    if (!newTheme.name.trim()) {\r\n      setUploadError('Theme name is required');\r\n      setTimeout(() => setUploadError(null), 5000);\r\n      return;\r\n    }\r\n\r\n    const theme: Theme = {\r\n      meta: {\r\n        id: newTheme.name\r\n          .toLowerCase()\r\n          .replace(/\\s+/g, '-')\r\n          .replace(/[^a-z0-9-]/g, ''),\r\n        name: newTheme.name,\r\n        description: newTheme.description,\r\n        author: newTheme.author,\r\n        version: newTheme.version,\r\n        isDark: newTheme.isDark\r\n      },\r\n      colors: { ...newTheme },\r\n      css: newTheme.customCSS ? { content: newTheme.customCSS } : undefined\r\n    };\r\n\r\n    delete theme.colors.name;\r\n    delete theme.colors.description;\r\n    delete theme.colors.author;\r\n    delete theme.colors.version;\r\n    delete theme.colors.isDark;\r\n    delete theme.colors.customCSS;\r\n\r\n    const tomlContent = themeService.exportTheme(theme);\r\n    const blob = new Blob([tomlContent], { type: 'text/plain' });\r\n    const file = new File([blob], `${theme.meta.id}.toml`, { type: 'text/plain' });\r\n\r\n    setLoading(true);\r\n    try {\r\n      await themeService.uploadTheme(file);\r\n      \r\n      // Wait a moment for the server to save the file\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      // Reload themes from server to ensure we have the saved version\r\n      const themeList = await themeService.loadThemes();\r\n      setThemes(themeList);\r\n      \r\n      // Find and apply the created theme\r\n      const savedTheme = themeList.find(t => t.meta.id === theme.meta.id);\r\n      if (savedTheme) {\r\n        themeService.applyTheme(savedTheme);\r\n        setCurrentTheme(savedTheme.meta.id);\r\n      }\r\n      \r\n      setCreateModalOpen(false);\r\n      \r\n      // Clear create color history and reset flags after successful save\r\n      Object.keys(newTheme).forEach(key => {\r\n        localStorage.removeItem(`color_history_create_${key}`);\r\n      });\r\n      setCreateColorEditingStarted({});\r\n\r\n      setNewTheme({\r\n        name: '',\r\n        description: '',\r\n        author: '',\r\n        version: '1.0.0',\r\n        isDark: true,\r\n\r\n        primaryColor: '#3b82f6',\r\n        secondaryColor: '#8b5cf6',\r\n        accentColor: '#06b6d4',\r\n\r\n        bgPrimary: '#111827',\r\n        bgSecondary: '#1f2937',\r\n        bgTertiary: '#374151',\r\n        bgHover: '#4b5563',\r\n\r\n        textPrimary: '#ffffff',\r\n        textSecondary: '#d1d5db',\r\n        textMuted: '#9ca3af',\r\n        textAccent: '#60a5fa',\r\n        dragHandleColor: '#6b7280',\r\n        dragHandleHover: '#60a5fa',\r\n\r\n        borderPrimary: '#374151',\r\n        borderSecondary: '#4b5563',\r\n        borderFocus: '#3b82f6',\r\n\r\n        navBg: '#1f2937',\r\n        navBorder: '#374151',\r\n        navTabActive: '#3b82f6',\r\n        navTabInactive: '#9ca3af',\r\n        navTabHover: '#ffffff',\r\n        navTabActiveBorder: '#3b82f6',\r\n        navMobileMenuBg: '#1f2937',\r\n        navMobileItemHover: '#374151',\r\n\r\n        success: '#10b981',\r\n        successBg: '#064e3b',\r\n        successText: '#34d399',\r\n        warning: '#f59e0b',\r\n        warningBg: '#78350f',\r\n        warningText: '#fbbf24',\r\n        error: '#ef4444',\r\n        errorBg: '#7f1d1d',\r\n        errorText: '#fca5a5',\r\n        info: '#3b82f6',\r\n        infoBg: '#1e3a8a',\r\n        infoText: '#93c5fd',\r\n\r\n        steamColor: '#1e40af',\r\n        epicColor: '#7c3aed',\r\n        originColor: '#ea580c',\r\n        blizzardColor: '#0891b2',\r\n        wsusColor: '#16a34a',\r\n        riotColor: '#dc2626',\r\n\r\n        cardBg: '#1f2937',\r\n        cardBorder: '#374151',\r\n        buttonBg: '#3b82f6',\r\n        buttonHover: '#2563eb',\r\n        buttonText: '#ffffff',\r\n        inputBg: '#374151',\r\n        inputBorder: '#4b5563',\r\n        inputFocus: '#3b82f6',\r\n        badgeBg: '#3b82f6',\r\n        badgeText: '#ffffff',\r\n        progressBar: '#3b82f6',\r\n        progressBg: '#374151',\r\n\r\n        iconBgBlue: '#3b82f6',\r\n        iconBgGreen: '#10b981',\r\n        iconBgEmerald: '#10b981',\r\n        iconBgPurple: '#8b5cf6',\r\n        iconBgIndigo: '#6366f1',\r\n        iconBgOrange: '#f97316',\r\n        iconBgYellow: '#eab308',\r\n        iconBgCyan: '#06b6d4',\r\n        iconBgRed: '#ef4444',\r\n\r\n        // Chart colors\r\n        chartColor1: '#3b82f6',\r\n        chartColor2: '#10b981',\r\n        chartColor3: '#f59e0b',\r\n        chartColor4: '#ef4444',\r\n        chartColor5: '#8b5cf6',\r\n        chartColor6: '#06b6d4',\r\n        chartColor7: '#f97316',\r\n        chartColor8: '#ec4899',\r\n        chartBorderColor: '#1f2937',\r\n        chartGridColor: '#374151',\r\n        chartTextColor: '#9ca3af',\r\n        chartCacheHitColor: '#10b981',\r\n        chartCacheMissColor: '#f59e0b',\r\n\r\n        // Scrollbar colors\r\n        scrollbarTrack: '#374151',\r\n        scrollbarThumb: '#6B7280',\r\n        scrollbarHover: '#9CA3AF',\r\n\r\n        // Access indicators\r\n        publicAccessBg: 'rgba(16, 185, 129, 0.2)',\r\n        publicAccessText: '#34d399',\r\n        publicAccessBorder: 'rgba(16, 185, 129, 0.3)',\r\n        securedAccessBg: 'rgba(245, 158, 11, 0.2)',\r\n        securedAccessText: '#fbbf24',\r\n        securedAccessBorder: 'rgba(245, 158, 11, 0.3)',\r\n\r\n        customCSS: ''\r\n      });\r\n\r\n      setUploadSuccess(`Theme \"${theme.meta.name}\" created successfully`);\r\n      setTimeout(() => setUploadSuccess(null), 5000);\r\n    } catch (error: any) {\r\n      setUploadError(error.message || 'Failed to create theme');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadPresetColors = (preset: 'dark' | 'light') => {\r\n    if (preset === 'dark') {\r\n      setNewTheme((prev: any) => ({\r\n        ...prev,\r\n        isDark: true,\r\n        bgPrimary: '#111827',\r\n        bgSecondary: '#1f2937',\r\n        bgTertiary: '#374151',\r\n        bgHover: '#4b5563',\r\n        textPrimary: '#ffffff',\r\n        textSecondary: '#d1d5db',\r\n        textMuted: '#9ca3af',\r\n        dragHandleColor: '#6b7280',\r\n        dragHandleHover: '#00ff00',\r\n        borderPrimary: '#374151',\r\n        borderSecondary: '#4b5563',\r\n        navBg: '#1f2937',\r\n        navBorder: '#374151',\r\n        navTabActive: '#3b82f6',\r\n        navTabInactive: '#9ca3af',\r\n        navTabHover: '#ffffff',\r\n        navTabActiveBorder: '#3b82f6',\r\n        navMobileMenuBg: '#1f2937',\r\n        navMobileItemHover: '#374151',\r\n        cardBg: '#1f2937',\r\n        cardBorder: '#374151',\r\n        inputBg: '#374151',\r\n        inputBorder: '#4b5563',\r\n        progressBg: '#374151',\r\n        successBg: '#064e3b',\r\n        successText: '#34d399',\r\n        warningBg: '#78350f',\r\n        warningText: '#fbbf24',\r\n        errorBg: '#7f1d1d',\r\n        errorText: '#fca5a5',\r\n        infoBg: '#1e3a8a',\r\n        infoText: '#93c5fd',\r\n        chartBorderColor: '#1f2937',\r\n        chartGridColor: '#374151',\r\n        chartTextColor: '#9ca3af',\r\n        scrollbarTrack: '#374151',\r\n        scrollbarThumb: '#6B7280',\r\n        scrollbarHover: '#9CA3AF'\r\n      }));\r\n    } else {\r\n      setNewTheme((prev: any) => ({\r\n        ...prev,\r\n        isDark: false,\r\n        bgPrimary: '#ffffff',\r\n        bgSecondary: '#f9fafb',\r\n        bgTertiary: '#f3f4f6',\r\n        bgHover: '#e5e7eb',\r\n        textPrimary: '#111827',\r\n        textSecondary: '#374151',\r\n        textMuted: '#6b7280',\r\n        dragHandleColor: '#9ca3af',\r\n        dragHandleHover: '#2563eb',\r\n        borderPrimary: '#e5e7eb',\r\n        borderSecondary: '#d1d5db',\r\n        navBg: '#f9fafb',\r\n        navBorder: '#e5e7eb',\r\n        navTabActive: '#3b82f6',\r\n        navTabInactive: '#6b7280',\r\n        navTabHover: '#111827',\r\n        navTabActiveBorder: '#3b82f6',\r\n        navMobileMenuBg: '#f9fafb',\r\n        navMobileItemHover: '#e5e7eb',\r\n        cardBg: '#ffffff',\r\n        cardBorder: '#e5e7eb',\r\n        inputBg: '#ffffff',\r\n        inputBorder: '#d1d5db',\r\n        progressBg: '#e5e7eb',\r\n        successBg: '#d1fae5',\r\n        successText: '#065f46',\r\n        warningBg: '#fef3c7',\r\n        warningText: '#92400e',\r\n        errorBg: '#fee2e2',\r\n        errorText: '#991b1b',\r\n        infoBg: '#dbeafe',\r\n        infoText: '#1e40af',\r\n        chartBorderColor: '#e5e7eb',\r\n        chartGridColor: '#d1d5db',\r\n        chartTextColor: '#6b7280',\r\n        scrollbarTrack: '#f3f4f6',\r\n        scrollbarThumb: '#9ca3af',\r\n        scrollbarHover: '#6b7280'\r\n      }));\r\n    }\r\n  };\r\n\r\n  const exportTheme = (theme: Theme) => {\r\n    const tomlContent = themeService.exportTheme(theme);\r\n    const blob = new Blob([tomlContent], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${theme.meta.id}.toml`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const downloadSampleTheme = () => {\r\n    const sampleToml = `# Sample Theme for LANCache Manager\r\n[meta]\r\nname = \"My Custom Theme\"\r\nid = \"my-custom-theme\"\r\ndescription = \"A beautiful custom theme\"\r\nauthor = \"Your Name\"\r\nversion = \"1.0.0\"\r\nisDark = true\r\n\r\n[colors]\r\n# Core colors\r\nprimaryColor = \"#3b82f6\"\r\nsecondaryColor = \"#8b5cf6\"\r\naccentColor = \"#06b6d4\"\r\n\r\n# Backgrounds\r\nbgPrimary = \"#111827\"\r\nbgSecondary = \"#1f2937\"\r\nbgTertiary = \"#374151\"\r\nbgHover = \"#4b5563\"\r\n\r\n# Text\r\ntextPrimary = \"#ffffff\"\r\ntextSecondary = \"#d1d5db\"\r\ntextMuted = \"#9ca3af\"\r\ntextAccent = \"#60a5fa\"\r\ndragHandleColor = \"#6b7280\"\r\ndragHandleHover = \"#60a5fa\"\r\n\r\n# Borders\r\nborderPrimary = \"#374151\"\r\nborderSecondary = \"#4b5563\"\r\nborderFocus = \"#3b82f6\"\r\n\r\n# Navigation colors\r\nnavBg = \"#1f2937\"\r\nnavBorder = \"#374151\"\r\nnavTabActive = \"#3b82f6\"\r\nnavTabInactive = \"#9ca3af\"\r\nnavTabHover = \"#ffffff\"\r\nnavTabActiveBorder = \"#3b82f6\"\r\nnavMobileMenuBg = \"#1f2937\"\r\nnavMobileItemHover = \"#374151\"\r\n\r\n# Hit Rate & Status Badge colors\r\nhitRateHighBg = \"#064e3b\"\r\nhitRateHighText = \"#34d399\"\r\nhitRateMediumBg = \"#1e3a8a\"\r\nhitRateMediumText = \"#93c5fd\"\r\nhitRateLowBg = \"#ea580c\"\r\nhitRateLowText = \"#fb923c\"\r\nstatusWarningBg = \"#78350f\"\r\nstatusWarningText = \"#fbbf24\"\r\n\r\n# Action Button colors\r\nactionResetBg = \"#f59e0b\"\r\nactionResetHover = \"#d97706\"\r\nactionProcessBg = \"#10b981\"\r\nactionProcessHover = \"#059669\"\r\nactionDeleteBg = \"#ef4444\"\r\nactionDeleteHover = \"#dc2626\"\r\n\r\n# Status colors\r\nsuccess = \"#10b981\"\r\nsuccessBg = \"#064e3b\"\r\nsuccessText = \"#34d399\"\r\nwarning = \"#f59e0b\"\r\nwarningBg = \"#78350f\"\r\nwarningText = \"#fbbf24\"\r\nerror = \"#ef4444\"\r\nerrorBg = \"#7f1d1d\"\r\nerrorText = \"#fca5a5\"\r\ninfo = \"#3b82f6\"\r\ninfoBg = \"#1e3a8a\"\r\ninfoText = \"#93c5fd\"\r\n\r\n# Service colors\r\nsteamColor = \"#1e40af\"\r\nepicColor = \"#7c3aed\"\r\noriginColor = \"#ea580c\"\r\nblizzardColor = \"#0891b2\"\r\nwsusColor = \"#16a34a\"\r\nriotColor = \"#dc2626\"\r\n\r\n# Components\r\ncardBg = \"#1f2937\"\r\ncardBorder = \"#374151\"\r\nbuttonBg = \"#3b82f6\"\r\nbuttonHover = \"#2563eb\"\r\nbuttonText = \"#ffffff\"\r\ninputBg = \"#374151\"\r\ninputBorder = \"#4b5563\"\r\ninputFocus = \"#3b82f6\"\r\nbadgeBg = \"#3b82f6\"\r\nbadgeText = \"#ffffff\"\r\nprogressBar = \"#3b82f6\"\r\nprogressBg = \"#374151\"\r\n\r\n# Icon backgrounds (solid colors, no gradients)\r\niconBgBlue = \"#3b82f6\"\r\niconBgGreen = \"#10b981\"\r\niconBgEmerald = \"#10b981\"\r\niconBgPurple = \"#8b5cf6\"\r\niconBgIndigo = \"#6366f1\"\r\niconBgOrange = \"#f97316\"\r\niconBgYellow = \"#eab308\"\r\niconBgCyan = \"#06b6d4\"\r\niconBgRed = \"#ef4444\"\r\n\r\n# Chart colors\r\nchartColor1 = \"#3b82f6\"\r\nchartColor2 = \"#10b981\"\r\nchartColor3 = \"#f59e0b\"\r\nchartColor4 = \"#ef4444\"\r\nchartColor5 = \"#8b5cf6\"\r\nchartColor6 = \"#06b6d4\"\r\nchartColor7 = \"#f97316\"\r\nchartColor8 = \"#ec4899\"\r\nchartBorderColor = \"#1f2937\"\r\nchartGridColor = \"#374151\"\r\nchartTextColor = \"#9ca3af\"\r\nchartCacheHitColor = \"#10b981\"\r\nchartCacheMissColor = \"#f59e0b\"\r\n\r\n[css]\r\ncontent = \"\"\"\r\n/* Add any custom CSS here */\r\n\"\"\"`;\r\n\r\n    const blob = new Blob([sampleToml], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'sample-theme.toml';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const isSystemTheme = (themeId: string) => ['dark-default', 'light-default'].includes(themeId);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Palette className=\"w-5 h-5 text-themed-accent\" />\r\n            <h3 className=\"text-lg font-semibold text-themed-primary\">Theme Management</h3>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {isAuthenticated ? (\r\n              <>\r\n                <button\r\n                  onClick={() => setCreateModalOpen(true)}\r\n                  className=\"p-2 rounded-lg transition-colors\"\r\n                  style={{\r\n                    color: 'var(--theme-text-muted)',\r\n                    backgroundColor: 'transparent'\r\n                  }}\r\n                  onMouseEnter={(e) =>\r\n                    (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n                  }\r\n                  onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n                  title=\"Create new theme\"\r\n                >\r\n                  <Plus className=\"w-4 h-4\" />\r\n                </button>\r\n                <button\r\n                  onClick={cleanupThemes}\r\n                  disabled={loading}\r\n                  className=\"p-2 rounded-lg transition-colors\"\r\n                  style={{\r\n                    color: 'var(--theme-text-muted)',\r\n                    backgroundColor: 'transparent'\r\n                  }}\r\n                  onMouseEnter={(e) =>\r\n                    (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n                  }\r\n                  onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n                  title=\"Delete all custom themes\"\r\n                >\r\n                  <Sparkles className=\"w-4 h-4\" />\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <button\r\n                disabled\r\n                className=\"p-2 rounded-lg transition-colors opacity-50 cursor-not-allowed\"\r\n                style={{\r\n                  color: 'var(--theme-text-muted)',\r\n                  backgroundColor: 'transparent'\r\n                }}\r\n                title=\"Authentication required to create themes\"\r\n              >\r\n                <Lock className=\"w-4 h-4\" />\r\n              </button>\r\n            )}\r\n            <button\r\n              onClick={() => loadThemes()}\r\n              disabled={loading}\r\n              className=\"p-2 rounded-lg transition-colors\"\r\n              style={{\r\n                color: 'var(--theme-text-muted)',\r\n                backgroundColor: 'transparent'\r\n              }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.backgroundColor = 'var(--theme-bg-hover)')\r\n              }\r\n              onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n              title=\"Refresh themes\"\r\n            >\r\n              <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-sm font-medium mb-2 text-themed-secondary\">\r\n            Active Theme\r\n          </label>\r\n          <select\r\n            value={previewTheme || currentTheme}\r\n            onChange={(e) => handleThemeChange(e.target.value)}\r\n            className=\"w-full px-3 py-2 focus:outline-none themed-input\"\r\n            disabled={loading}\r\n          >\r\n            {themes.map((theme) => (\r\n              <option key={theme.meta.id} value={theme.meta.id}>\r\n                {theme.meta.name}{' '}\r\n                {theme.meta.author && theme.meta.author !== 'System' && `by ${theme.meta.author}`}\r\n                {isSystemTheme(theme.meta.id) && ' (System)'}\r\n                {previewTheme === theme.meta.id && ' (Preview)'}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {previewTheme && (\r\n            <p className=\"text-xs mt-2 text-themed-warning\">\r\n              Preview mode active. Select a theme to apply it permanently.\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h4 className=\"text-sm font-medium mb-3 text-themed-secondary\">\r\n            Installed Themes ({themes.length})\r\n          </h4>\r\n          <div className=\"space-y-2 max-h-64 overflow-y-auto\">\r\n            {themes.map((theme) => (\r\n              <div\r\n                key={theme.meta.id}\r\n                className=\"rounded p-3 flex items-center justify-between border-2 transition-colors themed-card\"\r\n                style={{\r\n                  borderColor:\r\n                    currentTheme === theme.meta.id && !previewTheme\r\n                      ? 'var(--theme-primary)'\r\n                      : previewTheme === theme.meta.id\r\n                        ? 'var(--theme-warning)'\r\n                        : 'transparent'\r\n                }}\r\n              >\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"font-medium text-themed-primary\">{theme.meta.name}</span>\r\n                    {theme.meta.isDark ? (\r\n                      <Moon className=\"w-3 h-3 text-themed-muted\" />\r\n                    ) : (\r\n                      <Sun className=\"w-3 h-3 text-themed-warning\" />\r\n                    )}\r\n                    {currentTheme === theme.meta.id && !previewTheme && (\r\n                      <span className=\"px-2 py-0.5 text-xs rounded themed-button-primary\">\r\n                        Active\r\n                      </span>\r\n                    )}\r\n                    {previewTheme === theme.meta.id && (\r\n                      <span\r\n                        className=\"px-2 py-0.5 text-xs rounded bg-themed-warning text-themed-primary\"\r\n                      >\r\n                        Preview\r\n                      </span>\r\n                    )}\r\n                    {isSystemTheme(theme.meta.id) && (\r\n                      <span\r\n                        className=\"px-2 py-0.5 text-xs rounded bg-themed-hover text-themed-muted\"\r\n                      >\r\n                        System\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {theme.meta.description && (\r\n                    <p className=\"text-xs mt-1 text-themed-muted\">{theme.meta.description}</p>\r\n                  )}\r\n                  <div className=\"flex items-center gap-3 mt-1\">\r\n                    {theme.meta.author && (\r\n                      <p className=\"text-xs text-themed-muted\">by {theme.meta.author}</p>\r\n                    )}\r\n                    {theme.meta.version && (\r\n                      <p className=\"text-xs text-themed-muted\">v{theme.meta.version}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <button\r\n                    onClick={() => exportTheme(theme)}\r\n                    className=\"p-2 transition-colors text-themed-muted\"\r\n                    title=\"Export theme\"\r\n                  >\r\n                    <Download className=\"w-4 h-4\" />\r\n                  </button>\r\n                  {currentTheme !== theme.meta.id && (\r\n                    <button\r\n                      onClick={() => handlePreview(theme.meta.id)}\r\n                      className=\"p-2 transition-colors\"\r\n                      style={{\r\n                        color:\r\n                          previewTheme === theme.meta.id\r\n                            ? 'var(--theme-warning)'\r\n                            : 'var(--theme-text-muted)'\r\n                      }}\r\n                      title={previewTheme === theme.meta.id ? 'Stop preview' : 'Preview theme'}\r\n                    >\r\n                      {previewTheme === theme.meta.id ? (\r\n                        <EyeOff className=\"w-4 h-4\" />\r\n                      ) : (\r\n                        <Eye className=\"w-4 h-4\" />\r\n                      )}\r\n                    </button>\r\n                  )}\r\n                  {currentTheme !== theme.meta.id && (\r\n                    <button\r\n                      onClick={() => handleThemeChange(theme.meta.id)}\r\n                      className=\"p-2 transition-colors text-themed-accent\"\r\n                      title=\"Apply theme\"\r\n                    >\r\n                      <Check className=\"w-4 h-4\" />\r\n                    </button>\r\n                  )}\r\n                  {!isSystemTheme(theme.meta.id) && isAuthenticated && (\r\n                    <button\r\n                      onClick={() => handleEditTheme(theme)}\r\n                      disabled={loading}\r\n                      className=\"p-2 transition-colors text-themed-secondary\"\r\n                      title=\"Edit theme\"\r\n                    >\r\n                      <Edit className=\"w-4 h-4\" />\r\n                    </button>\r\n                  )}\r\n                  {!isSystemTheme(theme.meta.id) && isAuthenticated && (\r\n                    <button\r\n                      onClick={() => handleDelete(theme.meta.id, theme.meta.name)}\r\n                      disabled={loading}\r\n                      className=\"p-2 transition-colors disabled:opacity-50 text-themed-error\"\r\n                      title=\"Delete theme\"\r\n                    >\r\n                      <Trash2 className=\"w-4 h-4\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {isAuthenticated && (\r\n          <>\r\n            <div className=\"mb-4\">\r\n              <h4 className=\"text-sm font-medium mb-3 text-themed-secondary\">\r\n                Upload Custom Theme\r\n              </h4>\r\n              <div\r\n                className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\r\n                  dragActive ? 'border-purple-500 bg-purple-900 bg-opacity-20' : ''\r\n                }`}\r\n                style={{\r\n                  borderColor: dragActive\r\n                    ? 'var(--theme-secondary)'\r\n                    : 'var(--theme-border-secondary)'\r\n                }}\r\n                onDragEnter={handleDrag}\r\n                onDragLeave={handleDrag}\r\n                onDragOver={handleDrag}\r\n                onDrop={handleDrop}\r\n              >\r\n                <Upload className=\"w-12 h-12 mx-auto mb-3 text-themed-muted\" />\r\n                <p className=\"mb-2 text-themed-secondary\">\r\n                  Drag and drop a theme file here, or click to browse\r\n                </p>\r\n                <p className=\"text-xs mb-3 text-themed-muted\">TOML format, max 1MB</p>\r\n                <input\r\n                  ref={fileInputRef}\r\n                  type=\"file\"\r\n                  accept=\".toml\"\r\n                  onChange={(e) => e.target.files?.[0] && handleFile(e.target.files[0])}\r\n                  className=\"hidden\"\r\n                />\r\n                <Button\r\n                  variant=\"filled\"\r\n                  color=\"purple\"\r\n                  onClick={() => fileInputRef.current?.click()}\r\n                  disabled={loading}\r\n                  loading={loading}\r\n                >\r\n                  Browse Files\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-center\">\r\n              <Button\r\n                variant=\"subtle\"\r\n                leftSection={<Download className=\"w-4 h-4\" />}\r\n                onClick={downloadSampleTheme}\r\n              >\r\n                Download Sample TOML Theme\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {!isAuthenticated && (\r\n          <Alert color=\"yellow\">\r\n            Authentication required to create, upload, or delete custom themes\r\n          </Alert>\r\n        )}\r\n\r\n        {uploadError && (\r\n          <Alert color=\"red\" withCloseButton onClose={() => setUploadError(null)}>\r\n            {uploadError}\r\n          </Alert>\r\n        )}\r\n\r\n        {uploadSuccess && (\r\n          <Alert color=\"green\" withCloseButton onClose={() => setUploadSuccess(null)}>\r\n            {uploadSuccess}\r\n          </Alert>\r\n        )}\r\n      </Card>\r\n\r\n      <Modal\r\n        opened={createModalOpen}\r\n        onClose={() => {\r\n          setCreateModalOpen(false);\r\n          setCreateColorEditingStarted({});\r\n        }}\r\n        title=\"Create Custom Theme\"\r\n        size=\"xl\"\r\n      >\r\n        <div className=\"space-y-6\">\r\n          {/* Theme Metadata */}\r\n          <div className=\"space-y-4\">\r\n            <h4 className=\"text-sm font-semibold flex items-center gap-2 text-themed-primary\">\r\n              <Info className=\"w-4 h-4\" />\r\n              Theme Information\r\n            </h4>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n                  Theme Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTheme.name}\r\n                  onChange={(e) => setNewTheme({ ...newTheme, name: e.target.value })}\r\n                  placeholder=\"My Custom Theme\"\r\n                  className=\"w-full px-3 py-2 focus:outline-none themed-input\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n                  Author\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTheme.author}\r\n                  onChange={(e) => setNewTheme({ ...newTheme, author: e.target.value })}\r\n                  placeholder=\"Your Name\"\r\n                  className=\"w-full px-3 py-2 focus:outline-none themed-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={newTheme.description}\r\n                onChange={(e) => setNewTheme({ ...newTheme, description: e.target.value })}\r\n                placeholder=\"A beautiful custom theme\"\r\n                className=\"w-full px-3 py-2 rounded focus:outline-none themed-input\"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <label className=\"flex items-center gap-2 cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={newTheme.isDark}\r\n                  onChange={(e) => setNewTheme({ ...newTheme, isDark: e.target.checked })}\r\n                  className=\"rounded\"\r\n                />\r\n                <span className=\"text-sm text-themed-secondary\">Dark Theme</span>\r\n              </label>\r\n              <button\r\n                onClick={() => loadPresetColors('dark')}\r\n                className=\"px-3 py-1 text-xs rounded-lg flex items-center gap-1 bg-themed-tertiary text-themed-secondary\"\r\n              >\r\n                <Moon className=\"w-3 h-3\" />\r\n                Load Dark Preset\r\n              </button>\r\n              <button\r\n                onClick={() => loadPresetColors('light')}\r\n                className=\"px-3 py-1 text-xs rounded-lg flex items-center gap-1 bg-themed-tertiary text-themed-secondary\"\r\n              >\r\n                <Sun className=\"w-3 h-3\" />\r\n                Load Light Preset\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-themed-muted\" />\r\n            <input\r\n              type=\"text\"\r\n              value={createSearchQuery}\r\n              onChange={(e) => setCreateSearchQuery(e.target.value)}\r\n              placeholder=\"Search colors... (e.g., 'button', 'background', 'text')\"\r\n              className=\"w-full pl-10 pr-10 py-2 themed-input\"\r\n            />\r\n            {createSearchQuery && (\r\n              <button\r\n                onClick={() => setCreateSearchQuery('')}\r\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-themed-muted hover:text-themed-primary\"\r\n              >\r\n                <X className=\"w-4 h-4\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Color Groups */}\r\n          <div className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n            {filterColorGroups(colorGroups, createSearchQuery).map((group) => {\r\n              const Icon = group.icon;\r\n              const isExpanded = expandedGroups.includes(group.name) || createSearchQuery.trim() !== '';\r\n\r\n              return (\r\n                <div\r\n                  key={group.name}\r\n                  className=\"border themed-card rounded-lg\"\r\n                >\r\n                  <button\r\n                    onClick={() => toggleGroup(group.name)}\r\n                    className=\"w-full px-4 py-3 flex items-center justify-between hover:bg-opacity-50\"\r\n                    style={{\r\n                      backgroundColor: isExpanded ? 'var(--theme-bg-tertiary)' : 'transparent'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <Icon className=\"w-4 h-4 text-themed-accent\" />\r\n                      <div className=\"text-left\">\r\n                        <h5 className=\"text-sm font-semibold capitalize text-themed-primary\">\r\n                          {group.name.replace(/([A-Z])/g, ' $1').trim()}\r\n                        </h5>\r\n                        <p className=\"text-xs text-themed-muted\">{group.description}</p>\r\n                      </div>\r\n                    </div>\r\n                    {isExpanded ? (\r\n                      <ChevronDown className=\"w-4 h-4\" />\r\n                    ) : (\r\n                      <ChevronRight className=\"w-4 h-4\" />\r\n                    )}\r\n                  </button>\r\n\r\n                  {isExpanded && (\r\n                    <div\r\n                      className=\"p-4 border-t themed-card space-y-4\"\r\n                    >\r\n                      {group.colors.map((color) => (\r\n                        <div key={color.key} className=\"space-y-2\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex-1\">\r\n                              <label className=\"block text-sm font-medium text-themed-primary\">\r\n                                {color.label}\r\n                              </label>\r\n                              <p className=\"text-xs text-themed-muted\">{color.description}</p>\r\n                              <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                                {color.affects.map((item, idx) => (\r\n                                  <span\r\n                                    key={idx}\r\n                                    className=\"text-xs px-1.5 py-0.5 rounded\"\r\n                                    style={{\r\n                                      backgroundColor: 'var(--theme-bg-hover)',\r\n                                      color: 'var(--theme-text-secondary)'\r\n                                    }}\r\n                                  >\r\n                                    {item}\r\n                                  </span>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              {(() => {\r\n                                const { hex, alpha } = parseColorValue(newTheme[color.key] || '#000000');\r\n                                return (\r\n                                  <>\r\n                                    <div className=\"relative\">\r\n                                      <input\r\n                                        type=\"color\"\r\n                                        value={hex}\r\n                                        onMouseDown={() => handleColorStart(color.key)}\r\n                                        onFocus={() => handleColorStart(color.key)}\r\n                                        onChange={(e) => {\r\n                                          const currentAlpha = parseColorValue(newTheme[color.key]).alpha;\r\n                                          updateColorWithAlpha(color.key, e.target.value, currentAlpha, true);\r\n                                        }}\r\n                                        className=\"w-12 h-8 rounded cursor-pointer\"\r\n                                        style={{ backgroundColor: newTheme[color.key] }}\r\n                                      />\r\n                                    </div>\r\n                                    {color.supportsAlpha && (\r\n                                      <div className=\"flex items-center gap-1\">\r\n                                        <Percent className=\"w-3 h-3 text-themed-muted\" />\r\n                                        <input\r\n                                          type=\"range\"\r\n                                          min=\"0\"\r\n                                          max=\"100\"\r\n                                          value={Math.round(alpha * 100)}\r\n                                          onChange={(e) => {\r\n                                            const newAlpha = parseInt(e.target.value) / 100;\r\n                                            updateColorWithAlpha(color.key, hex, newAlpha, true);\r\n                                          }}\r\n                                          className=\"w-16\"\r\n                                          title={`Opacity: ${Math.round(alpha * 100)}%`}\r\n                                        />\r\n                                        <span className=\"text-xs text-themed-muted w-8\">\r\n                                          {Math.round(alpha * 100)}%\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      value={newTheme[color.key]}\r\n                                      onFocus={() => handleColorStart(color.key)}\r\n                                      onChange={(e) => handleColorChange(color.key, e.target.value)}\r\n                                      className=\"w-24 px-2 py-1 text-xs rounded font-mono themed-input\"\r\n                                    />\r\n                                    <button\r\n                                      onClick={() => copyColor(newTheme[color.key])}\r\n                                      className=\"p-1 rounded-lg hover:bg-opacity-50 bg-themed-hover\"\r\n                                      title=\"Copy color\"\r\n                                    >\r\n                                      {copiedColor === newTheme[color.key] ? (\r\n                                        <Check\r\n                                          className=\"w-3 h-3\"\r\n                                          style={{ color: 'var(--theme-success)' }}\r\n                                        />\r\n                                      ) : (\r\n                                        <Copy className=\"w-3 h-3 text-themed-muted\" />\r\n                                      )}\r\n                                    </button>\r\n                                    {getCreateColorHistory(color.key) && (\r\n                                      <button\r\n                                        onClick={() => restoreCreatePreviousColor(color.key)}\r\n                                        className=\"p-1 rounded-lg hover:bg-opacity-50 bg-themed-hover\"\r\n                                        title={`Restore previous color: ${getCreateColorHistory(color.key)}`}\r\n                                      >\r\n                                        <RotateCcw className=\"w-3 h-3 text-themed-muted\" />\r\n                                      </button>\r\n                                    )}\r\n                                  </>\r\n                                );\r\n                              })()}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Custom CSS */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n              Custom CSS (Optional)\r\n            </label>\r\n            <textarea\r\n              value={newTheme.customCSS}\r\n              onChange={(e) => setNewTheme({ ...newTheme, customCSS: e.target.value })}\r\n              placeholder=\"/* Add any custom CSS here */\"\r\n              rows={4}\r\n              className=\"w-full px-3 py-2 rounded font-mono text-xs focus:outline-none themed-input\"\r\n            />\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          <div\r\n            className=\"flex justify-end space-x-3 pt-4 border-t\"\r\n            style={{ borderColor: 'var(--theme-border-primary)' }}\r\n          >\r\n            <Button variant=\"default\" onClick={() => setCreateModalOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"filled\"\r\n              leftSection={<Save className=\"w-4 h-4\" />}\r\n              onClick={handleCreateTheme}\r\n              disabled={!newTheme.name || !isAuthenticated}\r\n              className=\"themed-button-primary\"\r\n            >\r\n              Create Theme\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        opened={editModalOpen}\r\n        onClose={() => {\r\n          setEditModalOpen(false);\r\n          setEditingTheme(null);\r\n          setEditedTheme({});\r\n          setColorEditingStarted({});\r\n        }}\r\n        title={`Edit Theme: ${editingTheme?.meta.name || ''}`}\r\n        size=\"xl\"\r\n      >\r\n        <div className=\"space-y-6\">\r\n          {/* Theme Metadata */}\r\n          <div className=\"space-y-4\">\r\n            <h4 className=\"text-sm font-semibold flex items-center gap-2 text-themed-primary\">\r\n              <Info className=\"w-4 h-4\" />\r\n              Theme Information\r\n            </h4>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n                  Theme Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editedTheme.name || ''}\r\n                  onChange={(e) => setEditedTheme({ ...editedTheme, name: e.target.value })}\r\n                  placeholder=\"My Custom Theme\"\r\n                  className=\"w-full px-3 py-2 focus:outline-none themed-input\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n                  Author\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editedTheme.author || ''}\r\n                  onChange={(e) => setEditedTheme({ ...editedTheme, author: e.target.value })}\r\n                  placeholder=\"Your Name\"\r\n                  className=\"w-full px-3 py-2 focus:outline-none themed-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={editedTheme.description || ''}\r\n                onChange={(e) => setEditedTheme({ ...editedTheme, description: e.target.value })}\r\n                placeholder=\"A beautiful custom theme\"\r\n                className=\"w-full px-3 py-2 rounded focus:outline-none themed-input\"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <label className=\"flex items-center gap-2 cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={editedTheme.isDark || false}\r\n                  onChange={(e) => setEditedTheme({ ...editedTheme, isDark: e.target.checked })}\r\n                  className=\"rounded\"\r\n                />\r\n                <span className=\"text-sm text-themed-secondary\">Dark Theme</span>\r\n              </label>\r\n              <span className=\"text-xs text-themed-muted\">Theme ID: {editingTheme?.meta.id}</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-themed-muted\" />\r\n            <input\r\n              type=\"text\"\r\n              value={editSearchQuery}\r\n              onChange={(e) => setEditSearchQuery(e.target.value)}\r\n              placeholder=\"Search colors... (e.g., 'button', 'background', 'text')\"\r\n              className=\"w-full pl-10 pr-10 py-2 themed-input\"\r\n            />\r\n            {editSearchQuery && (\r\n              <button\r\n                onClick={() => setEditSearchQuery('')}\r\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-themed-muted hover:text-themed-primary\"\r\n              >\r\n                <X className=\"w-4 h-4\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Color Groups */}\r\n          <div className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n            {filterColorGroups(colorGroups, editSearchQuery).map((group) => {\r\n              const Icon = group.icon;\r\n              const isExpanded = expandedGroups.includes(group.name) || editSearchQuery.trim() !== '';\r\n\r\n              return (\r\n                <div\r\n                  key={group.name}\r\n                  className=\"border themed-card rounded-lg\"\r\n                >\r\n                  <button\r\n                    onClick={() => toggleGroup(group.name)}\r\n                    className=\"w-full px-4 py-3 flex items-center justify-between hover:bg-opacity-50\"\r\n                    style={{\r\n                      backgroundColor: isExpanded ? 'var(--theme-bg-tertiary)' : 'transparent'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <Icon className=\"w-4 h-4 text-themed-accent\" />\r\n                      <div className=\"text-left\">\r\n                        <h5 className=\"text-sm font-semibold capitalize text-themed-primary\">\r\n                          {group.name.replace(/([A-Z])/g, ' $1').trim()}\r\n                        </h5>\r\n                        <p className=\"text-xs text-themed-muted\">{group.description}</p>\r\n                      </div>\r\n                    </div>\r\n                    {isExpanded ? (\r\n                      <ChevronDown className=\"w-4 h-4\" />\r\n                    ) : (\r\n                      <ChevronRight className=\"w-4 h-4\" />\r\n                    )}\r\n                  </button>\r\n\r\n                  {isExpanded && (\r\n                    <div\r\n                      className=\"p-4 border-t themed-card space-y-4\"\r\n                    >\r\n                      {group.colors.map((color) => (\r\n                        <div key={color.key} className=\"space-y-2\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex-1\">\r\n                              <label className=\"block text-sm font-medium text-themed-primary\">\r\n                                {color.label}\r\n                              </label>\r\n                              <p className=\"text-xs text-themed-muted\">{color.description}</p>\r\n                              <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                                {color.affects.map((item, idx) => (\r\n                                  <span\r\n                                    key={idx}\r\n                                    className=\"text-xs px-1.5 py-0.5 rounded\"\r\n                                    style={{\r\n                                      backgroundColor: 'var(--theme-bg-hover)',\r\n                                      color: 'var(--theme-text-secondary)'\r\n                                    }}\r\n                                  >\r\n                                    {item}\r\n                                  </span>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              {(() => {\r\n                                const { hex, alpha } = parseColorValue(editedTheme[color.key] || '#000000');\r\n                                return (\r\n                                  <>\r\n                                    <div className=\"relative\">\r\n                                      <input\r\n                                        type=\"color\"\r\n                                        value={hex}\r\n                                        onMouseDown={() => handleEditColorStart(color.key)}\r\n                                        onFocus={() => handleEditColorStart(color.key)}\r\n                                        onChange={(e) => {\r\n                                          const currentAlpha = parseColorValue(editedTheme[color.key] || '#000000').alpha;\r\n                                          updateColorWithAlpha(color.key, e.target.value, currentAlpha, false);\r\n                                        }}\r\n                                        className=\"w-12 h-8 rounded cursor-pointer\"\r\n                                        style={{ backgroundColor: editedTheme[color.key] || '#000000' }}\r\n                                      />\r\n                                    </div>\r\n                                    {color.supportsAlpha && (\r\n                                      <div className=\"flex items-center gap-1\">\r\n                                        <Percent className=\"w-3 h-3 text-themed-muted\" />\r\n                                        <input\r\n                                          type=\"range\"\r\n                                          min=\"0\"\r\n                                          max=\"100\"\r\n                                          value={Math.round(alpha * 100)}\r\n                                          onChange={(e) => {\r\n                                            const newAlpha = parseInt(e.target.value) / 100;\r\n                                            updateColorWithAlpha(color.key, hex, newAlpha, false);\r\n                                          }}\r\n                                          className=\"w-16\"\r\n                                          title={`Opacity: ${Math.round(alpha * 100)}%`}\r\n                                        />\r\n                                        <span className=\"text-xs text-themed-muted w-8\">\r\n                                          {Math.round(alpha * 100)}%\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      value={editedTheme[color.key] || ''}\r\n                                      onFocus={() => handleEditColorStart(color.key)}\r\n                                      onChange={(e) => handleEditColorChange(color.key, e.target.value)}\r\n                                      className=\"w-24 px-2 py-1 text-xs rounded font-mono themed-input\"\r\n                                      placeholder={color.key}\r\n                                    />\r\n                                    <button\r\n                                      onClick={() => copyColor(editedTheme[color.key] || '')}\r\n                                      className=\"p-1 rounded-lg hover:bg-opacity-50 bg-themed-hover\"\r\n                                      title=\"Copy color\"\r\n                                    >\r\n                                      {copiedColor === editedTheme[color.key] ? (\r\n                                        <Check\r\n                                          className=\"w-3 h-3\"\r\n                                          style={{ color: 'var(--theme-success)' }}\r\n                                        />\r\n                                      ) : (\r\n                                        <Copy className=\"w-3 h-3 text-themed-muted\" />\r\n                                      )}\r\n                                    </button>\r\n                                    {(() => {\r\n                                      const historyColor = getEditColorHistory(color.key);\r\n                                      if (!historyColor) return null;\r\n\r\n                                      return (\r\n                                        <button\r\n                                          onClick={() => restorePreviousColor(color.key)}\r\n                                          className=\"p-1 rounded-lg hover:bg-opacity-50 bg-themed-hover\"\r\n                                          title={`Restore previous color: ${historyColor}`}\r\n                                        >\r\n                                          <RotateCcw className=\"w-3 h-3 text-themed-muted\" />\r\n                                        </button>\r\n                                      );\r\n                                    })()}\r\n                                  </>\r\n                                );\r\n                              })()}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Custom CSS */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1 text-themed-secondary\">\r\n              Custom CSS (Optional)\r\n            </label>\r\n            <textarea\r\n              value={editedTheme.customCSS || ''}\r\n              onChange={(e) => setEditedTheme({ ...editedTheme, customCSS: e.target.value })}\r\n              placeholder=\"/* Add any custom CSS here */\"\r\n              rows={4}\r\n              className=\"w-full px-3 py-2 rounded font-mono text-xs focus:outline-none themed-input\"\r\n            />\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          <div\r\n            className=\"flex justify-end space-x-3 pt-4 border-t\"\r\n            style={{ borderColor: 'var(--theme-border-primary)' }}\r\n          >\r\n            <Button\r\n              variant=\"default\"\r\n              onClick={() => {\r\n                setEditModalOpen(false);\r\n                setEditingTheme(null);\r\n                setEditedTheme({});\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"filled\"\r\n              leftSection={<Save className=\"w-4 h-4\" />}\r\n              onClick={handleSaveEditedTheme}\r\n              disabled={!editedTheme.name || !isAuthenticated || loading}\r\n              className=\"themed-button-primary\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeManager;\r\n","import React from 'react';\r\nimport { AlertCircle, CheckCircle } from 'lucide-react';\r\nimport { Alert } from '../ui/Alert';\r\n\r\ninterface AlertItem {\r\n  id: number;\r\n  message: string;\r\n}\r\n\r\ninterface AlertsManagerProps {\r\n  alerts: {\r\n    errors?: AlertItem[];\r\n    success?: string | null;\r\n  };\r\n  onClearError: (id: number) => void;\r\n  onClearSuccess?: () => void;\r\n}\r\n\r\nconst AlertsManager: React.FC<AlertsManagerProps> = ({ alerts, onClearError, onClearSuccess }) => {\r\n  if (!alerts || (!alerts.errors?.length && !alerts.success)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {alerts.errors?.map((error) => (\r\n        <Alert\r\n          key={error.id}\r\n          color=\"red\"\r\n          icon={<AlertCircle className=\"w-5 h-5\" />}\r\n          withCloseButton\r\n          onClose={() => onClearError(error.id)}\r\n        >\r\n          {error.message}\r\n        </Alert>\r\n      ))}\r\n\r\n      {alerts.success && (\r\n        <Alert\r\n          color=\"green\"\r\n          icon={<CheckCircle className=\"w-5 h-5\" />}\r\n          withCloseButton={!!onClearSuccess}\r\n          onClose={onClearSuccess}\r\n        >\r\n          {alerts.success}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertsManager;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Download, Activity, Database, Clock, TrendingUp, Link, Copy, CheckCircle, Lock, Unlock } from 'lucide-react';\r\nimport { Card } from '@components/ui/Card';\r\nimport { Button } from '@components/ui/Button';\r\nimport { Alert } from '@components/ui/Alert';\r\nimport ApiService from '@services/api.service';\r\nimport type { ClientStat, ServiceStat, CacheInfo, DashboardStats } from '../../types';\r\n\r\ninterface DataExportManagerProps {\r\n  isAuthenticated: boolean;\r\n  mockMode: boolean;\r\n  onError?: (message: string) => void;\r\n  onSuccess?: (message: string) => void;\r\n}\r\n\r\ntype ExportFormat = 'json' | 'csv' | 'prometheus' | 'influxdb';\r\ntype DataType = 'clients' | 'services' | 'cache' | 'dashboard' | 'downloads';\r\n\r\ninterface ExportOption {\r\n  type: DataType;\r\n  label: string;\r\n  description: string;\r\n  formats: ExportFormat[];\r\n  icon: React.ComponentType<any>;\r\n}\r\n\r\nconst exportOptions: ExportOption[] = [\r\n  {\r\n    type: 'clients',\r\n    label: 'Client Statistics',\r\n    description: 'Export client usage data including bandwidth and cache hits',\r\n    formats: ['json', 'csv', 'prometheus'],\r\n    icon: Database\r\n  },\r\n  {\r\n    type: 'services',\r\n    label: 'Service Statistics',\r\n    description: 'Export service-level metrics (Steam, Epic, etc.)',\r\n    formats: ['json', 'csv', 'prometheus', 'influxdb'],\r\n    icon: Activity\r\n  },\r\n  {\r\n    type: 'cache',\r\n    label: 'Cache Information',\r\n    description: 'Export current cache usage and storage metrics',\r\n    formats: ['json', 'prometheus'],\r\n    icon: Database\r\n  },\r\n  {\r\n    type: 'dashboard',\r\n    label: 'Dashboard Statistics',\r\n    description: 'Export aggregated dashboard metrics',\r\n    formats: ['json', 'prometheus', 'influxdb'],\r\n    icon: TrendingUp\r\n  },\r\n  {\r\n    type: 'downloads',\r\n    label: 'Download History',\r\n    description: 'Export recent download history (last 1000 entries)',\r\n    formats: ['json', 'csv'],\r\n    icon: Clock\r\n  }\r\n];\r\n\r\nconst DataExportManager: React.FC<DataExportManagerProps> = ({\r\n  isAuthenticated: _isAuthenticated,\r\n  mockMode: _mockMode,\r\n  onError,\r\n  onSuccess\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedType, setSelectedType] = useState<DataType | null>(null);\r\n  const [selectedFormat, setSelectedFormat] = useState<ExportFormat>('json');\r\n  const [loadingProgress, setLoadingProgress] = useState<{ [key: string]: number }>({});\r\n  const [copiedEndpoint, setCopiedEndpoint] = useState<string | null>(null);\r\n  const [metricsSecured, setMetricsSecured] = useState<boolean | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Check metrics security status\r\n    fetch('/api/metrics/status')\r\n      .then(res => res.json())\r\n      .then(data => setMetricsSecured(data.requiresAuthentication))\r\n      .catch(() => setMetricsSecured(false));\r\n  }, []);\r\n\r\n  const convertToCSV = (data: any[]): string => {\r\n    if (!data || data.length === 0) return '';\r\n\r\n    const headers = Object.keys(data[0]);\r\n    const csvHeaders = headers.join(',');\r\n    \r\n    const csvRows = data.map(row => {\r\n      return headers.map(header => {\r\n        const value = row[header];\r\n        if (value === null || value === undefined) return '';\r\n        if (typeof value === 'string' && value.includes(',')) {\r\n          return `\"${value.replace(/\"/g, '\"\"')}\"`;\r\n        }\r\n        return value;\r\n      }).join(',');\r\n    });\r\n\r\n    return [csvHeaders, ...csvRows].join('\\n');\r\n  };\r\n\r\n  const convertToPrometheus = (data: any, type: DataType): string => {\r\n    const timestamp = Date.now();\r\n    let metrics: string[] = [];\r\n\r\n    switch (type) {\r\n      case 'clients':\r\n        const clients = data as ClientStat[];\r\n        clients.forEach(client => {\r\n          metrics.push(`# HELP lancache_client_cache_hit_bytes Total cache hit bytes for client`);\r\n          metrics.push(`# TYPE lancache_client_cache_hit_bytes counter`);\r\n          metrics.push(`lancache_client_cache_hit_bytes{client=\"${client.clientIp}\"} ${client.totalCacheHitBytes} ${timestamp}`);\r\n          metrics.push(`lancache_client_cache_miss_bytes{client=\"${client.clientIp}\"} ${client.totalCacheMissBytes} ${timestamp}`);\r\n          metrics.push(`lancache_client_download_count{client=\"${client.clientIp}\"} ${client.totalDownloads} ${timestamp}`);\r\n        });\r\n        break;\r\n      \r\n      case 'services':\r\n        const services = data as ServiceStat[];\r\n        services.forEach(service => {\r\n          metrics.push(`# HELP lancache_service_cache_hit_bytes Total cache hit bytes for service`);\r\n          metrics.push(`# TYPE lancache_service_cache_hit_bytes counter`);\r\n          metrics.push(`lancache_service_cache_hit_bytes{service=\"${service.service}\"} ${service.totalCacheHitBytes} ${timestamp}`);\r\n          metrics.push(`lancache_service_cache_miss_bytes{service=\"${service.service}\"} ${service.totalCacheMissBytes} ${timestamp}`);\r\n          metrics.push(`lancache_service_download_count{service=\"${service.service}\"} ${service.totalDownloads} ${timestamp}`);\r\n          metrics.push(`lancache_service_hit_ratio{service=\"${service.service}\"} ${service.cacheHitPercent / 100} ${timestamp}`);\r\n        });\r\n        break;\r\n\r\n      case 'cache':\r\n        const cache = data as CacheInfo;\r\n        metrics.push(`# HELP lancache_cache_total_bytes Total cache size in bytes`);\r\n        metrics.push(`# TYPE lancache_cache_total_bytes gauge`);\r\n        metrics.push(`lancache_cache_total_bytes ${cache.totalCacheSize} ${timestamp}`);\r\n        metrics.push(`lancache_cache_used_bytes ${cache.usedCacheSize} ${timestamp}`);\r\n        metrics.push(`lancache_cache_free_bytes ${cache.freeCacheSize} ${timestamp}`);\r\n        metrics.push(`lancache_cache_usage_percent ${cache.usagePercent / 100} ${timestamp}`);\r\n        metrics.push(`lancache_cache_file_count ${cache.totalFiles} ${timestamp}`);\r\n        break;\r\n\r\n      case 'dashboard':\r\n        const stats = data as DashboardStats;\r\n        metrics.push(`# HELP lancache_bandwidth_saved_bytes Total bandwidth saved`);\r\n        metrics.push(`# TYPE lancache_bandwidth_saved_bytes counter`);\r\n        metrics.push(`lancache_bandwidth_saved_bytes ${stats.totalBandwidthSaved} ${timestamp}`);\r\n        metrics.push(`lancache_cache_added_bytes ${stats.totalAddedToCache} ${timestamp}`);\r\n        metrics.push(`lancache_served_bytes ${stats.totalServed} ${timestamp}`);\r\n        metrics.push(`lancache_hit_ratio ${stats.cacheHitRatio / 100} ${timestamp}`);\r\n        metrics.push(`lancache_active_downloads ${stats.activeDownloads} ${timestamp}`);\r\n        metrics.push(`lancache_unique_clients ${stats.uniqueClients} ${timestamp}`);\r\n        break;\r\n    }\r\n\r\n    return metrics.join('\\n');\r\n  };\r\n\r\n  const convertToInfluxDB = (data: any, type: DataType): string => {\r\n    const timestamp = Date.now() * 1000000; // InfluxDB uses nanoseconds\r\n    let lines: string[] = [];\r\n\r\n    switch (type) {\r\n      case 'services':\r\n        const services = data as ServiceStat[];\r\n        services.forEach(service => {\r\n          lines.push(\r\n            `lancache,service=${service.service} ` +\r\n            `cache_hit_bytes=${service.totalCacheHitBytes}i,` +\r\n            `cache_miss_bytes=${service.totalCacheMissBytes}i,` +\r\n            `total_downloads=${service.totalDownloads}i,` +\r\n            `hit_ratio=${service.cacheHitPercent / 100} ${timestamp}`\r\n          );\r\n        });\r\n        break;\r\n\r\n      case 'dashboard':\r\n        const stats = data as DashboardStats;\r\n        lines.push(\r\n          `lancache_stats ` +\r\n          `bandwidth_saved=${stats.totalBandwidthSaved}i,` +\r\n          `cache_added=${stats.totalAddedToCache}i,` +\r\n          `total_served=${stats.totalServed}i,` +\r\n          `hit_ratio=${stats.cacheHitRatio / 100},` +\r\n          `active_downloads=${stats.activeDownloads}i,` +\r\n          `unique_clients=${stats.uniqueClients}i ${timestamp}`\r\n        );\r\n        break;\r\n    }\r\n\r\n    return lines.join('\\n');\r\n  };\r\n\r\n  const simulateProgress = (type: DataType) => {\r\n    let progress = 0;\r\n    const interval = setInterval(() => {\r\n      progress += Math.random() * 30;\r\n      if (progress >= 95) {\r\n        progress = 95;\r\n        clearInterval(interval);\r\n      }\r\n      setLoadingProgress(prev => ({ ...prev, [type]: progress }));\r\n    }, 200);\r\n    return interval;\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    if (!selectedType) {\r\n      onError?.('Please select data to export');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setLoadingProgress({ [selectedType]: 0 });\r\n    const progressInterval = simulateProgress(selectedType);\r\n    \r\n    try {\r\n      let data: any;\r\n      let filename: string;\r\n      let mimeType: string;\r\n      let content: string;\r\n\r\n      // Fetch the data based on type\r\n      switch (selectedType) {\r\n        case 'clients':\r\n          data = await ApiService.getClientStats();\r\n          break;\r\n        case 'services':\r\n          data = await ApiService.getServiceStats();\r\n          break;\r\n        case 'cache':\r\n          data = await ApiService.getCacheInfo();\r\n          break;\r\n        case 'dashboard':\r\n          data = await ApiService.getDashboardStats();\r\n          break;\r\n        case 'downloads':\r\n          data = await ApiService.getLatestDownloads(undefined, 1000);\r\n          break;\r\n      }\r\n\r\n      // Convert data based on format\r\n      switch (selectedFormat) {\r\n        case 'csv':\r\n          content = convertToCSV(Array.isArray(data) ? data : [data]);\r\n          mimeType = 'text/csv';\r\n          filename = `lancache_${selectedType}_${new Date().toISOString().split('T')[0]}.csv`;\r\n          break;\r\n        \r\n        case 'prometheus':\r\n          content = convertToPrometheus(data, selectedType);\r\n          mimeType = 'text/plain';\r\n          filename = `lancache_${selectedType}_metrics.txt`;\r\n          break;\r\n        \r\n        case 'influxdb':\r\n          content = convertToInfluxDB(data, selectedType);\r\n          mimeType = 'text/plain';\r\n          filename = `lancache_${selectedType}_influx.txt`;\r\n          break;\r\n        \r\n        case 'json':\r\n        default:\r\n          content = JSON.stringify(data, null, 2);\r\n          mimeType = 'application/json';\r\n          filename = `lancache_${selectedType}_${new Date().toISOString().split('T')[0]}.json`;\r\n          break;\r\n      }\r\n\r\n      // Create download\r\n      const blob = new Blob([content], { type: mimeType });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n\r\n      clearInterval(progressInterval);\r\n      setLoadingProgress({ [selectedType]: 100 });\r\n      setTimeout(() => setLoadingProgress({}), 500);\r\n      \r\n      onSuccess?.(`Exported ${selectedType} data as ${selectedFormat.toUpperCase()}`);\r\n    } catch (error: any) {\r\n      clearInterval(progressInterval);\r\n      setLoadingProgress({});\r\n      onError?.(error.message || 'Failed to export data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = (text: string, endpoint: string) => {\r\n    navigator.clipboard.writeText(text);\r\n    setCopiedEndpoint(endpoint);\r\n    setTimeout(() => setCopiedEndpoint(null), 2000);\r\n  };\r\n\r\n  const apiBaseUrl = window.location.origin;\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Live API Endpoints for Grafana */}\r\n      <Card>\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Link className=\"w-5 h-5 text-themed-accent\" />\r\n            <h3 className=\"text-lg font-semibold text-themed-primary\">Live API Endpoints for Grafana</h3>\r\n          </div>\r\n          {metricsSecured !== null && (\r\n            <div className={`flex items-center space-x-1 px-3 py-1 rounded-full text-xs font-medium border ${\r\n              metricsSecured\r\n                ? 'access-indicator-secured'\r\n                : 'access-indicator-public'\r\n            }`}>\r\n              {metricsSecured ? (\r\n                <>\r\n                  <Lock className=\"w-3 h-3\" />\r\n                  <span>API Key Required</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Unlock className=\"w-3 h-3\" />\r\n                  <span>Public Access</span>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <p className=\"text-themed-muted text-sm mb-4\">\r\n          {metricsSecured \r\n            ? 'These endpoints provide real-time metrics with API key authentication. Configure your API key in Grafana or Prometheus.'\r\n            : 'These endpoints provide real-time metrics without authentication. Use them directly in Grafana or Prometheus.'}\r\n        </p>\r\n\r\n        <div className=\"space-y-3\">\r\n          <div className=\"p-3 rounded-lg border themed-card\">\r\n            <div className=\"flex items-center justify-between mb-1\">\r\n              <span className=\"text-sm font-medium text-themed-primary\">Prometheus Metrics</span>\r\n              <Button\r\n                size=\"xs\"\r\n                variant=\"default\"\r\n                onClick={() => copyToClipboard(`${apiBaseUrl}/api/metrics`, 'prometheus')}\r\n                leftSection={copiedEndpoint === 'prometheus' ? <CheckCircle className=\"w-3 h-3\" /> : <Copy className=\"w-3 h-3\" />}\r\n              >\r\n                {copiedEndpoint === 'prometheus' ? 'Copied!' : 'Copy'}\r\n              </Button>\r\n            </div>\r\n            <code className=\"text-xs text-themed-muted block break-all\">{apiBaseUrl}/api/metrics</code>\r\n            <p className=\"text-xs text-themed-muted mt-1\">OpenMetrics format for Prometheus scraping</p>\r\n          </div>\r\n\r\n          <div className=\"p-3 rounded-lg border themed-card\">\r\n            <div className=\"flex items-center justify-between mb-1\">\r\n              <span className=\"text-sm font-medium text-themed-primary\">JSON Metrics</span>\r\n              <Button\r\n                size=\"xs\"\r\n                variant=\"default\"\r\n                onClick={() => copyToClipboard(`${apiBaseUrl}/api/metrics/json`, 'json-api')}\r\n                leftSection={copiedEndpoint === 'json-api' ? <CheckCircle className=\"w-3 h-3\" /> : <Copy className=\"w-3 h-3\" />}\r\n              >\r\n                {copiedEndpoint === 'json-api' ? 'Copied!' : 'Copy'}\r\n              </Button>\r\n            </div>\r\n            <code className=\"text-xs text-themed-muted block break-all\">{apiBaseUrl}/api/metrics/json</code>\r\n            <p className=\"text-xs text-themed-muted mt-1\">JSON format for direct Grafana integration</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4\">\r\n          <Alert color=\"blue\">\r\n            <p className=\"text-sm\">\r\n              <strong>Security Options:</strong> By default, these endpoints are public. \r\n              To require API key authentication, set <code>RequireAuthForMetrics: true</code> in your config.\r\n              Then add header <code>X-Api-Key: your-key</code> to Grafana/Prometheus.\r\n            </p>\r\n          </Alert>\r\n        </div>\r\n        \r\n        <div className=\"mt-2\">\r\n          <Alert color=\"green\">\r\n            <p className=\"text-sm\">\r\n              <strong>Live Updates:</strong> Configure Grafana to poll every 10-30 seconds for real-time monitoring.\r\n              Works with both Prometheus and JSON datasource plugins.\r\n            </p>\r\n          </Alert>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Data Export */}\r\n      <Card>\r\n      <div className=\"flex items-center space-x-2 mb-4\">\r\n        <Download className=\"w-5 h-5 text-themed-accent\" />\r\n        <h3 className=\"text-lg font-semibold text-themed-primary\">Data Export</h3>\r\n      </div>\r\n      \r\n      <p className=\"text-themed-muted text-sm mb-4\">\r\n        Export cache statistics in various formats for analysis and monitoring\r\n      </p>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-themed-primary mb-2\">\r\n            Select Data Type\r\n          </label>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n            {exportOptions.map(option => {\r\n              const Icon = option.icon;\r\n              return (\r\n                <button\r\n                  key={option.type}\r\n                  onClick={() => {\r\n                    setSelectedType(option.type);\r\n                    // Reset format if not supported\r\n                    if (!option.formats.includes(selectedFormat)) {\r\n                      setSelectedFormat(option.formats[0]);\r\n                    }\r\n                  }}\r\n                  className={`p-3 rounded-lg border-2 transition-all text-left relative overflow-hidden themed-card ${\r\n                    selectedType === option.type \r\n                      ? 'bg-themed-tertiary' \r\n                      : 'hover:bg-themed-hover'\r\n                  }`}\r\n                  style={{\r\n                    borderColor: selectedType === option.type \r\n                      ? 'var(--theme-primary)' \r\n                      : 'var(--theme-card-border)'\r\n                  }}\r\n                >\r\n                  <div className=\"flex items-start space-x-3 relative z-10\">\r\n                    <Icon className=\"w-5 h-5 text-themed-accent mt-0.5\" />\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"font-medium text-themed-primary\">{option.label}</div>\r\n                      <div className=\"text-xs text-themed-muted mt-1\">{option.description}</div>\r\n                    </div>\r\n                  </div>\r\n                  {loadingProgress[option.type] !== undefined && (\r\n                    <div className=\"absolute bottom-0 left-0 w-full h-1 bg-themed-secondary\">\r\n                      <div \r\n                        className=\"h-full bg-gradient-to-r from-blue-500 to-blue-400 transition-all duration-300\"\r\n                        style={{ width: `${loadingProgress[option.type]}%` }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {selectedType && (\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-themed-primary mb-2\">\r\n              Export Format\r\n            </label>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {exportOptions\r\n                .find(o => o.type === selectedType)\r\n                ?.formats.map(format => (\r\n                  <Button\r\n                    key={format}\r\n                    onClick={() => setSelectedFormat(format)}\r\n                    variant={selectedFormat === format ? 'filled' : 'default'}\r\n                    color=\"blue\"\r\n                    size=\"sm\"\r\n                  >\r\n                    {format.toUpperCase()}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {selectedType && selectedFormat && (\r\n          <Alert color=\"blue\">\r\n            <div className=\"text-sm\">\r\n              {selectedFormat === 'prometheus' && (\r\n                <>\r\n                  <strong>Prometheus Format:</strong> Metrics in OpenMetrics text format.\r\n                  Can be scraped by Prometheus or imported into Grafana.\r\n                </>\r\n              )}\r\n              {selectedFormat === 'influxdb' && (\r\n                <>\r\n                  <strong>InfluxDB Format:</strong> Line protocol format for direct import\r\n                  into InfluxDB or Telegraf.\r\n                </>\r\n              )}\r\n              {selectedFormat === 'csv' && (\r\n                <>\r\n                  <strong>CSV Format:</strong> Comma-separated values for spreadsheet\r\n                  applications or data analysis tools.\r\n                </>\r\n              )}\r\n              {selectedFormat === 'json' && (\r\n                <>\r\n                  <strong>JSON Format:</strong> Structured data for programmatic processing\r\n                  or custom visualizations.\r\n                </>\r\n              )}\r\n            </div>\r\n          </Alert>\r\n        )}\r\n\r\n        <Button\r\n          onClick={handleExport}\r\n          disabled={!selectedType || loading}\r\n          loading={loading}\r\n          variant=\"filled\"\r\n          color=\"green\"\r\n          leftSection={<Download className=\"w-4 h-4\" />}\r\n          fullWidth\r\n        >\r\n          Export Data\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataExportManager;","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport {\r\n  ToggleLeft,\r\n  ToggleRight,\r\n  AlertCircle,\r\n  Database,\r\n  Loader,\r\n  FileText,\r\n  Eye,\r\n  CheckCircle,\r\n  StopCircle\r\n} from 'lucide-react';\r\nimport { useData } from '@contexts/DataContext';\r\nimport ApiService from '@services/api.service';\r\nimport { useBackendOperation } from '@hooks/useBackendOperation';\r\nimport operationStateService from '@services/operationState.service';\r\nimport { formatBytes } from '@utils/formatters';\r\n\r\n// Import manager components\r\nimport AuthenticationManager from './AuthenticationManager';\r\nimport CacheManager from './CacheManager';\r\nimport LogProcessingManager from './LogProcessingManager';\r\nimport ThemeManager from './ThemeManager';\r\nimport AlertsManager from './AlertsManager';\r\nimport DataExportManager from './DataExportManager';\r\nimport { Card } from '@components/ui/Card';\r\nimport { Button } from '@components/ui/Button';\r\nimport { Alert } from '@components/ui/Alert';\r\n\r\n// Mock Mode Manager Component\r\nconst MockModeManager: React.FC<{\r\n  mockMode: boolean;\r\n  onToggle: () => void;\r\n  disabled: boolean;\r\n}> = ({ mockMode, onToggle, disabled }) => {\r\n  return (\r\n    <Card>\r\n      <h3 className=\"text-lg font-semibold text-themed-primary mb-4\">Mock Mode</h3>\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <p className=\"text-themed-secondary\">Enable mock data for demonstration</p>\r\n          <p className=\"text-sm text-themed-muted mt-1\">\r\n            Simulates realistic cache data and download activity\r\n          </p>\r\n        </div>\r\n        <Button\r\n          onClick={onToggle}\r\n          disabled={disabled}\r\n          variant=\"filled\"\r\n          color=\"blue\"\r\n          leftSection={\r\n            mockMode ? <ToggleRight className=\"w-5 h-5\" /> : <ToggleLeft className=\"w-5 h-5\" />\r\n          }\r\n        >\r\n          {mockMode ? 'Enabled' : 'Disabled'}\r\n        </Button>\r\n      </div>\r\n      {mockMode && (\r\n        <div className=\"mt-4\">\r\n          <Alert color=\"blue\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n              <span className=\"text-sm\">Mock mode active - API actions disabled</span>\r\n            </div>\r\n          </Alert>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\n// Database Manager Component\r\nconst DatabaseManager: React.FC<{\r\n  isAuthenticated: boolean;\r\n  mockMode: boolean;\r\n  onError?: (message: string) => void;\r\n  onSuccess?: (message: string) => void;\r\n  onDataRefresh?: () => void;\r\n}> = ({ isAuthenticated, mockMode, onError, onSuccess, onDataRefresh }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleResetDatabase = async () => {\r\n    if (!isAuthenticated) {\r\n      onError?.('Authentication required');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm('Delete all download history?')) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const result = await ApiService.resetDatabase();\r\n      if (result) {\r\n        onSuccess?.(result.message || 'Database reset successfully');\r\n        setTimeout(() => onDataRefresh?.(), 2000);\r\n      }\r\n    } catch (err: any) {\r\n      onError?.(err.message || 'Failed to reset database');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <div className=\"flex items-center space-x-2 mb-4\">\r\n        <Database className=\"w-5 h-5 text-themed-accent\" />\r\n        <h3 className=\"text-lg font-semibold text-themed-primary\">Database Management</h3>\r\n      </div>\r\n      <p className=\"text-themed-muted text-sm mb-4\">Manage download history and statistics</p>\r\n      <Button\r\n        onClick={handleResetDatabase}\r\n        disabled={loading || mockMode || !isAuthenticated}\r\n        loading={loading}\r\n        variant=\"filled\"\r\n        color=\"red\"\r\n        leftSection={<Database className=\"w-4 h-4\" />}\r\n        fullWidth\r\n      >\r\n        Reset Database\r\n      </Button>\r\n      <p className=\"text-xs text-themed-muted mt-2\">\r\n        Clears all download history (does not affect cached files)\r\n      </p>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// Log File Manager Component\r\nconst LogFileManager: React.FC<{\r\n  isAuthenticated: boolean;\r\n  mockMode: boolean;\r\n  onError?: (message: string) => void;\r\n  onSuccess?: (message: string) => void;\r\n  onDataRefresh?: () => void;\r\n  onBackgroundOperation?: (service: string | null) => void;\r\n}> = ({ isAuthenticated, mockMode, onError, onSuccess, onDataRefresh, onBackgroundOperation }) => {\r\n  const [serviceCounts, setServiceCounts] = useState<Record<string, number>>({});\r\n  const [config, setConfig] = useState({\r\n    logPath: '/logs/access.log',\r\n    services: [] as string[]\r\n  });\r\n  const [activeServiceRemoval, setActiveServiceRemoval] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const serviceRemovalOp = useBackendOperation('activeServiceRemoval', 'serviceRemoval', 30);\r\n\r\n  useEffect(() => {\r\n    loadConfig();\r\n    restoreServiceRemoval();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onBackgroundOperation?.(activeServiceRemoval);\r\n  }, [activeServiceRemoval, onBackgroundOperation]);\r\n\r\n  const loadConfig = async () => {\r\n    try {\r\n      const [configData, counts] = await Promise.all([\r\n        ApiService.getConfig(),\r\n        ApiService.getServiceLogCounts()\r\n      ]);\r\n      setConfig(configData);\r\n      setServiceCounts(counts);\r\n    } catch (err) {\r\n      console.error('Failed to load config:', err);\r\n      // Only use fallback if we truly failed to load\r\n      setConfig({\r\n        logPath: '/logs/access.log',\r\n        services: ['steam', 'epic', 'origin', 'blizzard', 'wsus', 'riot']\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const restoreServiceRemoval = async () => {\r\n    const serviceOp = await serviceRemovalOp.load();\r\n    if (serviceOp?.data?.service) {\r\n      setActiveServiceRemoval(serviceOp.data.service);\r\n      onSuccess?.(`Removing ${serviceOp.data.service} entries from logs (operation resumed)...`);\r\n      setTimeout(async () => {\r\n        await serviceRemovalOp.clear();\r\n        setActiveServiceRemoval(null);\r\n        // Reload config without showing loading state\r\n        try {\r\n          const [configData, counts] = await Promise.all([\r\n            ApiService.getConfig(),\r\n            ApiService.getServiceLogCounts()\r\n          ]);\r\n          setConfig(configData);\r\n          setServiceCounts(counts);\r\n        } catch (err) {\r\n          console.error('Failed to reload config:', err);\r\n        }\r\n        onDataRefresh?.();\r\n      }, 10000);\r\n    }\r\n  };\r\n\r\n  const handleRemoveServiceLogs = async (serviceName: string) => {\r\n    if (!isAuthenticated) {\r\n      onError?.('Authentication required');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`Remove all ${serviceName} entries?`)) return;\r\n\r\n    try {\r\n      setActiveServiceRemoval(serviceName);\r\n      await serviceRemovalOp.save({ service: serviceName });\r\n      const result = await ApiService.removeServiceFromLogs(serviceName);\r\n\r\n      if (result) {\r\n        onSuccess?.(result.message || `${serviceName} entries removed successfully`);\r\n      }\r\n\r\n      await serviceRemovalOp.clear();\r\n      setTimeout(async () => {\r\n        setActiveServiceRemoval(null);\r\n        // Reload config without showing loading state\r\n        try {\r\n          const [configData, counts] = await Promise.all([\r\n            ApiService.getConfig(),\r\n            ApiService.getServiceLogCounts()\r\n          ]);\r\n          setConfig(configData);\r\n          setServiceCounts(counts);\r\n        } catch (err) {\r\n          console.error('Failed to reload config:', err);\r\n        }\r\n        onDataRefresh?.();\r\n      }, 2000);\r\n    } catch (err: any) {\r\n      await serviceRemovalOp.clear();\r\n      setActiveServiceRemoval(null);\r\n\r\n      const errorMessage = err.message?.includes('read-only')\r\n        ? 'Logs directory is read-only. Remove :ro from docker-compose volume mount.'\r\n        : err.message || 'Action failed';\r\n      onError?.(errorMessage);\r\n    }\r\n  };\r\n\r\n  const services = config.services.length > 0 ? config.services : [];\r\n\r\n  return (\r\n    <Card>\r\n      <div className=\"flex items-center space-x-2 mb-4\">\r\n        <FileText className=\"w-5 h-5 text-themed-accent\" />\r\n        <h3 className=\"text-lg font-semibold text-themed-primary\">Log File Management</h3>\r\n      </div>\r\n      <p className=\"text-themed-muted text-sm mb-4\">\r\n        Remove service entries from{' '}\r\n        <code className=\"bg-themed-tertiary px-2 py-1 rounded\">{config.logPath}</code>\r\n      </p>\r\n      {isLoading ? (\r\n        <div className=\"flex items-center justify-center py-8\">\r\n          <Loader className=\"w-6 h-6 animate-spin text-themed-muted\" />\r\n        </div>\r\n      ) : services.length > 0 ? (\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\r\n          {services.map((service) => {\r\n          const isRemoving = activeServiceRemoval === service;\r\n          return (\r\n            <Button\r\n              key={service}\r\n              onClick={() => handleRemoveServiceLogs(service)}\r\n              disabled={\r\n                mockMode || !!activeServiceRemoval || serviceRemovalOp.loading || !isAuthenticated\r\n              }\r\n              variant=\"default\"\r\n              loading={isRemoving || serviceRemovalOp.loading}\r\n              className=\"flex flex-col items-center\"\r\n              fullWidth\r\n            >\r\n              {!isRemoving && !serviceRemovalOp.loading ? (\r\n                <>\r\n                  <span className=\"capitalize font-medium\">Clear {service}</span>\r\n                  {serviceCounts[service] !== undefined && (\r\n                    <span className=\"text-xs text-themed-muted mt-1\">\r\n                      ({serviceCounts[service].toLocaleString()} entries)\r\n                    </span>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <span className=\"capitalize font-medium\">Removing...</span>\r\n              )}\r\n            </Button>\r\n          );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-8 text-themed-muted\">\r\n          No services configured\r\n        </div>\r\n      )}\r\n      <div className=\"mt-4\">\r\n        <Alert color=\"yellow\">\r\n          <p className=\"text-xs\">\r\n            <strong>Warning:</strong> Requires write permissions to logs directory\r\n          </p>\r\n        </Alert>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// Main Management Tab Component\r\nconst ManagementTab: React.FC = () => {\r\n  const { mockMode, setMockMode, fetchData } = useData();\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [alerts, setAlerts] = useState<{\r\n    errors: { id: number; message: string }[];\r\n    success: string | null;\r\n  }>({ errors: [], success: null });\r\n\r\n  // State for background operations from child components\r\n  const [backgroundOperations, setBackgroundOperations] = useState<{\r\n    cacheClearing?: any;\r\n    logProcessing?: any;\r\n    serviceRemoval?: string | null;\r\n  }>({});\r\n\r\n  // Use ref to ensure migration only happens once\r\n  const hasMigratedRef = useRef(false);\r\n\r\n  // Alert management\r\n  const addError = useCallback((message: string) => {\r\n    setAlerts((prev) => ({\r\n      ...prev,\r\n      errors: [...prev.errors, { id: Date.now(), message }]\r\n    }));\r\n  }, []);\r\n\r\n  const setSuccess = useCallback((message: string) => {\r\n    setAlerts((prev) => ({ ...prev, success: message }));\r\n    setTimeout(() => setAlerts((prev) => ({ ...prev, success: null })), 10000);\r\n  }, []);\r\n\r\n  const clearError = useCallback((id: number) => {\r\n    setAlerts((prev) => ({\r\n      ...prev,\r\n      errors: prev.errors.filter((e) => e.id !== id)\r\n    }));\r\n  }, []);\r\n\r\n  const clearSuccess = useCallback(() => {\r\n    setAlerts((prev) => ({ ...prev, success: null }));\r\n  }, []);\r\n\r\n  // Initialize with migration\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      if (!hasMigratedRef.current) {\r\n        const migrated = await operationStateService.migrateFromLocalStorage();\r\n        if (migrated > 0) {\r\n          setSuccess(`Migrated ${migrated} operations from local storage to server`);\r\n        }\r\n        hasMigratedRef.current = true;\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, [setSuccess]);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Authentication - Always at top */}\r\n      <AuthenticationManager\r\n        onAuthChange={setIsAuthenticated}\r\n        onError={addError}\r\n        onSuccess={setSuccess}\r\n      />\r\n\r\n      {/* All Notifications Consolidated Here */}\r\n      <div className=\"space-y-4\">\r\n        {/* Regular Alerts */}\r\n        <AlertsManager alerts={alerts} onClearError={clearError} onClearSuccess={clearSuccess} />\r\n\r\n        {/* Cache Clearing Background Operation */}\r\n        {backgroundOperations.cacheClearing && (\r\n          <Alert color=\"blue\" icon={<Loader className=\"w-5 h-5 animate-spin\" />}>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex-1\">\r\n                <p className=\"font-medium\">Cache clearing in progress...</p>\r\n                {backgroundOperations.cacheClearing.bytesDeleted > 0 && (\r\n                  <p className=\"text-sm mt-1 opacity-75\">\r\n                    {formatBytes(backgroundOperations.cacheClearing.bytesDeleted)} cleared\r\n                  </p>\r\n                )}\r\n                <p className=\"text-sm mt-1 opacity-75\">\r\n                  {(backgroundOperations.cacheClearing.progress || 0).toFixed(0)}% complete\r\n                </p>\r\n              </div>\r\n              <Button\r\n                variant=\"filled\"\r\n                color=\"blue\"\r\n                size=\"sm\"\r\n                leftSection={<Eye className=\"w-4 h-4\" />}\r\n                onClick={backgroundOperations.cacheClearing.showModal}\r\n              >\r\n                View Details\r\n              </Button>\r\n            </div>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Log Processing Background Operation */}\r\n        {backgroundOperations.logProcessing && (\r\n          <Alert\r\n            color={backgroundOperations.logProcessing.status === 'complete' ? 'green' : 'yellow'}\r\n            icon={\r\n              backgroundOperations.logProcessing.status === 'complete' ? (\r\n                <CheckCircle className=\"w-5 h-5\" />\r\n              ) : (\r\n                <Loader className=\"w-5 h-5 animate-spin\" />\r\n              )\r\n            }\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex-1\">\r\n                <p className=\"font-medium\">{backgroundOperations.logProcessing.message}</p>\r\n                {backgroundOperations.logProcessing.detailMessage && (\r\n                  <p className=\"text-sm mt-1 opacity-75\">\r\n                    {backgroundOperations.logProcessing.detailMessage}\r\n                  </p>\r\n                )}\r\n                {backgroundOperations.logProcessing.progress > 0 &&\r\n                  backgroundOperations.logProcessing.status !== 'complete' && (\r\n                    <div className=\"mt-2\">\r\n                      <div className=\"w-full progress-track rounded-full h-2\">\r\n                        <div\r\n                          className=\"progress-bar-low h-2 rounded-full smooth-transition\"\r\n                          style={{\r\n                            width: `${Math.min(backgroundOperations.logProcessing.progress, 100)}%`\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs opacity-75 mt-1\">\r\n                        {backgroundOperations.logProcessing.progress.toFixed(1)}% complete\r\n                        {backgroundOperations.logProcessing.estimatedTime &&\r\n                          ` • ${backgroundOperations.logProcessing.estimatedTime} remaining`}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n              </div>\r\n              {backgroundOperations.logProcessing.status !== 'complete' &&\r\n                backgroundOperations.logProcessing.onCancel && (\r\n                  <Button\r\n                    variant=\"filled\"\r\n                    color=\"red\"\r\n                    size=\"sm\"\r\n                    leftSection={<StopCircle className=\"w-4 h-4\" />}\r\n                    onClick={backgroundOperations.logProcessing.onCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                )}\r\n            </div>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Service Removal Background Operation */}\r\n        {backgroundOperations.serviceRemoval && (\r\n          <Alert color=\"orange\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Loader className=\"w-5 h-5 animate-spin\" />\r\n              <div>\r\n                <p className=\"font-medium\">\r\n                  Removing {backgroundOperations.serviceRemoval} entries from logs...\r\n                </p>\r\n                <p className=\"text-sm mt-1\">This may take several minutes for large log files</p>\r\n              </div>\r\n            </div>\r\n          </Alert>\r\n        )}\r\n      </div>\r\n\r\n      {/* Mock Mode */}\r\n      <MockModeManager\r\n        mockMode={mockMode}\r\n        onToggle={() => setMockMode(!mockMode)}\r\n        disabled={false}\r\n      />\r\n\r\n      {/* Database Manager */}\r\n      <DatabaseManager\r\n        isAuthenticated={isAuthenticated}\r\n        mockMode={mockMode}\r\n        onError={addError}\r\n        onSuccess={setSuccess}\r\n        onDataRefresh={fetchData}\r\n      />\r\n\r\n      {/* Cache Manager - Pass notification callback */}\r\n      <CacheManager\r\n        isAuthenticated={isAuthenticated}\r\n        mockMode={mockMode}\r\n        onError={addError}\r\n        onSuccess={setSuccess}\r\n        onBackgroundOperation={(op) =>\r\n          setBackgroundOperations((prev) => ({ ...prev, cacheClearing: op }))\r\n        }\r\n      />\r\n\r\n      {/* Log Processing Manager - Pass notification callback */}\r\n      <LogProcessingManager\r\n        isAuthenticated={isAuthenticated}\r\n        mockMode={mockMode}\r\n        onError={addError}\r\n        onSuccess={setSuccess}\r\n        onDataRefresh={fetchData}\r\n        onBackgroundOperation={(op) =>\r\n          setBackgroundOperations((prev) => ({ ...prev, logProcessing: op }))\r\n        }\r\n      />\r\n\r\n      {/* Log File Manager - Pass notification callback */}\r\n      <LogFileManager\r\n        isAuthenticated={isAuthenticated}\r\n        mockMode={mockMode}\r\n        onError={addError}\r\n        onSuccess={setSuccess}\r\n        onDataRefresh={fetchData}\r\n        onBackgroundOperation={(service) =>\r\n          setBackgroundOperations((prev) => ({ ...prev, serviceRemoval: service }))\r\n        }\r\n      />\r\n\r\n      {/* Data Export Manager */}\r\n      <DataExportManager\r\n        isAuthenticated={isAuthenticated}\r\n        mockMode={mockMode}\r\n        onError={addError}\r\n        onSuccess={setSuccess}\r\n      />\r\n\r\n      {/* Theme Manager */}\r\n      <ThemeManager isAuthenticated={isAuthenticated} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagementTab;\r\n"],"names":["fetchStateOrNull","url","response","error","getApiUrl","__vite_import_meta_env__","API_URL","OperationStateService","key","result","type","data","expirationMinutes","authService","updates","keys","migrated","localData","parsed","err","operationStateService","useBackendOperation","operation","setOperation","useState","loading","setLoading","setError","save","useCallback","newState","load","state","stateData","operationState","clear","update","prev","useEffect","Button","children","variant","color","size","leftSection","rightSection","fullWidth","className","disabled","props","getVariantClasses","sizes","jsxs","jsx","Modal","opened","onClose","title","React","X","AuthenticationManager","onAuthChange","onError","onSuccess","isAuthenticated","setIsAuthenticated","authChecking","setAuthChecking","showAuthModal","setShowAuthModal","apiKey","setApiKey","authError","setAuthError","authLoading","setAuthLoading","checkAuth","handleAuthenticate","handleRegenerateKey","Fragment","Alert","Unlock","Lock","AlertCircle","Key","e","CacheManager","mockMode","onBackgroundOperation","cacheClearProgress","setCacheClearProgress","showCacheClearModal","setShowCacheClearModal","actionLoading","setActionLoading","config","setConfig","cacheOp","_a","loadConfig","restoreCacheOperation","configData","ApiService","cacheClear","status","startCacheClearPolling","operationId","pollInterval","handleCacheClearComplete","progress","formatBytes","handleClearAllCache","handleCancelCacheClear","isCacheClearingInBackground","progressPercent","Card","HardDrive","Trash2","CheckCircle","Loader","StopCircle","LogProcessingManager","onDataRefresh","isProcessingLogs","setIsProcessingLogs","processingStatus","setProcessingStatus","signalRConnected","setSignalRConnected","logProcessingOp","signalRConnection","useRef","pollingInterval","reconnectTimeout","handleCancelProcessing","restoreLogProcessing","setupSignalR","logOp","_b","startProcessingPolling","connection","signalR.HubConnectionBuilder","_c","connectionId","checkStatus","currentStatus","handleResetLogs","handleProcessAllLogs","FileText","RefreshCw","PlayCircle","ThemeManager","themes","setThemes","currentTheme","setCurrentTheme","dragActive","setDragActive","uploadError","setUploadError","uploadSuccess","setUploadSuccess","previewTheme","setPreviewTheme","createModalOpen","setCreateModalOpen","editModalOpen","setEditModalOpen","editingTheme","setEditingTheme","expandedGroups","setExpandedGroups","copiedColor","setCopiedColor","colorEditingStarted","setColorEditingStarted","createSearchQuery","setCreateSearchQuery","editSearchQuery","setEditSearchQuery","editedTheme","setEditedTheme","newTheme","setNewTheme","fileInputRef","hexToRgba","hex","alpha","r","g","b","parseColorValue","rgbaMatch","x","updateColorWithAlpha","isCreate","colorValue","filterColorGroups","groups","search","searchLower","group","filteredColors","affect","colorGroups","Palette","Type","Layout","Component","Square","Activity","Gamepad2","Brush","loadThemes","currentThemeId","themeService","computedStyle","getCurrentColor","varName","fallback","themeList","handleThemeChange","themeId","theme","handlePreview","toggleGroup","groupName","createColorEditingStarted","setCreateColorEditingStarted","handleColorStart","currentValue","handleColorChange","value","restoreCreatePreviousColor","previousColor","currentColor","getCreateColorHistory","handleEditColorStart","historyKey","handleEditColorChange","restorePreviousColor","getEditColorHistory","copyColor","textarea","handleDrag","handleDrop","handleFile","file","resolve","handleDelete","themeName","API_BASE","deletedFiles","t","errorMsg","details","cleanupThemes","handleEditTheme","isSystemTheme","latestTheme","themeData","colorKeys","k","handleSaveEditedTheme","cleanColors","updatedTheme","tomlContent","blob","savedTheme","handleCreateTheme","loadPresetColors","preset","exportTheme","a","downloadSampleTheme","sampleToml","Plus","Sparkles","Moon","Sun","Download","EyeOff","Eye","Check","Edit","Upload","Info","Search","Icon","isExpanded","ChevronDown","ChevronRight","item","idx","currentAlpha","Percent","newAlpha","Copy","RotateCcw","Save","historyColor","AlertsManager","alerts","onClearError","onClearSuccess","exportOptions","Database","TrendingUp","Clock","DataExportManager","_isAuthenticated","_mockMode","selectedType","setSelectedType","selectedFormat","setSelectedFormat","loadingProgress","setLoadingProgress","copiedEndpoint","setCopiedEndpoint","metricsSecured","setMetricsSecured","res","convertToCSV","headers","csvHeaders","csvRows","row","header","convertToPrometheus","timestamp","metrics","client","service","cache","stats","convertToInfluxDB","lines","simulateProgress","interval","handleExport","progressInterval","filename","mimeType","content","link","copyToClipboard","text","endpoint","apiBaseUrl","Link","option","o","format","MockModeManager","onToggle","ToggleRight","ToggleLeft","DatabaseManager","handleResetDatabase","LogFileManager","serviceCounts","setServiceCounts","activeServiceRemoval","setActiveServiceRemoval","isLoading","setIsLoading","serviceRemovalOp","restoreServiceRemoval","counts","serviceOp","handleRemoveServiceLogs","serviceName","errorMessage","services","isRemoving","ManagementTab","setMockMode","fetchData","useData","setAlerts","backgroundOperations","setBackgroundOperations","hasMigratedRef","addError","message","setSuccess","clearError","id","clearSuccess","op"],"mappings":"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"}