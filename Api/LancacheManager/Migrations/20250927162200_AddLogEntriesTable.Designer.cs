// <auto-generated />
using System;
using LancacheManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LancacheManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250927162200_AddLogEntriesTable")]
    partial class AddLogEntriesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("LancacheManager.Models.ClientStats", b =>
                {
                    b.Property<string>("ClientIp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("TEXT");

                    b.Property<long>("TotalCacheHitBytes")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalCacheMissBytes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalDownloads")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClientIp");

                    b.HasIndex("LastSeen")
                        .HasDatabaseName("IX_ClientStats_LastSeen");

                    b.ToTable("ClientStats");
                });

            modelBuilder.Entity("LancacheManager.Models.Download", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CacheHitBytes")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CacheMissBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint?>("DepotId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<uint?>("GameAppId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EndTime")
                        .HasDatabaseName("IX_Downloads_EndTime");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Downloads_IsActive");

                    b.HasIndex("StartTime")
                        .IsDescending()
                        .HasDatabaseName("IX_Downloads_StartTime");

                    b.HasIndex("ClientIp", "Service", "IsActive")
                        .HasDatabaseName("IX_Downloads_Client_Service_Active");

                    b.ToTable("Downloads");
                });

            modelBuilder.Entity("LancacheManager.Models.LogEntryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BytesServed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CacheStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<uint?>("DepotId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DownloadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusCode")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DownloadId")
                        .HasDatabaseName("IX_LogEntries_DownloadId");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_LogEntries_Timestamp");

                    b.HasIndex("ClientIp", "Service")
                        .HasDatabaseName("IX_LogEntries_Client_Service");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("LancacheManager.Models.ServiceStats", b =>
                {
                    b.Property<string>("Service")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("TEXT");

                    b.Property<long>("TotalCacheHitBytes")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalCacheMissBytes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalDownloads")
                        .HasColumnType("INTEGER");

                    b.HasKey("Service");

                    b.HasIndex("LastActivity")
                        .HasDatabaseName("IX_ServiceStats_LastActivity");

                    b.ToTable("ServiceStats");
                });

            modelBuilder.Entity("LancacheManager.Models.SteamDepotMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AppId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Confidence")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DepotId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DiscoveredAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppId")
                        .HasDatabaseName("IX_SteamDepotMappings_AppId");

                    b.HasIndex("DepotId")
                        .HasDatabaseName("IX_SteamDepotMappings_DepotId");

                    b.HasIndex("DepotId", "AppId")
                        .IsUnique()
                        .HasDatabaseName("IX_SteamDepotMappings_DepotId_AppId");

                    b.ToTable("SteamDepotMappings");
                });

            modelBuilder.Entity("LancacheManager.Models.LogEntryRecord", b =>
                {
                    b.HasOne("LancacheManager.Models.Download", "Download")
                        .WithMany()
                        .HasForeignKey("DownloadId");

                    b.Navigation("Download");
                });
#pragma warning restore 612, 618
        }
    }
}
